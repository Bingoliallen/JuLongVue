/**
 * 此处填写文件描述
 * @Author:
 * @Date:   2019-03-07
 * @Project qb
 */

import { TableColumn } from "ui-component-v4";
import { BufferedCodedicApi } from '../../api/qb-base/BufferedCodedicApi'//表码翻译api
import DateUtils  from '../../utils/date-utils'
export default {
    name: "QbTableColumn",

    props: {
        // 表码
        code: {
            type: String,
            default: "",
            required: false
        },
        // url
        url: {
            type: String,
            default: "",
            required: false
        },
        sortable: {
            type: [String, Boolean],
            default: false,
            required: false
        },
        //:fold="false" show-overflow-tooltip
        showOverflowTooltip: {
            type: Boolean,
            default: true,
            required: false
        },
        fold: {
            type: Boolean,
            default: false,
            required: false
        },
        dateTypes: String,
        format: {
            type: String,
            default: "yyyy-MM-dd",
            required: false
        },
        module: {
            type: String,
            default: "BASE_API"
        },
        //不使用缓存
        noCache: {
            type: Boolean,
            default: false,
            require: false
        },
        loadingShow:{
            type: Boolean,
            default: false
        }
    },
    data(){
        return{
            DateUtils:DateUtils
        }
    },
    computed: {},

    mixins: [TableColumn],

    mounted() {},

    methods: {
        _getCmpPropsCallback(attrs) {
            if (attrs.type === "operation-tpl") {
                attrs.sortable = false;
            }
        },

        _getCmpProps(bindProps) {
            bindProps.scope.column.sortable = false;
        },

        /**
         * 格式化列
         * @param value
         * @param column
         * @param row
         * @return {*}
         * @private
         */
        _formatValue(value, { column, row }) {
            if (this.$attrs.datetypes === "date") {
                if (this.$moment(value).isValid()) {
                    value = this.$moment(value).format(this.format);
                } else if(value && value!="-"){
                    value=this.DateUtils.strToDate(value,this.$attrs.informat,this.format);
                }
            }
            return value?value:"-";
        },
        /**
         * 加载表码
         */
        loadCode() {
            if (this.code || this.url) {
                let codedicApi=new BufferedCodedicApi(this.$props.module);
                codedicApi.reqData(this.$props, data => {
                    this.codeObj = data;
                },"Object");
            }
        }
    },

    created() {
        this.loadCode();
    }
};
