import Vue from "vue";
import Router from "vue-router";

Vue.use(Router);

/* Layout */
// import Layout from "@/pages/layout/layout";
const { getSetting } = window.systemParamsUtils;
let layoutType = getSetting("LAYOUT")
const Layout = () => import(`@/pages/${layoutType}/layout`);

/* Router Modules */
import mobile from "./modules/mobile";
import about from "./modules/about";
import demoRouter from "./modules/demo";
import demosRouter from "./modules/demos";
import components from "./modules/components";
import qbComponents from "./modules/qb-components";
/** note: Submenu only appear when children.length>=1
 *  detail see  https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html
 **/

/**
     当设置 true 的时候该路由不会在侧边栏出现 如401，login等页面，或者如一些编辑页面/edit/1
     hidden: true // (默认 false)

     当设置 noRedirect 的时候该路由在面包屑导航中不可被点击
     redirect: 'noRedirect'

     当你一个路由下面的 children 声明的路由大于1个时，自动会变成嵌套的模式--如组件页面
     只有一个时，会将那个子路由当做根路由显示在侧边栏--如引导页面
     若你想不管路由下面的 children 声明的个数都显示你的根路由
     你可以设置 alwaysShow: true，这样它就会忽略之前定义的规则，一直显示根路由
     alwaysShow: true

     name: 'router-name' //设定路由的名字，一定要填写不然使用<keep-alive>时会出现各种问题，缓存页面时使用到
     meta: {
      //设置该路由进入的权限，支持多个权限叠加（用户只需要拥有其中一个权限即可展示菜单）
      //如果没有设置permission，则默认显示
      //constantRouterMaps中的路由不会进行权限过滤，asyncRouterMap中的路由才会进行权限过滤（asyncRouterMap中的permission才会起效）
      permission: ['permission_key', 'permission_key2'] 
      title: 'title' //设置该路由在侧边栏和面包屑中展示的名字
      icon: 'svg-name' //设置该路由的图标
      noCache: true //如果设置为true，则不会被 <keep-alive> 缓存(默认 false)
      breadcrumb: false // 如果设置为false，则不会在breadcrumb面包屑中显示
      belong: "" // 存在的目的在于 页内跳转的这些页面不在菜单显示，要判断菜单选中项，所以要标识他们属于的模块的path
     }
 **/
export const constantRouterMap = [
    {
        path: "/redirect",
        component: Layout,
        hidden: true,
        children: [
            {
                path: "/redirect/:path*",
                component: () => import("@/pages/common/redirect/index")
            }
        ]
    },
    {
        path: "/login",
        component: () => import("@/pages/demo/login-page/login-type-1"),
        hidden: true
    },
    {
        path: "/",
        component: Layout,
        redirect: "/dashboard",
        meta: { icon: "icon-file", noCache: false },
        children: [
            {
                path: "/dashboard",
                component: () => import("@/pages/dashboard"),
                name: "Dashboard",
                meta: { title: "首页", icon: "icon-file", noCache: false, layout: "page" }
            }
        ]
    },
    about,
    components,
    qbComponents,
    demoRouter,
    demosRouter,
    mobile,
    // {
    //   path: '/auth-redirect',
    //   component: () => import('@/pages/login/authredirect'),
    //   hidden: true
    // },
    // {
    //   path: '/401',
    //   component: () => import('@/pages/errorPage/401'),
    //   hidden: true
    // },
];

export const asyncRouterMap = [

    /** When your routing table is too long, you can split it into small modules**/
    {
        path: "*",
        component: () => import("@/pages/common/error-page/404.vue"),
        hidden: true
    }
];

export default new Router({
    // mode: "history", // require service support
    scrollBehavior: () => ({ y: 0 }),
    routes: constantRouterMap
});
