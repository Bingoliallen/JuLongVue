module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 51);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("element-ui");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return str2arr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return data2type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return uniqArr; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/*
 * @Author: lutz
 * @Date: 2019-06-24 11:16:27
 * @Last Modified by: lutz
 * @Last Modified time: 2019-07-01 15:15:41
 * @Last Modified by: huangjq
 * @Last Modified time: 2020-07-24 11:10:20
 */



/**
 * string to array
 * @param {any} val 需要处理的数据
 * @param {string} seq 字符串分隔符
 * @param {boolen} clone 是否深度拷贝
 * @param {array} dataSource 数据源
 * @param {string|number} dataSourceValueName 数据源需要匹配字段
 *
 * @return {array}
 */
function str2arr(val) {
    var seq = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';
    var clone = arguments[2];
    var dataSource = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
    var dataSourceValueName = arguments[4];
    var isDataSourceChanged = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNil(val) || val === '') {
        return [];
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(val)) {
        return clone ? lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(val) : val;
    }

    var data = val.toString().split(seq);

    // 数据源必须是数组 && 长度大于0 && 展示数据必须是数组
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(dataSource) && dataSource.length && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(data)) {
        // 对象数组 或 数组的截取第一个数据判断数字类型
        if (dataSourceValueName != null && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(dataSource[0][dataSourceValueName]) || !dataSourceValueName && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(dataSource[0])) {
            data = data.map(function (item) {
                return Number(item);
            });
        }
    }

    if (isDataSourceChanged) {
        // huangjq 2020/07/24
        // 数据源改变后，有些原有的value不存在了，重新过滤
        var keys = [];
        dataSource.map(function (item) {
            return keys.push(item[dataSourceValueName]);
        });
        data = data.filter(function (item) {
            return keys.indexOf(item) > -1;
        });
    }

    return data;
}

/**
 * 将数据转换成指定数据类型
 * @param {*} val
 * @param {Array|String|Object} type 需要转换的类型
 * @param {String} seq 分隔符
 */
function data2type(val, type) {
    var seq = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';

    var bool = lodash__WEBPACK_IMPORTED_MODULE_0___default.a['is' + type] && lodash__WEBPACK_IMPORTED_MODULE_0___default.a['is' + type](val);

    if (bool) {
        return val;
    }

    // 为保证选项可选中，这里不能将数字转成字符串
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(val) && type === 'String') {
        return val;
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(val) && type === 'String') {
        return val.sort().join(seq);
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isString(val) && type === 'Array') {
        return val.split(seq);
    }

    var map = {
        String: '',
        Array: [],
        Object: {}
    };

    return map[type];
}

/**
 * 两个数组合并成不重复的数组
 * @param {Array} exp
 * @param {Array} val
 */
function uniqArr(exp, val) {
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(exp) && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(val)) {
        return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.union(exp, val);
    }

    return [];
}

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return complex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return filterObj; });
/* unused harmony export replaceObj */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return complexObj; });
/* unused harmony export hyphenate */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return getCmpProps; });
/* unused harmony export getCmpEvents */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return getCmpType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return getCmpPropsFromAttrs; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
 * @Author: lutz
 * @Date: 2019-06-05 17:05:32
 * @Last Modified by: lutz
 * @Last Modified time: 2019-12-06 08:58:43
 */



/**
 * 修改组件属性或对象的属性
 * 深度克隆
 * @param {Object} cpm
 * @param {Array|Object} hook 生命周期函数和组件属性；数组默认删除，对象默认替换（恒等undefined，默认删除）
 * @param {Array|Object} watch 监听属性的修改
 * @return {Object}
 */
function complex(cpm, hook, watch) {
    var component = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(cpm);

    if (hook) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(hook)) {
            hook.forEach(function (item) {
                delete component[item];
            });
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(hook)) {
            for (var key in hook) {
                if (hook[key] === void 0) {
                    delete component[key];
                } else {
                    component[key] = hook[key];
                }
            }
        }
    }

    if (watch) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(watch) && component.watch) {
            watch.forEach(function (item) {
                delete component.watch[item];
            });
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(watch)) {
            for (var _key in watch) {
                if (watch[_key] === void 0) {
                    delete component.watch[_key];
                } else {
                    component.watch[_key] = watch[_key];
                }
            }
        }
    }

    return component;
}

/**
 * 删除对象上的属性
 * @param {object} obj 需要操作的对象
 * @param {array} filterArr 需要删除的属性名称
 *
 * @return {object}
 */
function filterObj() {
    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var filterArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

    var newObj = _extends({}, obj);
    filterArr.forEach(function (item) {
        delete newObj[item];
    });
    return newObj;
}

/**
 * 替换对象上的属性
 * @param {object} obj 需要操作的对象
 * @param {object} filterObj 需要替换的属性名称，undefined则会删除对象上属性
 *
 * @return {object}
 */
function replaceObj() {
    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var filterObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var newObj = _extends({}, obj, filterObj);
    Object.keys(filterObj).forEach(function (item) {
        if (filterObj[item] === void 0) {
            delete newObj[item];
        }
    });
    return newObj;
}

/**
 * 根据参数操作对象
 * 浅拷贝
 * demo
 * a) 过滤undefined
 *  var obj = { input: void 0, change() { console.log('change') } }
 *  complexObj(obj, null, true) // { change: f }
 *  obj // { input: undefined, change: f }
 *
 * b) 删除属性
 *  var obj = { a: 2, b: 3 }, arr = ['a', 'c']
 *  complexObj(obj, arr) // { b: 3 }
 *  obj // {a: 2, b: 3}
 *
 * c) 替换属性
 *  var obj = { a: 2, b: 3 }, fobj = { a: void 0, c: 9, b: 4 }
 *  complexObj(obj, fobj) // { b: 4, c: 9 }
 *  obj // {a: 2, b: 3}
 *
 *
 * @param {object} obj 需要操作的对象
 * @param {array|object} filterVal 数组：需要删除的属性名称，对象：需要替换的属性名称，undefined则会删除对象上属性
 * @param {boolen} filterNull 是否过滤 undefined
 *
 * @return {object}
 */
function complexObj(obj, filterVal) {
    var filterNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    var newObj = _extends({}, obj);

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(filterVal)) {
        newObj = filterObj(obj, filterVal);
    } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(filterVal)) {
        newObj = replaceObj(obj, filterVal);
    }

    // 过滤 undefined
    if (filterNull) {
        Object.keys(newObj).forEach(function (item) {
            if (newObj[item] === void 0) {
                delete newObj[item];
            }
        });
    }

    return newObj;
}

var hyphenateRE = /\B([A-Z])/g;

/**
 * 将驼峰转换成-隔开
 * hyphenate('ElTable') => "el-table"
 * @param {string} str
 * @return {string}
 */
var hyphenate = function hyphenate(str) {
    return str.replace(hyphenateRE, "-$1").toLowerCase();
};

/**
 * 获取指定组件的参数值
 * @param cmp 组件对象，如ElTable
 * @param instance  当前组件对象,调用时，传this
 * @param filterObject 过滤属性值，{name:"11",sex:(props,val)=>val,age:undefined} 属性undefined 删除属性
 */
function getCmpProps(cmp, instance) {
    var filterObj = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    // 如果不是组件函数，则生成组件函数，主要是把混合的属性合并在一起
    if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isFunction(cmp)) {
        cmp = instance.constructor.extend(cmp);
    }
    // 传入属性值+默认的值
    var propsData = _extends({}, instance.$attrs, instance.$props);

    // 过滤属性值
    var cmpProps = {};
    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forOwn(cmp.options.props, function (value, key) {
        var propValue = propsData[key] || propsData[hyphenate(key)];
        // 过滤组件属性
        if (filterObj.hasOwnProperty(key)) {
            propValue = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isFunction(filterObj[key]) ? filterObj[key](propsData, propValue) : filterObj[key];
        }

        // 过滤 undefined
        if (propValue !== undefined) {
            cmpProps[key] = propValue;
        }
    });

    return cmpProps;
}

/**
 * 获取组件的事件对象
 * @param instance
 * @param filterObj {click:"handleClick",change:(evt)=>val,input:undefined} 属性undefined 删除属性
 * @returns {*}
 */
function getCmpEvents(instance) {
    var filterObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var listeners = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.clone(instance.$listeners);
    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forOwn(filterObj, function (val, key) {
        if (val && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isString(val)) {
            listeners[key] = instance[val];
        } else if (val && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isFunction(val)) {
            listeners[key] = val;
        } else if (val === undefined) {
            delete listeners[key];
        }
    });
    return listeners;
}

/**
 * 根据组件参数是，require、import获取组件的对象
 * @param type
 * @returns {type}
 */
function getCmpType(type) {
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(type) && type.default) {
        type = type.default;
    }
    if (type && type instanceof Promise) {
        var promise = type;
        type = function type(resolve, reject) {
            promise.then(function (obj) {
                resolve(obj);
            });
        };
    }
    return type;
}

/**
 * 从$attrs获取匹配的属性
 * @param instance
 * @param reg
 */
function getCmpPropsFromAttrs(instance, reg) {
    var attr = instance.$attrs;
    var obj = {};

    Object.keys(attr).map(function (item) {
        if (reg.test(item)) {
            obj[item.replace(reg, "")] = attr[item];
        }
    });

    return obj;
}

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return on; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return off; });
/* unused harmony export once */
/* unused harmony export hasClass */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return removeClass; });
/* unused harmony export getStyle */
/* unused harmony export setStyle */
/* unused harmony export isScroll */
/* unused harmony export getScrollContainer */
/* unused harmony export isInContainer */
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue__WEBPACK_IMPORTED_MODULE_0__);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/* istanbul ignore next */



var isServer = vue__WEBPACK_IMPORTED_MODULE_0___default.a.prototype.$isServer;
var SPECIAL_CHARS_REGEXP = /([\:\-\_]+(.))/g;
var MOZ_HACK_REGEXP = /^moz([A-Z])/;
var ieVersion = isServer ? 0 : Number(document.documentMode);

/* istanbul ignore next */
var trim = function trim(string) {
  return (string || "").replace(/^[\s\uFEFF]+|[\s\uFEFF]+$/g, "");
};
/* istanbul ignore next */
var camelCase = function camelCase(name) {
  return name.replace(SPECIAL_CHARS_REGEXP, function (_, separator, letter, offset) {
    return offset ? letter.toUpperCase() : letter;
  }).replace(MOZ_HACK_REGEXP, "Moz$1");
};

/* istanbul ignore next */
var on = function () {
  if (!isServer && document.addEventListener) {
    return function (element, event, handler) {
      if (element && event && handler) {
        element.addEventListener(event, handler, false);
      }
    };
  } else {
    return function (element, event, handler) {
      if (element && event && handler) {
        element.attachEvent("on" + event, handler);
      }
    };
  }
}();

/* istanbul ignore next */
var off = function () {
  if (!isServer && document.removeEventListener) {
    return function (element, event, handler) {
      if (element && event) {
        element.removeEventListener(event, handler, false);
      }
    };
  } else {
    return function (element, event, handler) {
      if (element && event) {
        element.detachEvent("on" + event, handler);
      }
    };
  }
}();

/* istanbul ignore next */
var once = function once(el, event, fn) {
  var listener = function listener() {
    if (fn) {
      fn.apply(this, arguments);
    }
    off(el, event, listener);
  };
  on(el, event, listener);
};

/* istanbul ignore next */
function hasClass(el, cls) {
  if (!el || !cls) return false;
  if (cls.indexOf(" ") !== -1) throw new Error("className should not contain space.");
  if (el.classList) {
    return el.classList.contains(cls);
  } else {
    return (" " + el.className + " ").indexOf(" " + cls + " ") > -1;
  }
}

/* istanbul ignore next */
function addClass(el, cls) {
  if (!el) return;
  var curClass = el.className;
  var classes = (cls || "").split(" ");

  for (var i = 0, j = classes.length; i < j; i++) {
    var clsName = classes[i];
    if (!clsName) continue;

    if (el.classList) {
      el.classList.add(clsName);
    } else if (!hasClass(el, clsName)) {
      curClass += " " + clsName;
    }
  }
  if (!el.classList) {
    el.className = curClass;
  }
}

/* istanbul ignore next */
function removeClass(el, cls) {
  if (!el || !cls) return;
  var classes = cls.split(" ");
  var curClass = " " + el.className + " ";

  for (var i = 0, j = classes.length; i < j; i++) {
    var clsName = classes[i];
    if (!clsName) continue;

    if (el.classList) {
      el.classList.remove(clsName);
    } else if (hasClass(el, clsName)) {
      curClass = curClass.replace(" " + clsName + " ", " ");
    }
  }
  if (!el.classList) {
    el.className = trim(curClass);
  }
}

/* istanbul ignore next */
var getStyle = ieVersion < 9 ? function (element, styleName) {
  if (isServer) return;
  if (!element || !styleName) return null;
  styleName = camelCase(styleName);
  if (styleName === "float") {
    styleName = "styleFloat";
  }
  try {
    switch (styleName) {
      case "opacity":
        try {
          return element.filters.item("alpha").opacity / 100;
        } catch (e) {
          return 1.0;
        }
      default:
        return element.style[styleName] || element.currentStyle ? element.currentStyle[styleName] : null;
    }
  } catch (e) {
    return element.style[styleName];
  }
} : function (element, styleName) {
  if (isServer) return;
  if (!element || !styleName) return null;
  styleName = camelCase(styleName);
  if (styleName === "float") {
    styleName = "cssFloat";
  }
  try {
    var computed = document.defaultView.getComputedStyle(element, "");
    return element.style[styleName] || computed ? computed[styleName] : null;
  } catch (e) {
    return element.style[styleName];
  }
};

/* istanbul ignore next */
function setStyle(element, styleName, value) {
  if (!element || !styleName) return;

  if ((typeof styleName === "undefined" ? "undefined" : _typeof(styleName)) === "object") {
    for (var prop in styleName) {
      if (styleName.hasOwnProperty(prop)) {
        setStyle(element, prop, styleName[prop]);
      }
    }
  } else {
    styleName = camelCase(styleName);
    if (styleName === "opacity" && ieVersion < 9) {
      element.style.filter = isNaN(value) ? "" : "alpha(opacity=" + value * 100 + ")";
    } else {
      element.style[styleName] = value;
    }
  }
}

var isScroll = function isScroll(el, vertical) {
  if (isServer) return;

  var determinedDirection = vertical !== null || vertical !== undefined;
  var overflow = determinedDirection ? vertical ? getStyle(el, "overflow-y") : getStyle(el, "overflow-x") : getStyle(el, "overflow");

  return overflow.match(/(scroll|auto)/);
};

var getScrollContainer = function getScrollContainer(el, vertical) {
  if (isServer) return;

  var parent = el;
  while (parent) {
    if ([window, document, document.documentElement].includes(parent)) {
      return window;
    }
    if (isScroll(parent, vertical)) {
      return parent;
    }
    parent = parent.parentNode;
  }

  return parent;
};

var isInContainer = function isInContainer(el, container) {
  if (isServer || !el || !container) return false;

  var elRect = el.getBoundingClientRect();
  var containerRect = void 0;

  if ([window, document, document.documentElement, null, undefined].includes(container)) {
    containerRect = {
      top: 0,
      right: window.innerWidth,
      bottom: window.innerHeight,
      left: 0
    };
  } else {
    containerRect = container.getBoundingClientRect();
  }

  return elRect.top < containerRect.bottom && elRect.bottom > containerRect.top && elRect.right > containerRect.left && elRect.left < containerRect.right;
};

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: external "vue"
var external_vue_ = __webpack_require__(4);
var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

// CONCATENATED MODULE: ./src/utils/types.js
function isString(obj) {
  return Object.prototype.toString.call(obj) === '[object String]';
}

function isObject(obj) {
  return Object.prototype.toString.call(obj) === '[object Object]';
}

function isHtmlElement(node) {
  return node && node.nodeType === Node.ELEMENT_NODE;
}

var isFunction = function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
};

var isUndefined = function isUndefined(val) {
  return val === void 0;
};

var isDefined = function isDefined(val) {
  return val !== undefined && val !== null;
};
// CONCATENATED MODULE: ./src/utils/util.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return noop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return hasOwn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return toObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getValueByPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getPropByPath; });
/* unused harmony export generateId */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return valueEquals; });
/* unused harmony export escapeRegexpString */
/* unused harmony export arrayFindIndex */
/* unused harmony export arrayFind */
/* unused harmony export coerceTruthyValueToArray */
/* unused harmony export isIE */
/* unused harmony export isEdge */
/* unused harmony export autoprefixer */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return kebabCase; });
/* unused harmony export capitalize */
/* unused harmony export looseEqual */
/* unused harmony export arrayEquals */
/* unused harmony export isEqual */
/* unused harmony export isEmpty */
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };




var util_hasOwnProperty = Object.prototype.hasOwnProperty;

function noop() {}

function hasOwn(obj, key) {
  return util_hasOwnProperty.call(obj, key);
}

function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to;
}

function toObject(arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res;
}

var getValueByPath = function getValueByPath(object, prop) {
  prop = prop || "";
  var paths = prop.split(".");
  var current = object;
  var result = null;
  for (var i = 0, j = paths.length; i < j; i++) {
    var path = paths[i];
    if (!current) break;

    if (i === j - 1) {
      result = current[path];
      break;
    }
    current = current[path];
  }
  return result;
};

function getPropByPath(obj, path, strict) {
  var tempObj = obj;
  path = path.replace(/\[(\w+)\]/g, ".$1");
  path = path.replace(/^\./, "");

  var keyArr = path.split(".");
  var i = 0;
  for (var len = keyArr.length; i < len - 1; ++i) {
    if (!tempObj && !strict) break;
    var key = keyArr[i];
    if (key in tempObj) {
      tempObj = tempObj[key];
    } else {
      if (strict) {
        throw new Error("please transfer a valid prop path to form item!");
      }
      break;
    }
  }
  return {
    o: tempObj,
    k: keyArr[i],
    v: tempObj ? tempObj[keyArr[i]] : null
  };
}

var generateId = function generateId() {
  return Math.floor(Math.random() * 10000);
};

var valueEquals = function valueEquals(a, b) {
  // see: https://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript
  if (a === b) return true;
  if (!(a instanceof Array)) return false;
  if (!(b instanceof Array)) return false;
  if (a.length !== b.length) return false;
  for (var i = 0; i !== a.length; ++i) {
    if (a[i] !== b[i]) return false;
  }
  return true;
};

var escapeRegexpString = function escapeRegexpString() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  return String(value).replace(/[|\\{}()[\]^$+*?.]/g, "\\$&");
};

// TODO: use native Array.find, Array.findIndex when IE support is dropped
var arrayFindIndex = function arrayFindIndex(arr, pred) {
  for (var i = 0; i !== arr.length; ++i) {
    if (pred(arr[i])) {
      return i;
    }
  }
  return -1;
};

var arrayFind = function arrayFind(arr, pred) {
  var idx = arrayFindIndex(arr, pred);
  return idx !== -1 ? arr[idx] : undefined;
};

// coerce truthy value to array
var coerceTruthyValueToArray = function coerceTruthyValueToArray(val) {
  if (Array.isArray(val)) {
    return val;
  } else if (val) {
    return [val];
  } else {
    return [];
  }
};

var util_isIE = function isIE() {
  return !external_vue_default.a.prototype.$isServer && !isNaN(Number(document.documentMode));
};

var util_isEdge = function isEdge() {
  return !external_vue_default.a.prototype.$isServer && navigator.userAgent.indexOf("Edge") > -1;
};

var autoprefixer = function autoprefixer(style) {
  if ((typeof style === "undefined" ? "undefined" : _typeof(style)) !== "object") return style;
  var rules = ["transform", "transition", "animation"];
  var prefixes = ["ms-", "webkit-"];
  rules.forEach(function (rule) {
    var value = style[rule];
    if (rule && value) {
      prefixes.forEach(function (prefix) {
        style[prefix + rule] = value;
      });
    }
  });
  return style;
};

var kebabCase = function kebabCase(str) {
  var hyphenateRE = /([^-])([A-Z])/g;
  return str.replace(hyphenateRE, "$1-$2").replace(hyphenateRE, "$1-$2").toLowerCase();
};

var util_capitalize = function capitalize(str) {
  if (!isString(str)) return str;
  return str.charAt(0).toUpperCase() + str.slice(1);
};

var util_looseEqual = function looseEqual(a, b) {
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    return JSON.stringify(a) === JSON.stringify(b);
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
};

var arrayEquals = function arrayEquals(arrayA, arrayB) {
  arrayA = arrayA || [];
  arrayB = arrayB || [];

  if (arrayA.length !== arrayB.length) {
    return false;
  }

  for (var i = 0; i < arrayA.length; i++) {
    if (!util_looseEqual(arrayA[i], arrayB[i])) {
      return false;
    }
  }

  return true;
};

var isEqual = function isEqual(value1, value2) {
  if (Array.isArray(value1) && Array.isArray(value2)) {
    return arrayEquals(value1, value2);
  }
  return util_looseEqual(value1, value2);
};

var isEmpty = function isEmpty(val) {
  // null or undefined
  if (val == null) return true;

  if (typeof val === "boolean") return false;

  if (typeof val === "number") return !val;

  if (val instanceof Error) return val.message === "";

  switch (Object.prototype.toString.call(val)) {
    // String or Array
    case "[object String]":
    case "[object Array]":
      return !val.length;

    // Map or Set or File
    case "[object File]":
    case "[object Map]":
    case "[object Set]":
      {
        return !val.size;
      }
    // Plain Object
    case "[object Object]":
      {
        return !Object.keys(val).length;
      }
  }

  return false;
};

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function (target) {
  for (var i = 1, j = arguments.length; i < j; i++) {
    var source = arguments[i] || {};
    for (var prop in source) {
      if (source.hasOwnProperty(prop)) {
        var value = source[prop];
        if (value !== undefined) {
          target[prop] = value;
        }
      }
    }
  }

  return target;
});

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/* harmony default export */ __webpack_exports__["a"] = ({
    props: {
        valueName: String,
        labelName: String,
        disabledName: [String, Function],
        childrenName: String,
        isLeafName: String
    },
    computed: {
        defaultProp: function defaultProp() {
            var valueName = this.valueName,
                labelName = this.labelName,
                childrenName = this.childrenName,
                disabledName = this.disabledName,
                isLeafName = this.isLeafName;

            var _ref = this.props || {},
                value = _ref.value,
                label = _ref.label,
                children = _ref.children,
                disabled = _ref.disabled,
                isLeaf = _ref.isLeaf,
                other = _objectWithoutProperties(_ref, ['value', 'label', 'children', 'disabled', 'isLeaf']);

            return _extends({}, other, {
                value: valueName || value || 'value',
                label: labelName || label || 'label',
                disabled: disabledName || disabled || 'disabled',
                children: childrenName || children || 'children',
                isLeaf: isLeafName || isLeaf || 'isLeaf'
            });
        }
    }
});

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var main_dg_mixins_convert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9);
/* harmony import */ var main_dg_utils_data_convert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/*
@author lutz
@updateDate 2019-06-18
@describe
    props
        data {array} 组件数据源,透传到 $data.dataSource
        disabled-value {array|string} 禁用项
        seq {string} 分隔符（命名参考: https://nodejs.org/dist/latest-v10.x/docs/api/querystring.html）
        output-format {string} enum["String", "Array"]
    data
        dataSource {array} 数据源
    computed
        itemsWithDisabled @return {array<object>} 添加禁用状态到数据源
    watch
        data => dataSource 兼容组件 $props.data 对 $data.dataSource 值变化
*/




/* harmony default export */ __webpack_exports__["a"] = ({
    mixins: [main_dg_mixins_convert_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"]],
    props: {
        data: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        disabledValue: {
            type: [String, Array],
            default: function _default() {
                return [];
            }
        },
        seq: { type: String, default: ',' },
        outputFormat: {
            type: String,
            default: 'String',
            validator: function validator(val) {
                return ['String', 'Array'].indexOf(val) !== -1;
            }
        }
    },
    watch: {
        data: function data(val) {
            this.dataSource = val;
        },

        // dataSource 触发 data改变的方法
        dataSource: function dataSource(val) {
            this.$emit('change-data', val);
        }
    },
    data: function data() {
        return { dataSource: this.data };
    },

    computed: {
        itemsWithDisabled: function itemsWithDisabled() {
            var dataSource = this.dataSource,
                disabledValue = this.disabledValue,
                seq = this.seq,
                defaultProp = this.defaultProp;

            var disabledArr = Object(main_dg_utils_data_convert_js__WEBPACK_IMPORTED_MODULE_2__[/* str2arr */ "b"])(disabledValue, seq, true, dataSource, defaultProp.value);
            if (disabledArr.length < 1) {
                return dataSource;
            }
            // 深度拷贝,避免污染数据源($data)
            var data = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(dataSource);
            data.forEach(function (item) {
                var isInclude = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.includes(disabledArr, item[defaultProp.value]);
                // 这里if中的布尔值要分开写否则会报错
                if (isInclude) {
                    item[defaultProp.disabled] = true;
                }
            });
            return data;
        }
    }
});

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addResizeListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return removeResizeListener; });
/* harmony import */ var resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);
/* harmony import */ var resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_0__);


var isServer = typeof window === "undefined";

/* istanbul ignore next */
var resizeHandler = function resizeHandler(entries) {
  for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var entry = _ref;

    var listeners = entry.target.__resizeListeners__ || [];
    if (listeners.length) {
      listeners.forEach(function (fn) {
        fn();
      });
    }
  }
};

/* istanbul ignore next */
var addResizeListener = function addResizeListener(element, fn) {
  if (isServer) return;
  if (!element.__resizeListeners__) {
    element.__resizeListeners__ = [];
    element.__ro__ = new resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_0___default.a(resizeHandler);
    element.__ro__.observe(element);
  }
  element.__resizeListeners__.push(fn);
};

/* istanbul ignore next */
var removeResizeListener = function removeResizeListener(element, fn) {
  if (!element || !element.__resizeListeners__) return;
  element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);
  if (!element.__resizeListeners__.length) {
    element.__ro__.disconnect();
  }
};

/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = require("jquery");

/***/ }),
/* 13 */,
/* 14 */
/***/ (function(module, exports) {

module.exports = require("throttle-debounce/debounce");

/***/ }),
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */
/***/ (function(module, exports) {

module.exports = require("resize-observer-polyfill");

/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getChildrenRefs; });
function getChildrenRefs(component, ref) {
  var method = {};
  for (var key in component.methods) {
    method[key] = new Function("return this.$refs." + ref + "." + key + ".apply(this,arguments)");
  }
  return method;
}

/***/ }),
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./src/utils/resize-event.js
var resize_event = __webpack_require__(11);

// EXTERNAL MODULE: external "vue"
var external_vue_ = __webpack_require__(4);
var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

// CONCATENATED MODULE: ./src/utils/scrollbar-width.js


var scrollBarWidth = void 0;

/* harmony default export */ var scrollbar_width = (function () {
  if (external_vue_default.a.prototype.$isServer) return 0;
  if (scrollBarWidth !== undefined) return scrollBarWidth;

  var outer = document.createElement("div");
  outer.className = "el-scrollbar__wrap";
  outer.style.visibility = "hidden";
  outer.style.width = "100px";
  outer.style.position = "absolute";
  outer.style.top = "-9999px";
  document.body.appendChild(outer);

  var widthNoScroll = outer.offsetWidth;
  outer.style.overflow = "scroll";

  var inner = document.createElement("div");
  inner.style.width = "100%";
  outer.appendChild(inner);

  var widthWithScroll = inner.offsetWidth;
  outer.parentNode.removeChild(outer);
  scrollBarWidth = widthNoScroll - widthWithScroll;

  return scrollBarWidth;
});
// EXTERNAL MODULE: ./src/utils/util.js + 1 modules
var util = __webpack_require__(7);

// EXTERNAL MODULE: ./src/utils/dom.js
var dom = __webpack_require__(6);

// CONCATENATED MODULE: ./packages/scrollbar/src/util.js
var BAR_MAP = {
    vertical: {
        offset: "offsetHeight",
        scroll: "scrollTop",
        scrollSize: "scrollHeight",
        size: "height",
        key: "vertical",
        axis: "Y",
        client: "clientY",
        direction: "top"
    },
    horizontal: {
        offset: "offsetWidth",
        scroll: "scrollLeft",
        scrollSize: "scrollWidth",
        size: "width",
        key: "horizontal",
        axis: "X",
        client: "clientX",
        direction: "left"
    }
};

function renderThumbStyle(_ref) {
    var move = _ref.move,
        size = _ref.size,
        bar = _ref.bar;

    var style = {};
    var translate = "translate" + bar.axis + "(" + move + "%)";

    style[bar.size] = size;
    style.transform = translate;
    style.msTransform = translate;
    style.webkitTransform = translate;

    return style;
}
// CONCATENATED MODULE: ./packages/scrollbar/src/bar.js



/* istanbul ignore next */
/* harmony default export */ var src_bar = ({
  name: 'Bar',

  props: {
    vertical: Boolean,
    size: String,
    move: Number
  },

  computed: {
    bar: function bar() {
      return BAR_MAP[this.vertical ? 'vertical' : 'horizontal'];
    },
    wrap: function wrap() {
      return this.$parent.wrap;
    }
  },

  render: function render(h) {
    var size = this.size,
        move = this.move,
        bar = this.bar;

    return h(
      'div',
      {
        'class': ['el-scrollbar__bar', 'is-' + bar.key],
        on: {
          'mousedown': this.clickTrackHandler
        }
      },
      [h('div', {
        ref: 'thumb',
        'class': 'el-scrollbar__thumb',
        on: {
          'mousedown': this.clickThumbHandler
        },

        style: renderThumbStyle({ size: size, move: move, bar: bar }) })]
    );
  },


  methods: {
    clickThumbHandler: function clickThumbHandler(e) {
      // prevent click event of right button
      if (e.ctrlKey || e.button === 2) {
        return;
      }
      this.startDrag(e);
      this[this.bar.axis] = e.currentTarget[this.bar.offset] - (e[this.bar.client] - e.currentTarget.getBoundingClientRect()[this.bar.direction]);
    },
    clickTrackHandler: function clickTrackHandler(e) {
      var offset = Math.abs(e.target.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]);
      var thumbHalf = this.$refs.thumb[this.bar.offset] / 2;
      var thumbPositionPercentage = (offset - thumbHalf) * 100 / this.$el[this.bar.offset];

      this.wrap[this.bar.scroll] = thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100;
    },
    startDrag: function startDrag(e) {
      e.stopImmediatePropagation();
      this.cursorDown = true;

      Object(dom["c" /* on */])(document, 'mousemove', this.mouseMoveDocumentHandler);
      Object(dom["c" /* on */])(document, 'mouseup', this.mouseUpDocumentHandler);
      document.onselectstart = function () {
        return false;
      };
    },
    mouseMoveDocumentHandler: function mouseMoveDocumentHandler(e) {
      if (this.cursorDown === false) return;
      var prevPage = this[this.bar.axis];

      if (!prevPage) return;

      var offset = (this.$el.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]) * -1;
      var thumbClickPosition = this.$refs.thumb[this.bar.offset] - prevPage;
      var thumbPositionPercentage = (offset - thumbClickPosition) * 100 / this.$el[this.bar.offset];

      this.wrap[this.bar.scroll] = thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100;
    },
    mouseUpDocumentHandler: function mouseUpDocumentHandler(e) {
      this.cursorDown = false;
      this[this.bar.axis] = 0;
      Object(dom["b" /* off */])(document, 'mousemove', this.mouseMoveDocumentHandler);
      document.onselectstart = null;
    }
  },

  destroyed: function destroyed() {
    Object(dom["b" /* off */])(document, 'mouseup', this.mouseUpDocumentHandler);
  }
});
// EXTERNAL MODULE: external "jquery"
var external_jquery_ = __webpack_require__(12);
var external_jquery_default = /*#__PURE__*/__webpack_require__.n(external_jquery_);

// CONCATENATED MODULE: ./packages/scrollbar/src/main.js
// reference https://github.com/noeldelgado/gemini-scrollbar/blob/master/index.js







/* istanbul ignore next */
/* harmony default export */ var main = ({
    name: "DgScrollbar",

    components: { Bar: src_bar },

    props: {
        native: Boolean,
        wrapStyle: {},
        wrapClass: {},
        viewClass: {},
        viewStyle: {},
        noresize: Boolean, // 如果 container 尺寸不会发生变化，最好设置它可以优化性能
        tag: {
            type: String,
            default: "div"
        },
        // 加载锁定 tangDM++
        busyLoading: {
            type: Boolean,
            default: false
        },
        // 触顶或触左，滚动条位置偏移一小段距离
        loadDistance: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            sizeWidth: "0",
            sizeHeight: "0",
            moveX: 0,
            moveY: 0,
            cacheScrollHeight: null,
            cacheScrollWidth: null
        };
    },


    computed: {
        wrap: function wrap() {
            return this.$refs.wrap;
        }
    },

    render: function render(h) {
        var gutter = scrollbar_width();
        var style = this.wrapStyle;

        if (gutter) {
            var gutterWith = "-" + gutter + "px";
            var gutterStyle = "margin-bottom: " + gutterWith + "; margin-right: " + gutterWith + ";";

            if (Array.isArray(this.wrapStyle)) {
                style = Object(util["f" /* toObject */])(this.wrapStyle);
                style.marginRight = style.marginBottom = gutterWith;
            } else if (typeof this.wrapStyle === "string") {
                style += gutterStyle;
            } else {
                style = gutterStyle;
            }
        }
        var view = h(this.tag, {
            class: ["el-scrollbar__view", this.viewClass],
            style: this.viewStyle,
            ref: "resize"
        }, this.$slots.default);
        var wrap = h(
            "div",
            {
                ref: "wrap",
                style: style,
                on: {
                    "scroll": this.handleScroll
                },

                "class": [this.wrapClass, "el-scrollbar__wrap", gutter ? "" : "el-scrollbar__wrap--hidden-default"]
            },
            [[view]]
        );
        var nodes = void 0;

        if (!this.native) {
            nodes = [wrap, h(src_bar, {
                attrs: { move: this.moveX, size: this.sizeWidth }
            }), h(src_bar, {
                attrs: { vertical: true, move: this.moveY, size: this.sizeHeight }
            })];
        } else {
            nodes = [h(
                "div",
                { ref: "wrap", "class": [this.wrapClass, "el-scrollbar__wrap"], style: style },
                [[view]]
            )];
        }
        return h("div", { class: "el-scrollbar" }, nodes);
    },


    methods: {
        handleScroll: function handleScroll() {
            var wrap = this.wrap;

            // create-start author:tangDM #若内容没超出，则不滚动
            if (wrap.scrollHeight === wrap.clientHeight) return false;
            // create-end author:tangDM

            this.moveY = wrap.scrollTop * 100 / wrap.clientHeight;
            this.moveX = wrap.scrollLeft * 100 / wrap.clientWidth;

            // create-start author:tangDM
            // emit for listening scroll event
            this.$emit("scroll-event", wrap);

            // added for scrollbar go to content 's top side
            this.scrollToTopEvent();

            // added for scrollbar go to content 's bottom side
            this.scrollToBottomEvent();

            // added for scrollbar go to content 's left side
            this.scrollToLeftEvent();

            // added for scrollbar go to content 's right side
            this.scrollToRightEvent();
            // create-end author:tangDM
        },

        /**
         * 滚动条滚动到顶部触发事件
         *
         * create-start author:tangDM
         */
        scrollToTopEvent: function scrollToTopEvent() {
            var wrap = this.wrap;

            // 更新缓存的滚动内容高度
            this.cacheScrollHeight = wrap.scrollHeight;

            if (wrap.scrollTop === 0 && !this.busyLoading) {
                this.$emit("scroll-top");
            }
        },

        /**
         * 滚动条滚动到底部触发事件
         *
         * create-start author:tangDM
         */
        scrollToBottomEvent: function scrollToBottomEvent() {
            var _this = this;

            var wrap = this.wrap;

            // 更新缓存的滚动内容高度
            this.cacheScrollHeight = wrap.scrollHeight;

            // 检测是否滚动到底部
            if (wrap.scrollTop && wrap.scrollTop + wrap.clientHeight === wrap.scrollHeight && !this.busyLoading) {
                this.$nextTick(function () {
                    _this.$emit("scroll-bottom");
                });
            }
        },

        /**
         * 滚动条滚动到左侧触发事件
         *
         * create-start author:tangDM
         */
        scrollToLeftEvent: function scrollToLeftEvent() {
            var wrap = this.wrap;

            // 更新缓存的滚动内容宽度
            this.cacheScrollWidth = wrap.scrollWidth;

            if (wrap.scrollLeft === 0 && !this.busyLoading) {
                this.$emit("scroll-left");
            }
        },

        /**
         * 滚动条滚动到右侧触发事件
         *
         * create-start author:tangDM
         */
        scrollToRightEvent: function scrollToRightEvent() {
            var wrap = this.wrap;

            // 更新缓存的滚动内容宽度
            this.cacheScrollWidth = wrap.scrollWidth;

            if (wrap.scrollLeft + wrap.clientWidth === wrap.scrollWidth && !this.busyLoading) {
                this.$emit("scroll-right");
            }
        },

        /**
         * 滚动条滚动置顶
         *
         * create-start author:tangDM
         */
        goScrollToTop: function goScrollToTop() {
            this.goScrollToYAxis(0);
        },

        /**
         * 滚动条滚动置底
         *
         * create-start author:tangDM
         */
        goScrollToBottom: function goScrollToBottom() {
            this.goScrollToYAxis(this.wrap.scrollHeight);
        },

        /**
         * 滚动到 YAxis 指定的位置
         *
         * @param y 滚动到的位置值
         * @param animateTime 滚动执行的时间
         * @param callback [Function] 回调方法
         *
         * create-start author:tangDM
         */
        goScrollToYAxis: function goScrollToYAxis(y) {
            var animateTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;
            var callback = arguments[2];

            external_jquery_default()(this.wrap).animate({
                scrollTop: y
            }, animateTime, function () {
                callback && callback();
            });

            this.moveY = y * 100 / this.wrap.clientHeight;
        },


        /**
         * 滚动到 XAxis 指定的位置
         *
         * @param x 滚动到的位置值
         * @param animateTime 滚动执行的时间
         * @param callback [Function] 回调方法
         *
         * create-start author:tangDM
         */
        goScrollToXAxis: function goScrollToXAxis(x) {
            var animateTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;
            var callback = arguments[2];

            external_jquery_default()(this.wrap).animate({
                scrollLeft: x
            }, animateTime, function () {
                callback && callback();
            });

            this.moveX = x / this.wrap.clientWidth;
        },

        /**
         * 重置滚动条的尺寸
         *
         * create-start author:tangDM
         */
        update: function update() {
            var heightPercentage = void 0,
                widthPercentage = void 0;
            var wrap = this.wrap;
            if (!wrap) return;

            heightPercentage = wrap.clientHeight * 100 / wrap.scrollHeight;
            widthPercentage = wrap.clientWidth * 100 / wrap.scrollWidth;

            this.sizeHeight = heightPercentage < 100 ? heightPercentage + "%" : "";
            this.sizeWidth = widthPercentage < 100 ? widthPercentage + "%" : "";

            // create-start author:tangDM #更新滚动位置
            this.wrap.scrollTop = this.loadDistance && this.cacheScrollHeight && wrap.scrollTop === 0 ? wrap.scrollHeight - this.cacheScrollHeight : wrap.scrollTop;
            this.wrap.scrollLeft = this.loadDistance && this.cacheScrollWidth && wrap.scrollLeft === 0 ? wrap.scrollWidth - this.cacheScrollWidth : wrap.scrollLeft;
            // create-end
        }
    },

    mounted: function mounted() {
        if (this.native) return;
        this.$nextTick(this.update);
        !this.noresize && Object(resize_event["a" /* addResizeListener */])(this.$refs.resize, this.update);
    },
    beforeDestroy: function beforeDestroy() {
        if (this.native) return;
        !this.noresize && Object(resize_event["b" /* removeResizeListener */])(this.$refs.resize, this.update);
    }
});
// CONCATENATED MODULE: ./packages/scrollbar/index.js


/* istanbul ignore next */
main.install = function (Vue) {
    Vue.component(main.name, main);
};

/* harmony default export */ var scrollbar = __webpack_exports__["default"] = (main);

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table/src/main.vue?vue&type=template&id=dbfcea2e&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "dg-table" },
    [
      _c(
        "div",
        { staticClass: "dg-table__content" },
        [
          _c(
            "el-table",
            _vm._g(
              _vm._b(
                {
                  directives: [
                    {
                      name: "loading",
                      rawName: "v-loading",
                      value: _vm.loadding,
                      expression: "loadding"
                    }
                  ],
                  ref: "grid",
                  class: [
                    _vm.renderData.length === 0 && !_vm.$attrs.border
                      ? "is-hidden-border-bottom"
                      : ""
                  ],
                  attrs: {
                    data: _vm.renderData,
                    "row-key": _vm.rowKey,
                    prop: _vm.prop,
                    border: _vm.border
                  },
                  on: {
                    "selection-change": _vm.handleSelectItem,
                    "sort-change": _vm.handleSortChange
                  }
                },
                "el-table",
                _vm.attrs,
                false
              ),
              _vm.$listeners
            ),
            [
              _vm._t("default"),
              _c("template", { slot: "empty" }, [_vm._t("empty")], 2),
              _vm._t("append")
            ],
            2
          )
        ],
        1
      ),
      _vm.pagination && _vm.renderData.length > 0
        ? [
            _c(
              "el-pagination",
              _vm._b(
                {
                  staticClass: "dg-table__pagination",
                  on: {
                    "size-change": _vm.handleSizeChange,
                    "current-change": _vm.handleCurrentChange,
                    "prev-click": _vm.handlePrevClick,
                    "next-click": _vm.handleNextClick
                  }
                },
                "el-pagination",
                _vm.paginationOptions,
                false
              )
            )
          ]
        : [_vm._t("pagination")]
    ],
    2
  )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/table/src/main.vue?vue&type=template&id=dbfcea2e&

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(0);
var external_lodash_default = /*#__PURE__*/__webpack_require__.n(external_lodash_);

// EXTERNAL MODULE: external "sortablejs"
var external_sortablejs_ = __webpack_require__(28);
var external_sortablejs_default = /*#__PURE__*/__webpack_require__.n(external_sortablejs_);

// EXTERNAL MODULE: external "element-ui"
var external_element_ui_ = __webpack_require__(2);

// CONCATENATED MODULE: ./packages/table/src/autoPageSize.js
/**
 * 此处填写文件描述
 * @Author: yangjy
 * @Date: 2019-06-06
 * @Project ui-component-v4
 */



/* harmony default export */ var autoPageSize = (function (strats, count) {
    var pageTotal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;

    var pageSize = 10;
    if (strats && external_lodash_default.a.isFunction(strats)) {
        var height = strats(document.body.clientHeight || window.innerHeight, count);
        if (height <= 0) {
            return [10, 15, 20];
        }
        pageSize = Math.floor(height / 46 - 2);
        pageSize = pageSize || 1;
    }

    // let pageTotal = Math.ceil(count / pageSize);
    var pageSizes = [];
    // 遍历页数表
    for (var i = 1; i <= pageTotal; i++) {
        pageSizes.push(pageSize * i);
    }
    return pageSizes;
});
// EXTERNAL MODULE: ./src/utils/merge.js
var merge = __webpack_require__(8);

// EXTERNAL MODULE: ./src/dg-utils/children.refs.js
var children_refs = __webpack_require__(19);

// EXTERNAL MODULE: ./src/dg-utils/shear.js
var shear = __webpack_require__(5);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table/src/main.vue?vue&type=script&lang=js&
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


// info views by https://github.com/SortableJS/Sortable







var TableRefs = Object(children_refs["a" /* default */])(external_element_ui_["Table"], 'grid');

/* harmony default export */ var mainvue_type_script_lang_js_ = ({
    name: 'DgTable',

    provide: function provide() {
        return {
            overflow: this.overflow,
            paginationOptions: this.paginationOptions
        };
    },


    props: {
        // 透传属性
        // ElTable.ElTableBody 使用<DgTableSelect :prop="defaultProp" />
        prop: Object,
        // 默认数据
        data: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        // 分页类型 client | server
        pagingType: {
            type: String,
            default: 'server',
            validator: function validator(val) {
                return ['client', 'server'].indexOf(val) !== -1;
            }
        },
        // 是否可拖拽
        draggable: {
            type: Boolean,
            default: false
        },
        // 拖拽配置项
        dragProps: {
            type: Object,
            default: function _default() {}
        },
        // 是否开启分页
        pagination: {
            type: Boolean,
            default: true
        },
        // 分页配置参数
        paginationProps: {
            type: Object,
            default: function _default() {}
        },
        // 总条数
        paginationTotal: {
            type: Number,
            default: 10
        },
        // 开启是否自动计算分页条数
        autoPage: {
            type: [String, Function]
        },
        border: {
            type: Boolean,
            default: false
        },
        // 行 ID 名称
        rowKey: {
            type: [Function, String],
            default: 'id'
        },
        loading: {
            type: Boolean,
            default: false
        },
        overflow: {
            // tooltip、wrap、origin
            type: String,
            default: 'tooltip'
        },
        // 复选框默认选中值
        selectDefault: {
            type: [Number, String, Array]
        },
        // 若 selectDefault为String时的分隔符
        seq: {
            type: String,
            default: ','
        },
        tableDraggable: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            orignData: [],
            sortColumn: {},
            loadding: this.loading,
            // 默认数据
            dataSource: this.data,
            dataClient: this.data,
            // 拖拽对象
            sortable: null,
            // 分页参数配置
            paginationOptions: {
                currentPage: 1,
                pageSizes: [10, 20, 30],
                pageSize: 10,
                layout: 'total, sizes, prev, pager, next, jumper',
                total: this.paginationTotal
            },
            // 当前分页选中值
            currentSelected: []
        };
    },


    computed: {
        renderData: function renderData() {
            if (this.pagination == true && this.pagingType === 'client') {
                var column = this.sortColumn;
                var _paginationOptions = this.paginationOptions,
                    pageSize = _paginationOptions.pageSize,
                    currentPage = _paginationOptions.currentPage;

                var start = (currentPage - 1) * pageSize;

                var tmpData = [];
                if (!column.order) {
                    tmpData = this.dataClient;
                } else if (column.order === 'ascending') {
                    tmpData = external_lodash_default.a.sortBy(this.dataClient, function (item) {
                        return item[column.property];
                    });
                } else if (column.order === 'descending') {
                    tmpData = external_lodash_default.a.sortBy(this.dataClient, function (item) {
                        return -item[column.property];
                    });
                }

                this.dataSource = tmpData.slice(start, start + pageSize);
            } else if (this.pagination == false && this.pagingType === 'client') {
                this.dataSource = this.dataClient;
            }
            return this.dataSource;
        },


        // 拖拽参数配置
        dragOptions: function dragOptions() {
            return Object(merge["a" /* default */])({
                ghostClass: 'dg-table__placeholder',
                dragClass: 'dg-table__placeholder',
                chosenClass: 'dg-table__placeholder',
                setData: this.handleDragSetData,
                onEnd: this.handleDragOnEnd
            }, this.dragProps);
        },
        attrs: function attrs() {
            return _extends({}, Object(shear["d" /* getCmpProps */])(external_element_ui_["Table"], this), { draggable: this.tableDraggable });
        }
    },

    watch: {
        selectDefault: {
            deep: true,
            immediate: true,
            handler: function handler() {
                var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                var seq = this.seq;

                var check = val;
                if (external_lodash_default.a.isString(val)) {
                    // isString
                    check = val.split(seq);
                } else if (external_lodash_default.a.isNumber(val)) {
                    // isNumber
                    check = [val];
                }
                this.currentSelected = external_lodash_default.a.uniq(check);
            }
        },
        // 监听数据
        data: {
            deep: true,
            immediate: true,
            handler: function handler(data, oldData) {
                if (this.pagingType == 'client') {
                    this.orignData = data;
                    this.dataClient = data;
                    var totalPage = Math.ceil(data.length / this.paginationOptions.pageSize);
                    if (totalPage < this.paginationOptions.currentPage) {
                        this.paginationOptions.currentPage = totalPage || 1;
                    }
                    this.paginationOptions.total = data.length;
                } else {
                    this.dataSource = data;
                }
                // 客户端数据且没有分页
                if (!this.pagination && this.pagingType === 'client') {
                    this.dataSource = this.dataClient;
                }
            }
        },
        paginationTotal: {
            handler: function handler(val) {
                this.paginationOptions.total = val;
            }
        },
        paginationProps: {
            deep: true,
            immediate: true,
            handler: function handler(val) {
                var total = this.paginationOptions.total;
                this.pagingType === 'client' && (total = this.dataClient.length);
                if (this.autoPage) {
                    var _pageSizes = autoPageSize(this.autoPage, total);
                    this.paginationOptions = Object(merge["a" /* default */])({
                        currentPage: 1,
                        pageSizes: _pageSizes,
                        pageSize: _pageSizes[0],
                        layout: 'total, sizes, prev, pager, next, jumper',
                        total: total
                    });
                } else {
                    this.paginationOptions = Object(merge["a" /* default */])({
                        currentPage: 1,
                        pageSizes: [10, 20, 30],
                        pageSize: 10,
                        layout: 'total, sizes, prev, pager, next, jumper',
                        total: total
                    }, val);
                }
                if (!this.paginationOptions.pageSizes.includes(this.paginationOptions.pageSize)) {
                    this.paginationOptions.pageSizes.unshift(this.paginationOptions.pageSize);
                }
            }
        },
        // 监听服务端数据
        dataSource: {
            immediate: true,
            deep: true,
            handler: function handler(val) {
                // 选中
                this.handleDefCheck();
                this.$emit('change-data', val);
            }
        }
    },

    components: {
        ElTable: external_element_ui_["Table"],
        ElPagination: external_element_ui_["Pagination"]
    },

    methods: _extends({
        changeLoading: function changeLoading() {
            this.loadding = !this.loadding;
        },


        /**
         * 拖拽操作
         *
         */
        handleSortTable: function handleSortTable() {
            var el = this.$refs.grid.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0];
            this.sortable = external_sortablejs_default.a.create(el, this.dragOptions);
        },


        /**
         * 拖拽配置参数
         * @param dataTransfer
         */
        handleDragSetData: function handleDragSetData(dataTransfer) {
            dataTransfer.setData('Text', '');
        },


        /**
         * 拖拽显示排序
         * @param evt
         */
        handleDragOnEnd: function handleDragOnEnd(evt) {
            var data = this.pagingType === 'client' ? this.dataClient : this.dataSource;
            var targetRow = data.splice(evt.oldIndex, 1)[0];
            data.splice(evt.newIndex, 0, targetRow);

            // 拖拽回传数据
            this.$emit('drag-end', data);
        },


        /**
         * 页数值改变方法
         *
         * @param evt
         */
        handleSizeChange: function handleSizeChange(val) {
            this.paginationOptions.pageSize = val;
            this.paginationOptions.currentPage = 1;
            this.$emit('change-size', val);
        },


        /**
         * 当前页改变方法
         *
         * @param evt
         */
        handleCurrentChange: function handleCurrentChange(val) {
            this.paginationOptions.currentPage = val;
            this.$emit('change-current', val);
        },


        /**
         * 排序改变方法
         */
        handleSortChange: function handleSortChange(_ref) {
            var column = _ref.column,
                prop = _ref.prop,
                order = _ref.order;

            column && (this.sortColumn = column);
            // this.$emit('sort-change', { column, prop, order });
            this._handleSortChange({ column: column, prop: prop, order: order });
        },
        _handleSortChange: function _handleSortChange() {},


        /**
         * 点击上一页
         *
         * @param evt
         */
        handlePrevClick: function handlePrevClick(val) {
            this.$emit('click-prev', val);
        },


        /**
         * 点击下一页
         *
         * @param evt
         */
        handleNextClick: function handleNextClick(val) {
            this.$emit('click-next', val);
        },


        // /**
        //  * 选择选项值
        //  */
        // handleSelectItem(val) {
        //     // 当前页选中值
        //     this.currentSelected = val;
        // },
        /* type="selection" start */
        // 复选框操作
        handleSelectItem: function handleSelectItem(val) {
            var currentSelected = this.currentSelected,
                dataSource = this.dataSource,
                rowKey = this.rowKey;

            var key = external_lodash_default.a.isString(rowKey) ? rowKey : 'id';
            var check = val.map(function (item) {
                return item[key];
            });
            // 当前页面 key 集合
            var dataId = dataSource.map(function (item) {
                return item[key];
            });
            // 展示页面中不存在，但却选中的 key
            var beforeSelect = currentSelected.filter(function (item) {
                return !external_lodash_default.a.includes(dataId, item);
            }) || [];
            // 当前页选中值
            this.currentSelected = external_lodash_default.a.uniq([].concat(check, beforeSelect));
        },


        // 动态变化多次需要用时间获取
        getCheck: function getCheck() {
            return this.currentSelected;
        },


        // 勾选值(当前显示页、其他显示页)
        setCheck: function setCheck(rows) {
            var _this = this;

            var rowKey = this.rowKey,
                dataSource = this.dataSource,
                currentSelected = this.currentSelected;

            var key = external_lodash_default.a.isString(rowKey) ? rowKey : 'id';
            // 去除已经选中的，若没有此代码选中状态会被取消
            rows = external_lodash_default.a.difference(rows, currentSelected);
            // 当前页面需要勾选的
            var currentCheck = dataSource.filter(function (item) {
                return external_lodash_default.a.includes(rows, item[key]);
            });
            if (currentCheck && currentCheck.length) {
                currentCheck.forEach(function (row) {
                    return _this.$refs.grid.toggleRowSelection(row, true);
                });
            }
            // 其他显示页
            var otherCheck = external_lodash_default.a.difference(rows, currentCheck);
            this.currentSelected = external_lodash_default.a.uniq([].concat(currentSelected, otherCheck));
        },


        // 清空所有选中
        clearAll: function clearAll() {
            this.$refs.grid.clearSelection();
            this.currentSelected = [];
        },


        // 默认选中
        handleDefCheck: function handleDefCheck() {
            var _this2 = this;

            if (this.selectDefault === void 0) {
                return;
            }

            var currentSelected = this.currentSelected,
                rowKey = this.rowKey,
                dataSource = this.dataSource,
                typeSelect = this.typeSelect;

            var key = external_lodash_default.a.isString(rowKey) ? rowKey : 'id';

            // 兼容 reserve-selection 属性
            if (typeSelect) {
                this.$nextTick(function () {
                    var dataClient = _this2.dataClient;

                    var client = dataClient.filter(function (item) {
                        return external_lodash_default.a.includes(currentSelected, item[key]);
                    });
                    client.forEach(function (row) {
                        return _this2.$refs.grid.toggleRowSelection(row, true);
                    });
                });
                return;
            }

            if (currentSelected && currentSelected.length) {
                // IF _.isFunction => 'id'
                this.$nextTick(function () {
                    var currentSelect = dataSource.filter(function (item) {
                        return external_lodash_default.a.includes(currentSelected, item[key]);
                    });
                    currentSelect.forEach(function (row) {
                        return _this2.$refs.grid.toggleRowSelection(row, true);
                    });
                });
            }
        }
    }, TableRefs),

    created: function created() {
        var _this3 = this;

        // 初始化执行
        if (this.draggable) {
            this.$nextTick(function () {
                // 拖拽操作
                _this3.handleSortTable();
            });
        }

        // 分页配置
        if (!this.pagination) {
            return;
        }
    }
});
// CONCATENATED MODULE: ./packages/table/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/table/src/main.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  src_mainvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "packages/table/src/main.vue"
/* harmony default export */ var main = (component.exports);
// CONCATENATED MODULE: ./packages/table/index.js


/* istanbul ignore next */
main.install = function (Vue) {
    Vue.component(main.name, main);
};

/* harmony default export */ var table = __webpack_exports__["default"] = (main);

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/base/select.vue?vue&type=template&id=64b53866&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        {
          name: "clickoutside",
          rawName: "v-clickoutside",
          value: _vm.handleClose,
          expression: "handleClose"
        }
      ],
      class: [
        "el-select",
        _vm.selectSize ? "el-select--" + _vm.selectSize : ""
      ],
      on: {
        click: function($event) {
          $event.stopPropagation()
          return _vm.toggleMenu($event)
        }
      }
    },
    [
      _vm.multiple
        ? _c(
            "div",
            {
              ref: "tags",
              staticClass: "el-select__tags",
              style: { "max-width": _vm.inputWidth - 32 + "px", width: "100%" }
            },
            [
              _vm.collapseTags && _vm.selected.length
                ? _c(
                    "span",
                    [
                      _c(
                        "el-tag",
                        {
                          attrs: {
                            "disable-transitions": "",
                            closable: !_vm.selectDisabled,
                            size: _vm.collapseTagSize,
                            hit: _vm.selected[0].hitState
                          },
                          on: {
                            close: function($event) {
                              return _vm.deleteTag($event, _vm.selected[0])
                            }
                          }
                        },
                        [
                          _c(
                            "span",
                            {
                              staticClass: "el-select__tags-text",
                              attrs: { title: _vm.selected[0].currentLabel }
                            },
                            [_vm._v(_vm._s(_vm.selected[0].currentLabel))]
                          )
                        ]
                      ),
                      _vm.selected.length > 1
                        ? _c(
                            "el-tag",
                            {
                              attrs: {
                                closable: false,
                                size: _vm.collapseTagSize,
                                "disable-transitions": "",
                                title: _vm.selectedOtherLabel
                              }
                            },
                            [
                              _c(
                                "span",
                                { staticClass: "el-select__tags-text" },
                                [_vm._v("+ " + _vm._s(_vm.selected.length - 1))]
                              )
                            ]
                          )
                        : _vm._e()
                    ],
                    1
                  )
                : _vm._e(),
              !_vm.collapseTags
                ? _c(
                    "transition-group",
                    { on: { "after-leave": _vm.resetInputHeight } },
                    _vm._l(_vm.selected, function(item) {
                      return _c(
                        "el-tag",
                        {
                          key: _vm.getValueKey(item),
                          attrs: {
                            closable: !_vm.selectDisabled,
                            size: _vm.collapseTagSize,
                            hit: item.hitState,
                            "disable-transitions": ""
                          },
                          on: {
                            close: function($event) {
                              return _vm.deleteTag($event, item)
                            }
                          }
                        },
                        [
                          _c(
                            "span",
                            {
                              staticClass: "el-select__tags-text",
                              attrs: { title: item.currentLabel }
                            },
                            [_vm._v(_vm._s(item.currentLabel))]
                          )
                        ]
                      )
                    }),
                    1
                  )
                : _vm._e(),
              _vm.filterable
                ? _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.query,
                        expression: "query"
                      }
                    ],
                    ref: "input",
                    staticClass: "el-select__input",
                    class: [_vm.selectSize ? "is-" + _vm.selectSize : ""],
                    style: {
                      "flex-grow": "1",
                      "max-width": _vm.inputWidth - 42 + "px",
                      width: _vm.inputLength / (_vm.inputWidth - 32) + "%"
                    },
                    attrs: {
                      type: "text",
                      disabled: _vm.selectDisabled,
                      autocomplete: _vm.autoComplete || _vm.autocomplete
                    },
                    domProps: { value: _vm.query },
                    on: {
                      focus: _vm.handleFocus,
                      blur: function($event) {
                        _vm.softFocus = false
                      },
                      click: function($event) {
                        $event.stopPropagation()
                      },
                      keyup: _vm.managePlaceholder,
                      keydown: [
                        _vm.resetInputState,
                        function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k($event.keyCode, "down", 40, $event.key, [
                              "Down",
                              "ArrowDown"
                            ])
                          ) {
                            return null
                          }
                          $event.preventDefault()
                          return _vm.navigateOptions("next")
                        },
                        function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k($event.keyCode, "up", 38, $event.key, [
                              "Up",
                              "ArrowUp"
                            ])
                          ) {
                            return null
                          }
                          $event.preventDefault()
                          return _vm.navigateOptions("prev")
                        },
                        function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k(
                              $event.keyCode,
                              "enter",
                              13,
                              $event.key,
                              "Enter"
                            )
                          ) {
                            return null
                          }
                          $event.preventDefault()
                          return _vm.selectOption($event)
                        },
                        function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k($event.keyCode, "esc", 27, $event.key, [
                              "Esc",
                              "Escape"
                            ])
                          ) {
                            return null
                          }
                          $event.stopPropagation()
                          $event.preventDefault()
                          _vm.visible = false
                        },
                        function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k(
                              $event.keyCode,
                              "delete",
                              [8, 46],
                              $event.key,
                              ["Backspace", "Delete", "Del"]
                            )
                          ) {
                            return null
                          }
                          return _vm.deletePrevTag($event)
                        }
                      ],
                      compositionstart: _vm.handleComposition,
                      compositionupdate: _vm.handleComposition,
                      compositionend: _vm.handleComposition,
                      input: [
                        function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.query = $event.target.value
                        },
                        _vm.debouncedQueryChange
                      ]
                    }
                  })
                : _vm._e()
            ],
            1
          )
        : _vm._e(),
      _c(
        "el-input",
        {
          ref: "reference",
          class: { "is-focus": _vm.visible },
          attrs: {
            title: _vm.selectedLabel,
            type: "text",
            placeholder: _vm.currentPlaceholder,
            name: _vm.name,
            id: _vm.id,
            autocomplete: _vm.autoComplete || _vm.autocomplete,
            size: _vm.selectSize,
            disabled: _vm.selectDisabled,
            readonly: _vm.readonly,
            "validate-event": false
          },
          on: { focus: _vm.handleFocus, blur: _vm.handleBlur },
          nativeOn: {
            keyup: function($event) {
              return _vm.debouncedOnInputChange($event)
            },
            keydown: [
              function($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "down", 40, $event.key, [
                    "Down",
                    "ArrowDown"
                  ])
                ) {
                  return null
                }
                $event.stopPropagation()
                $event.preventDefault()
                return _vm.navigateOptions("next")
              },
              function($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "up", 38, $event.key, [
                    "Up",
                    "ArrowUp"
                  ])
                ) {
                  return null
                }
                $event.stopPropagation()
                $event.preventDefault()
                return _vm.navigateOptions("prev")
              },
              function($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
                ) {
                  return null
                }
                $event.preventDefault()
                return _vm.selectOption($event)
              },
              function($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "esc", 27, $event.key, [
                    "Esc",
                    "Escape"
                  ])
                ) {
                  return null
                }
                $event.stopPropagation()
                $event.preventDefault()
                _vm.visible = false
              },
              function($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "tab", 9, $event.key, "Tab")
                ) {
                  return null
                }
                _vm.visible = false
              }
            ],
            paste: function($event) {
              return _vm.debouncedOnInputChange($event)
            },
            mouseenter: function($event) {
              _vm.inputHovering = true
            },
            mouseleave: function($event) {
              _vm.inputHovering = false
            }
          },
          model: {
            value: _vm.selectedLabel,
            callback: function($$v) {
              _vm.selectedLabel = $$v
            },
            expression: "selectedLabel"
          }
        },
        [
          _vm.$slots.prefix
            ? _c("template", { slot: "prefix" }, [_vm._t("prefix")], 2)
            : _vm._e(),
          _c("template", { slot: "suffix" }, [
            _c("i", {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: !_vm.showClose,
                  expression: "!showClose"
                }
              ],
              class: [
                "el-select__caret",
                "el-input__icon",
                "el-icon-" + _vm.iconClass
              ]
            }),
            _vm.showClose
              ? _c("i", {
                  staticClass:
                    "el-select__caret el-input__icon el-icon-circle-close",
                  on: { click: _vm.handleClearClick }
                })
              : _vm._e()
          ])
        ],
        2
      ),
      _c(
        "transition",
        {
          attrs: { name: "el-zoom-in-top" },
          on: {
            "before-enter": _vm.handleMenuEnter,
            "after-leave": _vm.doDestroy
          }
        },
        [
          _c(
            "el-select-menu",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.visible && _vm.emptyText !== false,
                  expression: "visible && emptyText !== false"
                }
              ],
              ref: "popper",
              attrs: { "append-to-body": _vm.popperAppendToBody }
            },
            [
              _vm.emptyText &&
              (!_vm.allowCreate ||
                _vm.loading ||
                (_vm.allowCreate && _vm.options.length === 0))
                ? [
                    _vm.$slots.empty
                      ? _vm._t("empty")
                      : _c("p", { staticClass: "el-select-dropdown__empty" }, [
                          _vm._v(_vm._s(_vm.emptyText))
                        ])
                  ]
                : _vm._e(),
              _c(
                "dg-scrollbar",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.options.length > 0 && !_vm.loading,
                      expression: "options.length > 0 && !loading"
                    }
                  ],
                  ref: "scrollbar",
                  class: _vm.scrollbarCls,
                  attrs: {
                    "wrap-class": "el-select-dropdown__wrap",
                    "view-class":
                      "el-select-dropdown__list dg-select-dropdown__list"
                  },
                  on: { "scroll-bottom": _vm.handleScrollToBottom }
                },
                [_vm._t("default")],
                2
              )
            ],
            2
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/base/select.vue?vue&type=template&id=64b53866&

// EXTERNAL MODULE: external "element-ui"
var external_element_ui_ = __webpack_require__(2);

// EXTERNAL MODULE: ./packages/scrollbar/index.js + 4 modules
var scrollbar = __webpack_require__(25);

// EXTERNAL MODULE: external "throttle-debounce/debounce"
var debounce_ = __webpack_require__(14);
var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce_);

// EXTERNAL MODULE: ./src/utils/resize-event.js
var resize_event = __webpack_require__(11);

// EXTERNAL MODULE: ./src/dg-utils/data-convert.js
var data_convert = __webpack_require__(3);

// EXTERNAL MODULE: ./src/dg-utils/shear.js
var shear = __webpack_require__(5);

// EXTERNAL MODULE: ./src/dg-mixins/convert.js
var convert = __webpack_require__(9);

// EXTERNAL MODULE: ./src/utils/util.js + 1 modules
var util = __webpack_require__(7);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(0);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/base/select.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//










var Select = Object(shear["a" /* complex */])(external_element_ui_["Select"], ['created', 'watch', 'mounted']);

/* harmony default export */ var selectvue_type_script_lang_js_ = ({
    name: 'LSelect',

    componentName: 'LSelect',

    mixins: [Select, convert["a" /* default */]],

    components: {
        DgScrollbar: scrollbar["default"]
    },

    props: {
        // 给下拉框追加class
        scrollbarClass: String,

        seq: {
            type: String,
            default: ','
        },

        outputFormat: {
            type: String,
            default: 'String',
            validator: function validator(val) {
                return ['String', 'Array'].indexOf(val) !== -1;
            }
        },

        // 下拉树组件附加的数据
        treeData: {
            type: Array,
            default: function _default() {
                return [];
            }
        },

        // 追加文本翻译的数据 [{value: value, label: label}]
        translateData: {
            type: Array,
            default: function _default() {
                return [];
            }
        }
    },

    data: function data() {
        return {
            // 本地文本翻译的数据
            translateLocalData: this.translateData
        };
    },


    watch: {
        translateData: function translateData(val) {
            this.translateLocalData = val;
        },
        selectDisabled: function selectDisabled() {
            var _this = this;

            this.$nextTick(function () {
                _this.resetInputHeight();
            });
        },
        placeholder: function placeholder(val) {
            this.cachedPlaceHolder = this.currentPlaceholder = val;
        },
        value: function value(val, oldVal) {
            if (this.multiple) {
                this.resetInputHeight();
                if (val && val.length > 0 || this.$refs.input && this.query !== '') {
                    this.currentPlaceholder = '';
                } else {
                    this.currentPlaceholder = this.cachedPlaceHolder;
                }
                if (this.filterable && !this.reserveKeyword) {
                    this.query = '';
                    this.handleQueryChange(this.query);
                }
            }
            this.setSelected();
            if (this.filterable && !this.multiple) {
                this.inputLength = 20;
            }
            if (!Object(util["g" /* valueEquals */])(val, oldVal)) {
                this.dispatch('ElFormItem', 'el.form.change', val);
            }
        },
        visible: function visible(val) {
            var _this2 = this;

            if (!val) {
                this.broadcast('ElSelectDropdown', 'destroyPopper');
                if (this.$refs.input) {
                    this.$refs.input.blur();
                }
                this.query = '';

                // add author: tangdm descript: 增加搜索查询
                // this.handleQueryChange(this.query);
                this.previousQuery = null;
                this.selectedLabel = '';
                this.inputLength = 20;
                this.menuVisibleOnFocus = false;
                this.resetHoverIndex();
                this.$nextTick(function () {
                    if (_this2.$refs.input && _this2.$refs.input.value === '' && _this2.selected.length === 0) {
                        _this2.currentPlaceholder = _this2.cachedPlaceHolder;
                    }
                });
                if (!this.multiple) {
                    if (this.selected) {
                        if (this.filterable && this.allowCreate && this.createdSelected && this.createdLabel) {
                            this.selectedLabel = this.createdLabel;
                        } else {
                            this.selectedLabel = this.selected.currentLabel;
                        }
                        if (this.filterable) this.query = this.selectedLabel;
                    }

                    if (this.filterable) {
                        this.currentPlaceholder = this.cachedPlaceHolder;
                    }
                }
            } else {
                this.broadcast('ElSelectDropdown', 'updatePopper');
                if (this.filterable) {
                    this.query = this.remote ? '' : this.selectedLabel;
                    this.handleQueryChange(this.query);
                    if (this.multiple) {
                        this.$refs.input.focus();
                    } else {
                        if (!this.remote) {
                            this.broadcast('ElOption', 'queryChange', '');
                            this.broadcast('ElOptionGroup', 'queryChange');
                        }

                        if (this.selectedLabel) {
                            this.currentPlaceholder = this.selectedLabel;
                            this.selectedLabel = '';
                        }
                    }
                }
            }
            this.$emit('visible-change', val);
        },
        options: function options() {
            var _this3 = this;

            if (this.$isServer) return;
            this.$nextTick(function () {
                _this3.broadcast('ElSelectDropdown', 'updatePopper');
            });
            if (this.multiple) {
                this.resetInputHeight();
            }
            var inputs = this.$el.querySelectorAll('input');
            if ([].indexOf.call(inputs, document.activeElement) === -1) {
                this.setSelected();
            }
            if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {
                this.checkDefaultFirstOption();
            }
        }
    },

    computed: {
        // update author:lutz
        showClose: function showClose() {
            var val = this.getVal();
            var hasValue = this.multiple ? Array.isArray(val) && val.length > 0 : val !== undefined && val !== null && val !== '';
            var criteria = this.clearable && !this.selectDisabled && this.inputHovering && hasValue;
            return criteria;
        },
        scrollbarCls: function scrollbarCls() {
            var allowCreate = this.allowCreate,
                query = this.query,
                filteredOptionsCount = this.filteredOptionsCount,
                scrollbarClass = this.scrollbarClass;

            return [!allowCreate && query && filteredOptionsCount === 0 ? 'is-empty' : '', scrollbarClass || ''].join(' ');
        },


        // add author: tangdm descript: 增加标题显示
        selectedOtherLabel: function selectedOtherLabel() {
            if (this.selected.length > 1) {
                var labels = this.selected.map(function (p) {
                    return p.currentLabel;
                });
                var filterLabels = labels.slice(1);
                return filterLabels.join(",");
            } else {
                return "";
            }
        }
    },

    methods: {
        // 解决因树组件展开收起后引发的样式定位问题
        updatePopper: function updatePopper() {
            var _this4 = this;

            setTimeout(function () {
                _this4.broadcast('ElSelectDropdown', 'updatePopper');
            }, 300);
        },
        resetInputHeight: function resetInputHeight() {
            var _this5 = this;

            if (this.collapseTags && !this.filterable) return;
            this.$nextTick(function () {
                if (!_this5.$refs.reference) return;
                var inputChildNodes = _this5.$refs.reference.$el.childNodes;
                var input = [].filter.call(inputChildNodes, function (item) {
                    return item.tagName === 'INPUT';
                })[0];
                var tags = _this5.$refs.tags;
                var sizeInMap = _this5.initialInputHeight || 40;

                // update author: tangdm descript: 不同分辨率兼容高度问题
                // [code] input.style.height = this.selected.length === 0
                //        ? sizeInMap + 'px'
                //        : Math.max(
                //        tags ? (tags.clientHeight + (tags.clientHeight > sizeInMap ? 6 : 0)) : 0,
                //        sizeInMap
                // ) + 'px';

                input.style.height = _this5.selected.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tags.clientHeight : 0, sizeInMap) + 'px';
                if (_this5.visible && _this5.emptyText !== false) {
                    _this5.broadcast('ElSelectDropdown', 'updatePopper');
                }
            });
        },


        // create author:lutz 下拉触发
        handleScrollToBottom: function handleScrollToBottom() {
            this.$emit('scroll-bottom');
        },


        // create author:lutz 关闭下拉框
        handleCloseDrapdown: function handleCloseDrapdown() {
            this.visible = false;
        },


        // create author:lutz 转化value数据格式
        getVal: function getVal() {
            var multiple = this.multiple,
                value = this.value,
                seq = this.seq;

            return multiple ? Object(data_convert["b" /* str2arr */])(value, seq, true) : Object(data_convert["a" /* data2type */])(value, 'String', seq);
        },
        getOption: function getOption(value) {
            var option = void 0;
            var isSearchedValue = false;
            var isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';
            var isNull = Object.prototype.toString.call(value).toLowerCase() === '[object null]';
            var isUndefined = Object.prototype.toString.call(value).toLowerCase() === '[object undefined]';
            for (var i = this.cachedOptions.length - 1; i >= 0; i--) {
                var cachedOption = this.cachedOptions[i];
                var isEqual = isObject ? Object(util["b" /* getValueByPath */])(cachedOption.value, this.valueKey) === Object(util["b" /* getValueByPath */])(value, this.valueKey) : cachedOption.value === value;
                if (isEqual) {
                    // add author: tangdm descript: 追加文本翻译
                    isSearchedValue = true;

                    option = cachedOption;

                    // add author: tangdm 追加翻译缓存
                    this.translateLocalData.push({
                        label: cachedOption.currentLabel,
                        value: cachedOption.value
                    });
                    break;
                }
            }

            // add author: tangdm descript: 追加文本翻译
            if (!isSearchedValue) {
                for (var _i = 0, len = this.translateLocalData.length; _i < len; _i++) {
                    var _cachedOption = this.translateLocalData[_i];
                    _cachedOption.currentLabel = _cachedOption.label;
                    var _isEqual = isObject ? Object(util["b" /* getValueByPath */])(_cachedOption.value, this.valueKey) === Object(util["b" /* getValueByPath */])(value, this.valueKey) : _cachedOption.value === value;
                    if (_isEqual) {
                        isSearchedValue = true;
                        option = _cachedOption;
                        break;
                    }
                }
            }
            if (option) return option;
            var label = !isObject && !isNull && !isUndefined ? value : '';
            var newOption = {
                value: value,
                currentLabel: label
            };
            if (this.multiple) {
                newOption.hitState = false;
            }
            return newOption;
        },


        // update author:lutz
        setSelected: function setSelected() {
            var _this6 = this;

            var val = this.getVal();

            if (!this.multiple) {
                var option = this.getOption(val);
                if (option.created) {
                    this.createdLabel = option.currentLabel;
                    this.createdSelected = true;
                } else {
                    this.createdSelected = false;
                }
                this.selectedLabel = option.currentLabel;
                this.selected = option;
                if (this.filterable) this.query = this.selectedLabel;
                return;
            }

            var result = [];
            if (Array.isArray(val)) {
                val.forEach(function (value) {
                    var obj = _this6.getOption(value);
                    result.push(obj);
                });
            }
            this.selected = result;
            this.$nextTick(function () {
                _this6.resetInputHeight();
            });
        },


        // update author:lutz
        // update author: tangdm descript: repair the only one data for un-delete tag
        deleteTag: function deleteTag(event, tag) {
            var val = this.getVal();
            var index = this.selected.indexOf(tag);
            if (index > -1 && !this.selectDisabled) {
                var value = val.slice();
                value.splice(index, 1);
                if (value.length === 0) value = "";
                this.$emit('input', value);
                this.emitChange(value);
                this.$emit('remove-tag', tag.value);
            }
            event.stopPropagation();
        },


        // update author:lutz
        deletePrevTag: function deletePrevTag(e) {
            if (e.target.value.length <= 0 && !this.toggleLastOptionHitState()) {
                var val = this.getVal().slice();
                val.pop();
                var outputFormat = this.outputFormat,
                    seq = this.seq;

                val = Object(data_convert["a" /* data2type */])(val, outputFormat, seq);
                this.$emit('input', val);
                this.emitChange(val);
            }
        }
    },

    // update author:lutz
    created: function created() {
        var _this7 = this;

        this.cachedPlaceHolder = this.currentPlaceholder = this.placeholder;

        this.debouncedOnInputChange = debounce_default()(this.debounce, function () {
            _this7.onInputChange();
        });

        this.debouncedQueryChange = debounce_default()(this.debounce, function (e) {
            _this7.handleQueryChange(e.target.value);
        });

        this.$on('handleCloseDrapdown', this.handleCloseDrapdown);
        this.$on('handleOptionClick', this.handleOptionSelect);
        this.$on('setSelected', this.setSelected);
    },


    // update author:lutz
    mounted: function mounted() {
        var _this8 = this;

        var val = this.getVal();
        if (this.multiple && Array.isArray(val) && val.length > 0) {
            this.currentPlaceholder = '';
        }
        Object(resize_event["a" /* addResizeListener */])(this.$el, this.handleResize);
        var reference = this.$refs.reference;
        if (reference && reference.$el) {
            var sizeMap = { medium: 36, small: 32, mini: 28 };

            // add author: tangdm descript: 增加分辨率识别
            var clientBodyWidth = document.body.clientWidth;
            var autoFixedHeight = clientBodyWidth < 1366 ? 24 : clientBodyWidth < 1681 ? 28 : 32;

            // update author: tangdm [code] this.initialInputHeight = input.getBoundingClientRect().height || sizeMap[this.selectSize];
            this.initialInputHeight = sizeMap[this.selectSize] || autoFixedHeight;
        }
        if (this.remote && this.multiple) {
            this.resetInputHeight();
        }
        this.$nextTick(function () {
            if (reference && reference.$el) {
                _this8.inputWidth = reference.$el.getBoundingClientRect().width;
            }
        });
        this.setSelected();
    }
});
// CONCATENATED MODULE: ./packages/base/select.vue?vue&type=script&lang=js&
 /* harmony default export */ var base_selectvue_type_script_lang_js_ = (selectvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/base/select.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  base_selectvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "packages/base/select.vue"
/* harmony default export */ var base_select = __webpack_exports__["a"] = (component.exports);

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = require("sortablejs");

/***/ }),
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-select/src/main.vue?vue&type=template&id=2aec4d24&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "dg-table-select" },
    [
      _c(
        "l-select",
        _vm._g(
          _vm._b(
            {
              directives: [
                {
                  name: "loadmore",
                  rawName: "v-loadmore",
                  value: _vm.loadMore,
                  expression: "loadMore"
                }
              ],
              attrs: { "scrollbar-class": _vm.scrollbarCls },
              model: {
                value: _vm.model,
                callback: function($$v) {
                  _vm.model = $$v
                },
                expression: "model"
              }
            },
            "l-select",
            _vm.selectProp,
            false
          ),
          _vm.selectOn
        ),
        [
          _c(
            "l-table",
            _vm._b(
              {
                staticClass: "dg-table-select__table",
                attrs: {
                  border: _vm.border,
                  pagination: false,
                  data: _vm.itemsWithDisabled,
                  prop: _vm.defaultProp
                }
              },
              "l-table",
              _vm.tableBind,
              false
            ),
            [_vm._t("default")],
            2
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/table-select/src/main.vue?vue&type=template&id=2aec4d24&

// EXTERNAL MODULE: ./packages/table/index.js + 6 modules
var table = __webpack_require__(26);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-select/src/option.vue?vue&type=template&id=d3a9edc0&
var optionvue_type_template_id_d3a9edc0_render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "tr",
    _vm._g(
      _vm._b(
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible"
            }
          ],
          staticClass: "el-select-dropdown__item dg-select-dropdown__item",
          class: {
            selected: _vm.itemSelected,
            "is-disabled":
              _vm.disabled || _vm.groupDisabled || _vm.limitReached,
            hover: _vm.hover
          },
          on: {
            mouseenter: _vm.hoverItem,
            click: function($event) {
              $event.stopPropagation()
              return _vm.selectOptionClick($event)
            }
          }
        },
        "tr",
        _vm.$attrs,
        false
      ),
      _vm.$listeners
    ),
    [_vm._t("default")],
    2
  )
}
var optionvue_type_template_id_d3a9edc0_staticRenderFns = []
optionvue_type_template_id_d3a9edc0_render._withStripped = true


// CONCATENATED MODULE: ./packages/table-select/src/option.vue?vue&type=template&id=d3a9edc0&

// EXTERNAL MODULE: external "element-ui"
var external_element_ui_ = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-select/src/option.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var optionvue_type_script_lang_js_ = ({
    name: "TableOption",
    mixins: [external_element_ui_["Option"]],
    methods: {
        selectOptionClick: function selectOptionClick() {
            if (this.disabled !== true && this.groupDisabled !== true) {
                this.dispatch("LSelect", "handleOptionClick", [this, true]);
            }
        }
    }
});
// CONCATENATED MODULE: ./packages/table-select/src/option.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_optionvue_type_script_lang_js_ = (optionvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/table-select/src/option.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  src_optionvue_type_script_lang_js_,
  optionvue_type_template_id_d3a9edc0_render,
  optionvue_type_template_id_d3a9edc0_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "packages/table-select/src/option.vue"
/* harmony default export */ var src_option = (component.exports);
// EXTERNAL MODULE: ./src/dg-utils/shear.js
var shear = __webpack_require__(5);

// CONCATENATED MODULE: ./packages/table-select/src/table-body.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };





// 深度拷贝 TableBody
var LTableBody = Object(shear["a" /* complex */])(table["default"].components.ElTable.components.TableBody);

/* harmony default export */ var table_body = ({
    name: 'DgTableBody',

    mixins: [LTableBody],

    components: {
        TableOption: src_option
    },

    methods: {
        rowRender: function rowRender(row, $index, treeRowData) {
            var _this = this;

            var h = this.$createElement;
            var treeIndent = this.treeIndent,
                columns = this.columns,
                firstDefaultColumnIndex = this.firstDefaultColumnIndex;

            var columnsHidden = columns.map(function (column, index) {
                return _this.isColumnHidden(index);
            });
            var rowClasses = this.getRowClass(row, $index);
            var prop = this.table.prop || this.table.$attrs.prop; // lutz+ 标记 id
            var display = true;
            if (treeRowData) {
                rowClasses.push('el-table__row--level-' + treeRowData.level);
                display = treeRowData.display;
            }
            // lutz+
            var data = {
                class: rowClasses,
                style: this.getRowStyle(row, $index),
                key: this.getKeyOfRow(row, $index),
                props: {
                    value: row[prop.value],
                    label: row[prop.label],
                    disabled: row[prop.disabled]
                },
                on: {
                    click: function click($event) {
                        return _this.handleClick($event, row);
                    },
                    dblclick: function dblclick($event) {
                        return _this.handleDoubleClick($event, row);
                    },
                    contextmenu: function contextmenu($event) {
                        return _this.handleContextMenu($event, row);
                    },
                    mouseenter: function mouseenter(_) {
                        return _this.handleMouseEnter($index);
                    },
                    mouseleave: this.handleMouseLeave
                },
                directives: [{
                    name: 'show',
                    value: display
                }]
            };
            // update
            return h(
                'table-option',
                data,
                [columns.map(function (column, cellIndex) {
                    var _getSpan = _this.getSpan(row, column, $index, cellIndex),
                        rowspan = _getSpan.rowspan,
                        colspan = _getSpan.colspan;

                    if (!rowspan || !colspan) {
                        return null;
                    }
                    var columnData = _extends({}, column);
                    columnData.realWidth = _this.getColspanRealWidth(columns, colspan, cellIndex);
                    var data = {
                        store: _this.store,
                        _self: _this.context || _this.table.$vnode.context,
                        column: columnData,
                        row: row,
                        $index: $index
                    };
                    if (cellIndex === firstDefaultColumnIndex && treeRowData) {
                        data.treeNode = {
                            indent: treeRowData.level * treeIndent,
                            level: treeRowData.level
                        };
                        if (typeof treeRowData.expanded === 'boolean') {
                            data.treeNode.expanded = treeRowData.expanded;
                            // 表明是懒加载
                            if ('loading' in treeRowData) {
                                data.treeNode.loading = treeRowData.loading;
                            }
                            if ('noLazyChildren' in treeRowData) {
                                data.treeNode.noLazyChildren = treeRowData.noLazyChildren;
                            }
                        }
                    }
                    return h(
                        'td',
                        {
                            style: _this.getCellStyle($index, cellIndex, row, column),
                            'class': _this.getCellClass($index, cellIndex, row, column),
                            attrs: { rowspan: rowspan,
                                colspan: colspan
                            },
                            on: {
                                'mouseenter': function mouseenter($event) {
                                    return _this.handleCellMouseEnter($event, row);
                                },
                                'mouseleave': _this.handleCellMouseLeave
                            }
                        },
                        [column.renderCell.call(_this._renderProxy, _this.$createElement, data, columnsHidden[cellIndex])]
                    );
                })]
            );
        }
    }
});
// EXTERNAL MODULE: ./packages/base/select.vue + 4 modules
var base_select = __webpack_require__(27);

// EXTERNAL MODULE: ./src/utils/merge.js
var merge = __webpack_require__(8);

// EXTERNAL MODULE: ./src/dg-mixins/itemsWithDisabled.js
var itemsWithDisabled = __webpack_require__(10);

// CONCATENATED MODULE: ./packages/table-select/src/loadmore.js
/* harmony default export */ var loadmore = ({
    bind: function bind(el, binding) {
        var SELECTWRAP_DOM = el.querySelector('.el-scrollbar .el-scrollbar__wrap');

        SELECTWRAP_DOM.addEventListener('scroll', function (e) {
            // 记录之前的滚动高度，新增数据导致滚动高度和滚动位置发生变化
            var scrollHeightLatest = this.scrollHeightLatest;

            if (scrollHeightLatest && scrollHeightLatest != this.scrollHeight) {
                // 滚动高度发生变化，滚动位置滚动回原来的位置
                this.scrollTop = this.scrollTopLatest;
            }

            this.scrollTopLatest = this.scrollTop;
            this.scrollHeightLatest = this.scrollHeight;

            var CONDITION = this.scrollHeight - this.scrollTop <= this.clientHeight;
            if (CONDITION) {
                binding.value && binding.value();
            }
        });
    }
});
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-select/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









// 替换组件 DgTable > ELTable > TableBody // complex 深拷贝
var LTable = Object(shear["a" /* complex */])(table["default"]);
LTable.components.ElTable.components.TableBody = table_body;

/* harmony default export */ var mainvue_type_script_lang_js_ = ({
    name: 'DgTableSelect',

    mixins: [itemsWithDisabled["a" /* default */]],

    directives: {
        loadmore: loadmore
    },

    components: {
        LSelect: base_select["a" /* default */],
        LTable: LTable
    },

    props: {
        // 表格属性
        tableProps: {
            type: Object,
            default: function _default() {
                return {};
            }
        },
        scrollbarClass: String,
        pagination: Boolean,
        border: Boolean,
        multiple: Boolean,
        value: {
            required: true
        }
    },

    computed: {
        model: {
            set: function set(val) {
                this.$emit('input', val);
            },
            get: function get() {
                return this.value;
            }
        },

        // 下拉框是脱离DOM包含关系，用class来渲染样式
        scrollbarCls: function scrollbarCls() {
            return 'dg-table-select__scrollbar' + (this.multiple ? ' multiple' : '') + ' ' + this.scrollbarClass;
        },


        // l-select props
        selectProp: function selectProp() {
            return Object(shear["d" /* getCmpProps */])(base_select["a" /* default */], this);
        },
        selectOn: function selectOn() {
            return Object(shear["b" /* complexObj */])(this.$listeners, ['scroll-bottom']);
        },


        // dg-table props
        tableBind: function tableBind() {
            return Object(merge["a" /* default */])({
                overflow: 'wrap'
            }, this.tableProps);
        }
    },

    methods: {
        loadMore: function loadMore() {
            if (this.pagination) {
                this.$emit('scroll-bottom');
            }
        }
    }
});
// CONCATENATED MODULE: ./packages/table-select/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/table-select/src/main.vue





/* normalize component */

var main_component = Object(componentNormalizer["a" /* default */])(
  src_mainvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var main_api; }
main_component.options.__file = "packages/table-select/src/main.vue"
/* harmony default export */ var main = (main_component.exports);
// CONCATENATED MODULE: ./packages/table-select/index.js


/* istanbul ignore next */
main.install = function (Vue) {
  Vue.component(main.name, main);
};

/* harmony default export */ var table_select = __webpack_exports__["default"] = (main);

/***/ })
/******/ ]);