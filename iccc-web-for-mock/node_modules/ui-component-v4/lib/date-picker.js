module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 58);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("element-ui");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return str2arr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return data2type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return uniqArr; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/*
 * @Author: lutz
 * @Date: 2019-06-24 11:16:27
 * @Last Modified by: lutz
 * @Last Modified time: 2019-07-01 15:15:41
 * @Last Modified by: huangjq
 * @Last Modified time: 2020-07-24 11:10:20
 */



/**
 * string to array
 * @param {any} val 需要处理的数据
 * @param {string} seq 字符串分隔符
 * @param {boolen} clone 是否深度拷贝
 * @param {array} dataSource 数据源
 * @param {string|number} dataSourceValueName 数据源需要匹配字段
 *
 * @return {array}
 */
function str2arr(val) {
    var seq = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';
    var clone = arguments[2];
    var dataSource = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
    var dataSourceValueName = arguments[4];
    var isDataSourceChanged = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNil(val) || val === '') {
        return [];
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(val)) {
        return clone ? lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(val) : val;
    }

    var data = val.toString().split(seq);

    // 数据源必须是数组 && 长度大于0 && 展示数据必须是数组
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(dataSource) && dataSource.length && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(data)) {
        // 对象数组 或 数组的截取第一个数据判断数字类型
        if (dataSourceValueName != null && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(dataSource[0][dataSourceValueName]) || !dataSourceValueName && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(dataSource[0])) {
            data = data.map(function (item) {
                return Number(item);
            });
        }
    }

    if (isDataSourceChanged) {
        // huangjq 2020/07/24
        // 数据源改变后，有些原有的value不存在了，重新过滤
        var keys = [];
        dataSource.map(function (item) {
            return keys.push(item[dataSourceValueName]);
        });
        data = data.filter(function (item) {
            return keys.indexOf(item) > -1;
        });
    }

    return data;
}

/**
 * 将数据转换成指定数据类型
 * @param {*} val
 * @param {Array|String|Object} type 需要转换的类型
 * @param {String} seq 分隔符
 */
function data2type(val, type) {
    var seq = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';

    var bool = lodash__WEBPACK_IMPORTED_MODULE_0___default.a['is' + type] && lodash__WEBPACK_IMPORTED_MODULE_0___default.a['is' + type](val);

    if (bool) {
        return val;
    }

    // 为保证选项可选中，这里不能将数字转成字符串
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isNumber(val) && type === 'String') {
        return val;
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(val) && type === 'String') {
        return val.sort().join(seq);
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isString(val) && type === 'Array') {
        return val.split(seq);
    }

    var map = {
        String: '',
        Array: [],
        Object: {}
    };

    return map[type];
}

/**
 * 两个数组合并成不重复的数组
 * @param {Array} exp
 * @param {Array} val
 */
function uniqArr(exp, val) {
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(exp) && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(val)) {
        return lodash__WEBPACK_IMPORTED_MODULE_0___default.a.union(exp, val);
    }

    return [];
}

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return complex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return filterObj; });
/* unused harmony export replaceObj */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return complexObj; });
/* unused harmony export hyphenate */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return getCmpProps; });
/* unused harmony export getCmpEvents */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return getCmpType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return getCmpPropsFromAttrs; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
 * @Author: lutz
 * @Date: 2019-06-05 17:05:32
 * @Last Modified by: lutz
 * @Last Modified time: 2019-12-06 08:58:43
 */



/**
 * 修改组件属性或对象的属性
 * 深度克隆
 * @param {Object} cpm
 * @param {Array|Object} hook 生命周期函数和组件属性；数组默认删除，对象默认替换（恒等undefined，默认删除）
 * @param {Array|Object} watch 监听属性的修改
 * @return {Object}
 */
function complex(cpm, hook, watch) {
    var component = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(cpm);

    if (hook) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(hook)) {
            hook.forEach(function (item) {
                delete component[item];
            });
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(hook)) {
            for (var key in hook) {
                if (hook[key] === void 0) {
                    delete component[key];
                } else {
                    component[key] = hook[key];
                }
            }
        }
    }

    if (watch) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(watch) && component.watch) {
            watch.forEach(function (item) {
                delete component.watch[item];
            });
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(watch)) {
            for (var _key in watch) {
                if (watch[_key] === void 0) {
                    delete component.watch[_key];
                } else {
                    component.watch[_key] = watch[_key];
                }
            }
        }
    }

    return component;
}

/**
 * 删除对象上的属性
 * @param {object} obj 需要操作的对象
 * @param {array} filterArr 需要删除的属性名称
 *
 * @return {object}
 */
function filterObj() {
    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var filterArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

    var newObj = _extends({}, obj);
    filterArr.forEach(function (item) {
        delete newObj[item];
    });
    return newObj;
}

/**
 * 替换对象上的属性
 * @param {object} obj 需要操作的对象
 * @param {object} filterObj 需要替换的属性名称，undefined则会删除对象上属性
 *
 * @return {object}
 */
function replaceObj() {
    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var filterObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var newObj = _extends({}, obj, filterObj);
    Object.keys(filterObj).forEach(function (item) {
        if (filterObj[item] === void 0) {
            delete newObj[item];
        }
    });
    return newObj;
}

/**
 * 根据参数操作对象
 * 浅拷贝
 * demo
 * a) 过滤undefined
 *  var obj = { input: void 0, change() { console.log('change') } }
 *  complexObj(obj, null, true) // { change: f }
 *  obj // { input: undefined, change: f }
 *
 * b) 删除属性
 *  var obj = { a: 2, b: 3 }, arr = ['a', 'c']
 *  complexObj(obj, arr) // { b: 3 }
 *  obj // {a: 2, b: 3}
 *
 * c) 替换属性
 *  var obj = { a: 2, b: 3 }, fobj = { a: void 0, c: 9, b: 4 }
 *  complexObj(obj, fobj) // { b: 4, c: 9 }
 *  obj // {a: 2, b: 3}
 *
 *
 * @param {object} obj 需要操作的对象
 * @param {array|object} filterVal 数组：需要删除的属性名称，对象：需要替换的属性名称，undefined则会删除对象上属性
 * @param {boolen} filterNull 是否过滤 undefined
 *
 * @return {object}
 */
function complexObj(obj, filterVal) {
    var filterNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    var newObj = _extends({}, obj);

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(filterVal)) {
        newObj = filterObj(obj, filterVal);
    } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(filterVal)) {
        newObj = replaceObj(obj, filterVal);
    }

    // 过滤 undefined
    if (filterNull) {
        Object.keys(newObj).forEach(function (item) {
            if (newObj[item] === void 0) {
                delete newObj[item];
            }
        });
    }

    return newObj;
}

var hyphenateRE = /\B([A-Z])/g;

/**
 * 将驼峰转换成-隔开
 * hyphenate('ElTable') => "el-table"
 * @param {string} str
 * @return {string}
 */
var hyphenate = function hyphenate(str) {
    return str.replace(hyphenateRE, "-$1").toLowerCase();
};

/**
 * 获取指定组件的参数值
 * @param cmp 组件对象，如ElTable
 * @param instance  当前组件对象,调用时，传this
 * @param filterObject 过滤属性值，{name:"11",sex:(props,val)=>val,age:undefined} 属性undefined 删除属性
 */
function getCmpProps(cmp, instance) {
    var filterObj = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    // 如果不是组件函数，则生成组件函数，主要是把混合的属性合并在一起
    if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isFunction(cmp)) {
        cmp = instance.constructor.extend(cmp);
    }
    // 传入属性值+默认的值
    var propsData = _extends({}, instance.$attrs, instance.$props);

    // 过滤属性值
    var cmpProps = {};
    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forOwn(cmp.options.props, function (value, key) {
        var propValue = propsData[key] || propsData[hyphenate(key)];
        // 过滤组件属性
        if (filterObj.hasOwnProperty(key)) {
            propValue = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isFunction(filterObj[key]) ? filterObj[key](propsData, propValue) : filterObj[key];
        }

        // 过滤 undefined
        if (propValue !== undefined) {
            cmpProps[key] = propValue;
        }
    });

    return cmpProps;
}

/**
 * 获取组件的事件对象
 * @param instance
 * @param filterObj {click:"handleClick",change:(evt)=>val,input:undefined} 属性undefined 删除属性
 * @returns {*}
 */
function getCmpEvents(instance) {
    var filterObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var listeners = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.clone(instance.$listeners);
    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forOwn(filterObj, function (val, key) {
        if (val && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isString(val)) {
            listeners[key] = instance[val];
        } else if (val && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isFunction(val)) {
            listeners[key] = val;
        } else if (val === undefined) {
            delete listeners[key];
        }
    });
    return listeners;
}

/**
 * 根据组件参数是，require、import获取组件的对象
 * @param type
 * @returns {type}
 */
function getCmpType(type) {
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(type) && type.default) {
        type = type.default;
    }
    if (type && type instanceof Promise) {
        var promise = type;
        type = function type(resolve, reject) {
            promise.then(function (obj) {
                resolve(obj);
            });
        };
    }
    return type;
}

/**
 * 从$attrs获取匹配的属性
 * @param instance
 * @param reg
 */
function getCmpPropsFromAttrs(instance, reg) {
    var attr = instance.$attrs;
    var obj = {};

    Object.keys(attr).map(function (item) {
        if (reg.test(item)) {
            obj[item.replace(reg, "")] = attr[item];
        }
    });

    return obj;
}

/***/ }),
/* 6 */,
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: external "vue"
var external_vue_ = __webpack_require__(4);
var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

// CONCATENATED MODULE: ./src/utils/types.js
function isString(obj) {
  return Object.prototype.toString.call(obj) === '[object String]';
}

function isObject(obj) {
  return Object.prototype.toString.call(obj) === '[object Object]';
}

function isHtmlElement(node) {
  return node && node.nodeType === Node.ELEMENT_NODE;
}

var isFunction = function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
};

var isUndefined = function isUndefined(val) {
  return val === void 0;
};

var isDefined = function isDefined(val) {
  return val !== undefined && val !== null;
};
// CONCATENATED MODULE: ./src/utils/util.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return noop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return hasOwn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return toObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getValueByPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getPropByPath; });
/* unused harmony export generateId */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return valueEquals; });
/* unused harmony export escapeRegexpString */
/* unused harmony export arrayFindIndex */
/* unused harmony export arrayFind */
/* unused harmony export coerceTruthyValueToArray */
/* unused harmony export isIE */
/* unused harmony export isEdge */
/* unused harmony export autoprefixer */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return kebabCase; });
/* unused harmony export capitalize */
/* unused harmony export looseEqual */
/* unused harmony export arrayEquals */
/* unused harmony export isEqual */
/* unused harmony export isEmpty */
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };




var util_hasOwnProperty = Object.prototype.hasOwnProperty;

function noop() {}

function hasOwn(obj, key) {
  return util_hasOwnProperty.call(obj, key);
}

function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to;
}

function toObject(arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res;
}

var getValueByPath = function getValueByPath(object, prop) {
  prop = prop || "";
  var paths = prop.split(".");
  var current = object;
  var result = null;
  for (var i = 0, j = paths.length; i < j; i++) {
    var path = paths[i];
    if (!current) break;

    if (i === j - 1) {
      result = current[path];
      break;
    }
    current = current[path];
  }
  return result;
};

function getPropByPath(obj, path, strict) {
  var tempObj = obj;
  path = path.replace(/\[(\w+)\]/g, ".$1");
  path = path.replace(/^\./, "");

  var keyArr = path.split(".");
  var i = 0;
  for (var len = keyArr.length; i < len - 1; ++i) {
    if (!tempObj && !strict) break;
    var key = keyArr[i];
    if (key in tempObj) {
      tempObj = tempObj[key];
    } else {
      if (strict) {
        throw new Error("please transfer a valid prop path to form item!");
      }
      break;
    }
  }
  return {
    o: tempObj,
    k: keyArr[i],
    v: tempObj ? tempObj[keyArr[i]] : null
  };
}

var generateId = function generateId() {
  return Math.floor(Math.random() * 10000);
};

var valueEquals = function valueEquals(a, b) {
  // see: https://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript
  if (a === b) return true;
  if (!(a instanceof Array)) return false;
  if (!(b instanceof Array)) return false;
  if (a.length !== b.length) return false;
  for (var i = 0; i !== a.length; ++i) {
    if (a[i] !== b[i]) return false;
  }
  return true;
};

var escapeRegexpString = function escapeRegexpString() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  return String(value).replace(/[|\\{}()[\]^$+*?.]/g, "\\$&");
};

// TODO: use native Array.find, Array.findIndex when IE support is dropped
var arrayFindIndex = function arrayFindIndex(arr, pred) {
  for (var i = 0; i !== arr.length; ++i) {
    if (pred(arr[i])) {
      return i;
    }
  }
  return -1;
};

var arrayFind = function arrayFind(arr, pred) {
  var idx = arrayFindIndex(arr, pred);
  return idx !== -1 ? arr[idx] : undefined;
};

// coerce truthy value to array
var coerceTruthyValueToArray = function coerceTruthyValueToArray(val) {
  if (Array.isArray(val)) {
    return val;
  } else if (val) {
    return [val];
  } else {
    return [];
  }
};

var util_isIE = function isIE() {
  return !external_vue_default.a.prototype.$isServer && !isNaN(Number(document.documentMode));
};

var util_isEdge = function isEdge() {
  return !external_vue_default.a.prototype.$isServer && navigator.userAgent.indexOf("Edge") > -1;
};

var autoprefixer = function autoprefixer(style) {
  if ((typeof style === "undefined" ? "undefined" : _typeof(style)) !== "object") return style;
  var rules = ["transform", "transition", "animation"];
  var prefixes = ["ms-", "webkit-"];
  rules.forEach(function (rule) {
    var value = style[rule];
    if (rule && value) {
      prefixes.forEach(function (prefix) {
        style[prefix + rule] = value;
      });
    }
  });
  return style;
};

var kebabCase = function kebabCase(str) {
  var hyphenateRE = /([^-])([A-Z])/g;
  return str.replace(hyphenateRE, "$1-$2").replace(hyphenateRE, "$1-$2").toLowerCase();
};

var util_capitalize = function capitalize(str) {
  if (!isString(str)) return str;
  return str.charAt(0).toUpperCase() + str.slice(1);
};

var util_looseEqual = function looseEqual(a, b) {
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    return JSON.stringify(a) === JSON.stringify(b);
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
};

var arrayEquals = function arrayEquals(arrayA, arrayB) {
  arrayA = arrayA || [];
  arrayB = arrayB || [];

  if (arrayA.length !== arrayB.length) {
    return false;
  }

  for (var i = 0; i < arrayA.length; i++) {
    if (!util_looseEqual(arrayA[i], arrayB[i])) {
      return false;
    }
  }

  return true;
};

var isEqual = function isEqual(value1, value2) {
  if (Array.isArray(value1) && Array.isArray(value2)) {
    return arrayEquals(value1, value2);
  }
  return util_looseEqual(value1, value2);
};

var isEmpty = function isEmpty(val) {
  // null or undefined
  if (val == null) return true;

  if (typeof val === "boolean") return false;

  if (typeof val === "number") return !val;

  if (val instanceof Error) return val.message === "";

  switch (Object.prototype.toString.call(val)) {
    // String or Array
    case "[object String]":
    case "[object Array]":
      return !val.length;

    // Map or Set or File
    case "[object File]":
    case "[object Map]":
    case "[object Set]":
      {
        return !val.size;
      }
    // Plain Object
    case "[object Object]":
      {
        return !Object.keys(val).length;
      }
  }

  return false;
};

/***/ }),
/* 8 */,
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/* harmony default export */ __webpack_exports__["a"] = ({
    props: {
        valueName: String,
        labelName: String,
        disabledName: [String, Function],
        childrenName: String,
        isLeafName: String
    },
    computed: {
        defaultProp: function defaultProp() {
            var valueName = this.valueName,
                labelName = this.labelName,
                childrenName = this.childrenName,
                disabledName = this.disabledName,
                isLeafName = this.isLeafName;

            var _ref = this.props || {},
                value = _ref.value,
                label = _ref.label,
                children = _ref.children,
                disabled = _ref.disabled,
                isLeaf = _ref.isLeaf,
                other = _objectWithoutProperties(_ref, ['value', 'label', 'children', 'disabled', 'isLeaf']);

            return _extends({}, other, {
                value: valueName || value || 'value',
                label: labelName || label || 'label',
                disabled: disabledName || disabled || 'disabled',
                children: childrenName || children || 'children',
                isLeaf: isLeafName || isLeaf || 'isLeaf'
            });
        }
    }
});

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var main_dg_mixins_convert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9);
/* harmony import */ var main_dg_utils_data_convert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/*
@author lutz
@updateDate 2019-06-18
@describe
    props
        data {array} 组件数据源,透传到 $data.dataSource
        disabled-value {array|string} 禁用项
        seq {string} 分隔符（命名参考: https://nodejs.org/dist/latest-v10.x/docs/api/querystring.html）
        output-format {string} enum["String", "Array"]
    data
        dataSource {array} 数据源
    computed
        itemsWithDisabled @return {array<object>} 添加禁用状态到数据源
    watch
        data => dataSource 兼容组件 $props.data 对 $data.dataSource 值变化
*/




/* harmony default export */ __webpack_exports__["a"] = ({
    mixins: [main_dg_mixins_convert_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"]],
    props: {
        data: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        disabledValue: {
            type: [String, Array],
            default: function _default() {
                return [];
            }
        },
        seq: { type: String, default: ',' },
        outputFormat: {
            type: String,
            default: 'String',
            validator: function validator(val) {
                return ['String', 'Array'].indexOf(val) !== -1;
            }
        }
    },
    watch: {
        data: function data(val) {
            this.dataSource = val;
        },

        // dataSource 触发 data改变的方法
        dataSource: function dataSource(val) {
            this.$emit('change-data', val);
        }
    },
    data: function data() {
        return { dataSource: this.data };
    },

    computed: {
        itemsWithDisabled: function itemsWithDisabled() {
            var dataSource = this.dataSource,
                disabledValue = this.disabledValue,
                seq = this.seq,
                defaultProp = this.defaultProp;

            var disabledArr = Object(main_dg_utils_data_convert_js__WEBPACK_IMPORTED_MODULE_2__[/* str2arr */ "b"])(disabledValue, seq, true, dataSource, defaultProp.value);
            if (disabledArr.length < 1) {
                return dataSource;
            }
            // 深度拷贝,避免污染数据源($data)
            var data = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(dataSource);
            data.forEach(function (item) {
                var isInclude = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.includes(disabledArr, item[defaultProp.value]);
                // 这里if中的布尔值要分开写否则会报错
                if (isInclude) {
                    item[defaultProp.disabled] = true;
                }
            });
            return data;
        }
    }
});

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addResizeListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return removeResizeListener; });
/* harmony import */ var resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);
/* harmony import */ var resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_0__);


var isServer = typeof window === "undefined";

/* istanbul ignore next */
var resizeHandler = function resizeHandler(entries) {
  for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var entry = _ref;

    var listeners = entry.target.__resizeListeners__ || [];
    if (listeners.length) {
      listeners.forEach(function (fn) {
        fn();
      });
    }
  }
};

/* istanbul ignore next */
var addResizeListener = function addResizeListener(element, fn) {
  if (isServer) return;
  if (!element.__resizeListeners__) {
    element.__resizeListeners__ = [];
    element.__ro__ = new resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_0___default.a(resizeHandler);
    element.__ro__.observe(element);
  }
  element.__resizeListeners__.push(fn);
};

/* istanbul ignore next */
var removeResizeListener = function removeResizeListener(element, fn) {
  if (!element || !element.__resizeListeners__) return;
  element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);
  if (!element.__resizeListeners__.length) {
    element.__ro__.disconnect();
  }
};

/***/ }),
/* 12 */,
/* 13 */,
/* 14 */
/***/ (function(module, exports) {

module.exports = require("throttle-debounce/debounce");

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/main.vue?vue&type=template&id=ddcdb848&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "label",
    {
      staticClass: "el-radio dg-radio",
      class: [
        _vm.border && _vm.radioSize ? "el-radio--" + _vm.radioSize : "",
        { "is-disabled": _vm.isDisabled },
        { "is-focus": _vm.focus },
        { "is-bordered": _vm.border },
        { "is-checked": _vm.model === _vm.label }
      ],
      attrs: {
        role: "radio",
        "aria-checked": _vm.model === _vm.label,
        "aria-disabled": _vm.isDisabled,
        tabindex: _vm.tabIndex
      },
      on: {
        keydown: function($event) {
          if (
            !$event.type.indexOf("key") &&
            _vm._k($event.keyCode, "space", 32, $event.key, [" ", "Spacebar"])
          ) {
            return null
          }
          $event.stopPropagation()
          $event.preventDefault()
          _vm.model = _vm.isDisabled ? _vm.model : _vm.label
        }
      }
    },
    [
      _c(
        "span",
        {
          staticClass: "el-radio__input",
          class: {
            "is-disabled": _vm.isDisabled,
            "is-checked": _vm.model === _vm.label
          }
        },
        [
          _c("span", { staticClass: "el-radio__inner" }),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.model,
                expression: "model"
              }
            ],
            ref: "radio",
            staticClass: "el-radio__original",
            attrs: {
              type: "radio",
              "aria-hidden": "true",
              name: _vm.name,
              disabled: _vm.isDisabled,
              tabindex: "-1"
            },
            domProps: {
              value: _vm.label,
              checked: _vm._q(_vm.model, _vm.label)
            },
            on: {
              focus: function($event) {
                _vm.focus = true
              },
              click: _vm.handleClick,
              change: [
                function($event) {
                  _vm.model = _vm.label
                },
                _vm.handleChange
              ],
              blur: function($event) {
                _vm.focus = false
              }
            }
          })
        ]
      ),
      _c(
        "span",
        {
          staticClass: "el-radio__label",
          on: {
            keydown: function($event) {
              $event.stopPropagation()
            }
          }
        },
        [
          _vm._t("default"),
          !_vm.$slots.default ? [_vm._v(_vm._s(_vm.label))] : _vm._e()
        ],
        2
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/radio/src/main.vue?vue&type=template&id=ddcdb848&

// EXTERNAL MODULE: external "element-ui"
var external_element_ui_ = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var mainvue_type_script_lang_js_ = ({
    name: 'DgRadio',

    mixins: [external_element_ui_["Radio"]],

    props: {
        // 是否关闭再次点击取消功能
        callOff: Boolean
    },

    methods: {
        // create
        handleClick: function handleClick() {
            var bool = this.model === this.label;
            this.$emit('has-click', this.label);
            if (this.isGroup) {
                this.dispatch('ElRadioGroup', 'handleClick', this.label);
                this.dispatch('DgRadioGroup', 'handleClick', this.label);
            }
            // 如果前后值相等且关闭取消，则不让继续触发
            if (bool && this.callOff) {
                return;
            }
            var val = bool ? '' : this.label;
            this.$emit('input', val);
            this.$emit('change', val);
            // 兼容 <el-radio-group> & <dg-radio-group> 两种方式。注：这两种组件不能使用包含关系。
            if (this.isGroup) {
                this.dispatch('ElRadioGroup', 'handleChange', val);
                this.dispatch('DgRadioGroup', 'handleChange', val);
            }
        },


        // update
        handleChange: function handleChange() {
            var _this = this;

            this.$nextTick(function () {
                // 如果前后值相等则不让触发 change 事件
                if (_this.model === _this.label) {
                    return;
                }
                _this.$emit('change', _this.model);
                if (_this.isGroup) {
                    _this.dispatch('ElRadioGroup', 'handleChange', _this.model);
                    _this.dispatch('DgRadioGroup', 'handleChange', _this.model); // lutz+
                }
            });
        }
    }
});
// CONCATENATED MODULE: ./packages/radio/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/radio/src/main.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  src_mainvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "packages/radio/src/main.vue"
/* harmony default export */ var main = (component.exports);
// CONCATENATED MODULE: ./packages/radio/index.js


/* istanbul ignore next */
main.install = function (Vue) {
    Vue.component(main.name, main);
};

/* harmony default export */ var packages_radio = __webpack_exports__["default"] = (main);

/***/ }),
/* 16 */,
/* 17 */,
/* 18 */
/***/ (function(module, exports) {

module.exports = require("resize-observer-polyfill");

/***/ }),
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio-group/src/main.vue?vue&type=template&id=af339c2c&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "el-radio-group",
    _vm._g(
      _vm._b(
        {
          staticClass: "dg-radio-group",
          attrs: { disabled: _vm.disabled },
          model: {
            value: _vm.val,
            callback: function($$v) {
              _vm.val = $$v
            },
            expression: "val"
          }
        },
        "el-radio-group",
        _vm.$attrs,
        false
      ),
      _vm.listeners
    ),
    [
      _vm.type === "button"
        ? _vm._l(_vm.itemsWithDisabled, function(item, index) {
            return _c(
              "dg-radio-button",
              {
                key: index,
                class: { "is-lace": _vm.isLace && !_vm.disabled },
                attrs: {
                  "call-of": _vm.callOff,
                  label: item[_vm.defaultProp.value],
                  disabled: item[_vm.defaultProp.disabled]
                }
              },
              [_vm._v(_vm._s(item[_vm.defaultProp.label]))]
            )
          })
        : _vm._l(_vm.itemsWithDisabled, function(item, index) {
            return _c(
              "dg-radio",
              {
                key: index,
                class: { "dg-radio-group__vertical": _vm.vertical },
                attrs: {
                  "call-of": _vm.callOff,
                  label: item[_vm.defaultProp.value],
                  disabled: item[_vm.defaultProp.disabled]
                }
              },
              [_vm._v(_vm._s(item[_vm.defaultProp.label]))]
            )
          })
    ],
    2
  )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/radio-group/src/main.vue?vue&type=template&id=af339c2c&

// EXTERNAL MODULE: ./packages/radio/index.js + 5 modules
var packages_radio = __webpack_require__(15);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio-button.vue?vue&type=template&id=18a77a32&
var radio_buttonvue_type_template_id_18a77a32_render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "label",
    {
      staticClass: "el-radio-button",
      class: [
        _vm.size ? "el-radio-button--" + _vm.size : "",
        { "is-active": _vm.value === _vm.label },
        { "is-disabled": _vm.isDisabled },
        { "is-focus": _vm.focus }
      ],
      attrs: {
        role: "radio",
        "aria-checked": _vm.value === _vm.label,
        "aria-disabled": _vm.isDisabled,
        tabindex: _vm.tabIndex
      },
      on: {
        keydown: function($event) {
          if (
            !$event.type.indexOf("key") &&
            _vm._k($event.keyCode, "space", 32, $event.key, [" ", "Spacebar"])
          ) {
            return null
          }
          $event.stopPropagation()
          $event.preventDefault()
          _vm.value = _vm.isDisabled ? _vm.value : _vm.label
        }
      }
    },
    [
      _c("input", {
        directives: [
          {
            name: "model",
            rawName: "v-model",
            value: _vm.value,
            expression: "value"
          }
        ],
        staticClass: "el-radio-button__orig-radio",
        attrs: {
          type: "radio",
          name: _vm.name,
          disabled: _vm.isDisabled,
          tabindex: "-1"
        },
        domProps: { value: _vm.label, checked: _vm._q(_vm.value, _vm.label) },
        on: {
          click: _vm.handleClick,
          change: [
            function($event) {
              _vm.value = _vm.label
            },
            _vm.handleChange
          ],
          focus: function($event) {
            _vm.focus = true
          },
          blur: function($event) {
            _vm.focus = false
          }
        }
      }),
      _c(
        "span",
        {
          staticClass: "el-radio-button__inner",
          style: _vm.value === _vm.label ? _vm.activeStyle : null,
          on: {
            keydown: function($event) {
              $event.stopPropagation()
            }
          }
        },
        [
          _vm._t("default"),
          !_vm.$slots.default ? [_vm._v(_vm._s(_vm.label))] : _vm._e()
        ],
        2
      )
    ]
  )
}
var radio_buttonvue_type_template_id_18a77a32_staticRenderFns = []
radio_buttonvue_type_template_id_18a77a32_render._withStripped = true


// CONCATENATED MODULE: ./packages/radio/src/radio-button.vue?vue&type=template&id=18a77a32&

// EXTERNAL MODULE: external "element-ui"
var external_element_ui_ = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio-button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var radio_buttonvue_type_script_lang_js_ = ({
    name: 'DgRadioButton',

    mixins: [external_element_ui_["RadioButton"]],

    props: {
        // 是否关闭再次点击取消功能
        callOff: Boolean
    },

    methods: {
        // create
        handleClick: function handleClick() {
            var bool = this.value === this.label;
            this.$emit('has-click', this.label);
            if (this.isGroup) {
                this.dispatch('ElRadioGroup', 'handleClick', this.label);
                this.dispatch('DgRadioGroup', 'handleClick', this.label);
            }
            // 如果前后值相等且关闭取消，则不让继续触发
            if (bool && this.callOff) {
                return;
            }
            var val = bool ? '' : this.label;
            this.$emit('input', val);
            this.$emit('change', val);
            // 兼容 <el-radio-group> & <dg-radio-group> 两种方式。注：这两种组件不能使用包含关系。
            if (this._radioGroup) {
                this.dispatch('ElRadioGroup', 'handleChange', val);
                this.dispatch('DgRadioGroup', 'handleChange', val);
            }
        },


        // update
        handleChange: function handleChange() {
            var _this = this;

            this.$nextTick(function () {
                // 如果前后值相等则不让触发 change 事件
                if (_this.value === _this.label) {
                    return;
                }
                _this.$emit('change', _this.value);
                if (_this._radioGroup) {
                    _this.dispatch('ElRadioGroup', 'handleChange', _this.value);
                    _this.dispatch('DgRadioGroup', 'handleChange', _this.value);
                }
            });
        }
    }
});
// CONCATENATED MODULE: ./packages/radio/src/radio-button.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_radio_buttonvue_type_script_lang_js_ = (radio_buttonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/radio/src/radio-button.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  src_radio_buttonvue_type_script_lang_js_,
  radio_buttonvue_type_template_id_18a77a32_render,
  radio_buttonvue_type_template_id_18a77a32_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "packages/radio/src/radio-button.vue"
/* harmony default export */ var radio_button = (component.exports);
// CONCATENATED MODULE: ./packages/radio-button/index.js


/* istanbul ignore next */
radio_button.install = function (Vue) {
  Vue.component(radio_button.name, radio_button);
};

/* harmony default export */ var packages_radio_button = (radio_button);
// EXTERNAL MODULE: ./src/dg-utils/shear.js
var shear = __webpack_require__(5);

// EXTERNAL MODULE: ./src/dg-utils/data-convert.js
var data_convert = __webpack_require__(3);

// EXTERNAL MODULE: ./src/dg-mixins/itemsWithDisabled.js
var dg_mixins_itemsWithDisabled = __webpack_require__(10);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(0);
var external_lodash_default = /*#__PURE__*/__webpack_require__.n(external_lodash_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio-group/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









/* harmony default export */ var mainvue_type_script_lang_js_ = ({
    name: 'DgRadioGroup',

    componentName: 'DgRadioGroup',

    mixins: [dg_mixins_itemsWithDisabled["a" /* default */]],

    components: {
        ElRadioGroup: external_element_ui_["RadioGroup"],
        DgRadioButton: packages_radio_button,
        DgRadio: packages_radio["default"]
    },

    props: {
        // 默认选中值
        value: {
            required: true
        },
        disabled: Boolean,
        // 显示类型，默认为 radio 类型，可选项为 按钮类型
        type: {
            type: String,
            default: ''
        },
        // 是否垂直排列，按钮样式下无效
        vertical: {
            type: Boolean,
            default: false
        },
        // dg-radio callOff
        callOff: Boolean,
        // 是否花边展示
        isLace: {
            type: Boolean,
            default: false
        }
    },

    computed: {
        val: {
            get: function get() {
                var value = this.value,
                    seq = this.seq;

                return Object(data_convert["a" /* data2type */])(value, 'String', seq);
            },
            set: function set(val) {
                this.hookData(val);
            }
        },

        /* 创建原因：
          input 触发两次且值与 output-format 不同
          change 触发两次
        */
        listeners: function listeners() {
            return Object(shear["c" /* filterObj */])(this.$listeners, ['input', 'change']);
        }
    },

    methods: {
        // 触发 input、change 事件
        hookData: function hookData(val) {
            var outputFormat = this.outputFormat,
                seq = this.seq,
                getLable = this.getLable;

            this.$emit('input', Object(data_convert["a" /* data2type */])(val, outputFormat, seq), getLable(val));
            this.$emit('change', val, getLable(val));
        },

        // 用于获取当前选中的对象 { label, value }
        getLable: function getLable(val) {
            var itemsWithDisabled = this.itemsWithDisabled,
                defaultProp = this.defaultProp;

            return external_lodash_default.a.find(itemsWithDisabled, function (item) {
                return val === item[defaultProp.value];
            });
        }
    },

    created: function created() {
        var _this = this;

        this.$on('handleChange', function (val) {
            var outputFormat = _this.outputFormat,
                seq = _this.seq,
                value = _this.value,
                callOff = _this.callOff,
                getLable = _this.getLable;
            // call-off 关闭

            if (callOff) {
                return;
            }
            // 需要触发置空的 input、change 事件
            if (value !== '' && val === '') {
                _this.$emit('input', Object(data_convert["a" /* data2type */])(val, outputFormat, seq), getLable(val));
                _this.$emit('change', val, getLable(val));
            }
        });
        this.$on('handleClick', function (val) {
            _this.$emit('has-click', val);
        });
    }
});
// CONCATENATED MODULE: ./packages/radio-group/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/radio-group/src/main.vue





/* normalize component */

var main_component = Object(componentNormalizer["a" /* default */])(
  src_mainvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var main_api; }
main_component.options.__file = "packages/radio-group/src/main.vue"
/* harmony default export */ var main = (main_component.exports);
// CONCATENATED MODULE: ./packages/radio-group/index.js


/* istanbul ignore next */
main.install = function (Vue) {
    Vue.component(main.name, main);
};

/* harmony default export */ var radio_group = __webpack_exports__["default"] = (main);

/***/ }),
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/main.vue?vue&type=template&id=6a5ec4a3&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "el-select",
    _vm._g(
      _vm._b(
        {
          staticClass: "dg-select",
          attrs: {
            group: _vm.group,
            multiple: _vm.multiple,
            data: _vm.itemsWithDisabled,
            "default-prop": _vm.defaultProp
          },
          model: {
            value: _vm.model,
            callback: function($$v) {
              _vm.model = $$v
            },
            expression: "model"
          }
        },
        "el-select",
        _vm.$attrs,
        false
      ),
      _vm.$listeners
    ),
    [
      _c("template", { slot: "prefix" }, [_vm._t("prefix")], 2),
      _vm.hasSlots
        ? [_vm._t("default")]
        : _vm.group
        ? _vm._l(_vm.groupItems, function(item) {
            return _c(
              "el-option-group",
              { key: item.label, attrs: { label: item.label } },
              _vm._l(item.options, function(child) {
                return _c("el-option", {
                  key: child[_vm.defaultProp.value],
                  attrs: {
                    label: child[_vm.defaultProp.label],
                    value: child[_vm.defaultProp.value],
                    disabled: child[_vm.defaultProp.disabled]
                  }
                })
              }),
              1
            )
          })
        : _vm._l(_vm.itemsWithDisabled, function(item) {
            return _c("el-option", {
              key: item[_vm.defaultProp.value],
              attrs: {
                label: item[_vm.defaultProp.label],
                value: item[_vm.defaultProp.value],
                disabled: item[_vm.defaultProp.disabled]
              }
            })
          })
    ],
    2
  )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/select/src/main.vue?vue&type=template&id=6a5ec4a3&

// EXTERNAL MODULE: external "element-ui"
var external_element_ui_ = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select.vue?vue&type=template&id=0e4aade6&
var selectvue_type_template_id_0e4aade6_render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        {
          name: "clickoutside",
          rawName: "v-clickoutside",
          value: _vm.handleClose,
          expression: "handleClose"
        }
      ],
      staticClass: "el-select",
      class: [_vm.selectSize ? "el-select--" + _vm.selectSize : ""],
      on: {
        click: function($event) {
          $event.stopPropagation()
          return _vm.toggleMenu($event)
        }
      }
    },
    [
      _vm.multiple
        ? _c(
            "div",
            {
              ref: "tags",
              staticClass: "el-select__tags",
              style: {
                "max-width": _vm.inputWidth - 32 + "px",
                width: "100%",
                overflow: "hidden"
              }
            },
            [
              _vm.collapseTags && _vm.selected.length
                ? _c(
                    "span",
                    [
                      _c(
                        "el-tag",
                        {
                          attrs: {
                            closable: !_vm.selectDisabled,
                            size: _vm.collapseTagSize,
                            hit: _vm.selected[0].hitState,
                            "disable-transitions": ""
                          },
                          on: {
                            close: function($event) {
                              return _vm.deleteTag($event, _vm.selected[0])
                            }
                          }
                        },
                        [
                          _c(
                            "span",
                            {
                              staticClass: "el-select__tags-text",
                              attrs: { title: _vm.selected[0].currentLabel }
                            },
                            [_vm._v(_vm._s(_vm.selected[0].currentLabel))]
                          )
                        ]
                      ),
                      _vm.selected.length > 1
                        ? _c(
                            "el-tag",
                            {
                              attrs: {
                                closable: false,
                                size: _vm.collapseTagSize,
                                "disable-transitions": ""
                              }
                            },
                            [
                              _c(
                                "span",
                                { staticClass: "el-select__tags-text" },
                                [_vm._v("+ " + _vm._s(_vm.selected.length - 1))]
                              )
                            ]
                          )
                        : _vm._e()
                    ],
                    1
                  )
                : _vm._e(),
              !_vm.collapseTags && !_vm.dragTags
                ? _c(
                    "transition-group",
                    { on: { "after-leave": _vm.resetInputHeight } },
                    _vm._l(_vm.selected, function(item) {
                      return _c(
                        "el-tag",
                        {
                          key: _vm.getValueKey(item),
                          attrs: {
                            closable: !_vm.selectDisabled,
                            size: _vm.collapseTagSize,
                            hit: item.hitState,
                            "disable-transitions": ""
                          },
                          on: {
                            close: function($event) {
                              return _vm.deleteTag($event, item)
                            }
                          }
                        },
                        [
                          _c(
                            "span",
                            {
                              staticClass: "el-select__tags-text",
                              attrs: { title: item.currentLabel }
                            },
                            [_vm._v(_vm._s(item.currentLabel))]
                          )
                        ]
                      )
                    }),
                    1
                  )
                : _vm._e(),
              !_vm.collapseTags && _vm.dragTags
                ? _c(
                    "transition",
                    { on: { "after-leave": _vm.resetInputHeight } },
                    [
                      _c(
                        "div",
                        {
                          ref: "tagContent",
                          staticClass: "dg-drag-tags__content",
                          style: [{ width: _vm.tagItemLength + "px" }],
                          on: {
                            mousedown: function($event) {
                              $event.stopPropagation()
                              return _vm.handleDragStart($event)
                            }
                          }
                        },
                        _vm._l(_vm.selected, function(item) {
                          return _c(
                            "el-tag",
                            {
                              key: _vm.getValueKey(item),
                              ref: "tagItem",
                              refInFor: true,
                              attrs: {
                                closable: !_vm.selectDisabled,
                                size: _vm.collapseTagSize,
                                hit: item.hitState,
                                "disable-transitions": ""
                              },
                              on: {
                                close: function($event) {
                                  return _vm.deleteTag($event, item)
                                }
                              }
                            },
                            [
                              _c(
                                "span",
                                {
                                  staticClass: "el-select__tags-text",
                                  attrs: { title: item.currentLabel }
                                },
                                [_vm._v(_vm._s(item.currentLabel))]
                              )
                            ]
                          )
                        }),
                        1
                      )
                    ]
                  )
                : _vm._e(),
              _vm.filterable
                ? _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.query,
                        expression: "query"
                      }
                    ],
                    ref: "input",
                    staticClass: "el-select__input",
                    class: [_vm.selectSize ? "is-" + _vm.selectSize : ""],
                    style: {
                      "flex-grow": "1",
                      width: _vm.inputLength / (_vm.inputWidth - 32) + "%",
                      "max-width": _vm.inputWidth - 42 + "px"
                    },
                    attrs: {
                      type: "text",
                      disabled: _vm.selectDisabled,
                      autocomplete: _vm.autoComplete || _vm.autocomplete
                    },
                    domProps: { value: _vm.query },
                    on: {
                      focus: _vm.handleFocus,
                      blur: function($event) {
                        _vm.softFocus = false
                      },
                      click: function($event) {
                        $event.stopPropagation()
                      },
                      keyup: _vm.managePlaceholder,
                      keydown: [
                        _vm.resetInputState,
                        function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k($event.keyCode, "down", 40, $event.key, [
                              "Down",
                              "ArrowDown"
                            ])
                          ) {
                            return null
                          }
                          $event.preventDefault()
                          return _vm.navigateOptions("next")
                        },
                        function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k($event.keyCode, "up", 38, $event.key, [
                              "Up",
                              "ArrowUp"
                            ])
                          ) {
                            return null
                          }
                          $event.preventDefault()
                          return _vm.navigateOptions("prev")
                        },
                        function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k(
                              $event.keyCode,
                              "enter",
                              13,
                              $event.key,
                              "Enter"
                            )
                          ) {
                            return null
                          }
                          $event.preventDefault()
                          return _vm.selectOption($event)
                        },
                        function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k($event.keyCode, "esc", 27, $event.key, [
                              "Esc",
                              "Escape"
                            ])
                          ) {
                            return null
                          }
                          $event.stopPropagation()
                          $event.preventDefault()
                          _vm.visible = false
                        },
                        function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k(
                              $event.keyCode,
                              "delete",
                              [8, 46],
                              $event.key,
                              ["Backspace", "Delete", "Del"]
                            )
                          ) {
                            return null
                          }
                          return _vm.deletePrevTag($event)
                        }
                      ],
                      compositionstart: _vm.handleComposition,
                      compositionupdate: _vm.handleComposition,
                      compositionend: _vm.handleComposition,
                      input: [
                        function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.query = $event.target.value
                        },
                        _vm.debouncedQueryChange
                      ]
                    }
                  })
                : _vm._e()
            ],
            1
          )
        : _vm._e(),
      _c(
        "el-input",
        {
          ref: "reference",
          class: { "is-focus": _vm.visible },
          attrs: {
            type: "text",
            placeholder: _vm.currentPlaceholder,
            name: _vm.name,
            id: _vm.id,
            autocomplete: _vm.autoComplete || _vm.autocomplete,
            size: _vm.selectSize,
            disabled: _vm.selectDisabled,
            readonly: _vm.readonly,
            "validate-event": false
          },
          on: { focus: _vm.handleFocus, blur: _vm.handleBlur },
          nativeOn: {
            keyup: function($event) {
              return _vm.debouncedOnInputChange($event)
            },
            keydown: [
              function($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "down", 40, $event.key, [
                    "Down",
                    "ArrowDown"
                  ])
                ) {
                  return null
                }
                $event.stopPropagation()
                $event.preventDefault()
                return _vm.navigateOptions("next")
              },
              function($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "up", 38, $event.key, [
                    "Up",
                    "ArrowUp"
                  ])
                ) {
                  return null
                }
                $event.stopPropagation()
                $event.preventDefault()
                return _vm.navigateOptions("prev")
              },
              function($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
                ) {
                  return null
                }
                $event.preventDefault()
                return _vm.selectOption($event)
              },
              function($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "esc", 27, $event.key, [
                    "Esc",
                    "Escape"
                  ])
                ) {
                  return null
                }
                $event.stopPropagation()
                $event.preventDefault()
                _vm.visible = false
              },
              function($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "tab", 9, $event.key, "Tab")
                ) {
                  return null
                }
                _vm.visible = false
              }
            ],
            paste: function($event) {
              return _vm.debouncedOnInputChange($event)
            },
            mouseenter: function($event) {
              _vm.inputHovering = true
            },
            mouseleave: function($event) {
              _vm.inputHovering = false
            }
          },
          model: {
            value: _vm.selectedLabel,
            callback: function($$v) {
              _vm.selectedLabel = $$v
            },
            expression: "selectedLabel"
          }
        },
        [
          _vm.$slots.prefix
            ? _c("template", { slot: "prefix" }, [_vm._t("prefix")], 2)
            : _vm._e(),
          _c("template", { slot: "suffix" }, [
            _c("i", {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: !_vm.showClose,
                  expression: "!showClose"
                }
              ],
              class: [
                "el-select__caret",
                "el-input__icon",
                "el-icon-" + _vm.iconClass
              ]
            }),
            _vm.showClose
              ? _c("i", {
                  staticClass:
                    "el-select__caret el-input__icon el-icon-circle-close",
                  on: { click: _vm.handleClearClick }
                })
              : _vm._e()
          ])
        ],
        2
      ),
      _c(
        "transition",
        {
          attrs: { name: "el-zoom-in-top" },
          on: {
            "before-enter": _vm.handleMenuEnter,
            "after-leave": _vm.doDestroy
          }
        },
        [
          _c(
            "el-select-menu",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.visible && _vm.emptyText !== false,
                  expression: "visible && emptyText !== false"
                }
              ],
              ref: "popper",
              attrs: { "append-to-body": _vm.popperAppendToBody }
            },
            [
              _c(
                "el-scrollbar",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.options.length > 0 && !_vm.loading,
                      expression: "options.length > 0 && !loading"
                    }
                  ],
                  ref: "scrollbar",
                  class: {
                    "is-empty":
                      !_vm.allowCreate &&
                      _vm.query &&
                      _vm.filteredOptionsCount === 0
                  },
                  attrs: {
                    tag: "ul",
                    "wrap-class": "el-select-dropdown__wrap",
                    "view-class": "el-select-dropdown__list"
                  }
                },
                [
                  _vm.showNewOption
                    ? _c("el-option", {
                        attrs: { value: _vm.query, created: "" }
                      })
                    : _vm._e(),
                  _vm._t("default")
                ],
                2
              ),
              _vm.emptyText &&
              (!_vm.allowCreate ||
                _vm.loading ||
                (_vm.allowCreate && _vm.options.length === 0))
                ? [
                    _vm.$slots.empty
                      ? _vm._t("empty")
                      : _c("p", { staticClass: "el-select-dropdown__empty" }, [
                          _vm._v(
                            "\n          " +
                              _vm._s(_vm.emptyText) +
                              "\n        "
                          )
                        ])
                  ]
                : _vm._e()
            ],
            2
          )
        ],
        1
      )
    ],
    1
  )
}
var selectvue_type_template_id_0e4aade6_staticRenderFns = []
selectvue_type_template_id_0e4aade6_render._withStripped = true


// CONCATENATED MODULE: ./packages/select/src/select.vue?vue&type=template&id=0e4aade6&

// EXTERNAL MODULE: external "throttle-debounce/debounce"
var debounce_ = __webpack_require__(14);
var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce_);

// EXTERNAL MODULE: ./src/utils/resize-event.js
var resize_event = __webpack_require__(11);

// EXTERNAL MODULE: ./src/dg-utils/shear.js
var shear = __webpack_require__(5);

// EXTERNAL MODULE: ./src/utils/util.js + 1 modules
var util = __webpack_require__(7);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(0);
var external_lodash_default = /*#__PURE__*/__webpack_require__.n(external_lodash_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








// add author: tangdm descript: overwrite SelectMenu 's minWidth
external_element_ui_["Select"].components.ElSelectMenu.watch['$parent.inputWidth'] = function () {
    this.minWidth = Math.max(this.$parent.$el.getBoundingClientRect().width, this.$parent.$el.clientWidth) + 'px';
};

var Select = Object(shear["a" /* complex */])(external_element_ui_["Select"], ['created', 'mounted']);

/* harmony default export */ var selectvue_type_script_lang_js_ = ({
    mixins: [Select],

    props: {
        // add author: tangdm
        dragTags: Boolean,
        defaultProp: Object
    },

    data: function data() {
        return {
            // add author: tangdm descript: drag status for flag
            dragStatus: false,
            // add author: tangdm descript: count tag's item length
            tagItemLength: 0
        };
    },


    watch: {
        selectDisabled: function selectDisabled() {
            var _this = this;

            // create author:lutz describe:!multiple不渲染
            if (!this.multiple) {
                return;
            }
            this.$nextTick(function () {
                _this.resetInputHeight();
            });
        },


        // add author: tangdm
        selected: function selected() {
            var _this2 = this;

            this.$nextTick(function () {
                // 检测判断标签值是否存在
                if (_this2.$refs.tagContent) {
                    _this2.$refs.tagContent.style.transform = 'translateX(0px)';
                }

                // 计算标签数量值的长度
                var count = 0;
                var tagItem = _this2.$refs.tagItem;
                if (tagItem) {
                    tagItem.forEach(function (item) {
                        count += item.$el.offsetWidth + 8;
                    });
                }
                _this2.tagItemLength = count;
            });
        }
    },

    methods: {
        resetInputHeight: function resetInputHeight() {
            var _this3 = this;

            if (this.collapseTags && !this.filterable) return;
            this.$nextTick(function () {
                if (!_this3.$refs.reference) return;
                var inputChildNodes = _this3.$refs.reference.$el.childNodes;
                var input = [].filter.call(inputChildNodes, function (item) {
                    return item.tagName === 'INPUT';
                })[0];
                var tags = _this3.$refs.tags;
                var sizeInMap = _this3.initialInputHeight || 40;

                // update author: tangdm descript: 不同分辨率兼容高度问题
                // [code] input.style.height = this.selected.length === 0
                //        ? sizeInMap + 'px'
                //        : Math.max(
                //        tags ? (tags.clientHeight + (tags.clientHeight > sizeInMap ? 6 : 0)) : 0,
                //        sizeInMap
                // ) + 'px';

                input.style.height = _this3.selected.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tags.clientHeight : 0, sizeInMap) + 'px';
                if (_this3.visible && _this3.emptyText !== false) {
                    _this3.broadcast('ElSelectDropdown', 'updatePopper');
                }
            });
        },
        toggleMenu: function toggleMenu() {
            // update author: tangdm descript: 拖拽状态判断
            if (this.dragStatus) {
                this.dragStatus = false;
                return false;
            }

            if (!this.selectDisabled) {
                if (this.menuVisibleOnFocus) {
                    this.menuVisibleOnFocus = false;
                } else {
                    this.visible = !this.visible;
                }
                if (this.visible) {
                    (this.$refs.input || this.$refs.reference).focus();
                }
            }
        },


        // @update @author:lutz @descript:添加 change 事件参数
        emitChange: function emitChange(val) {
            var getLabel = this.getLabel;

            if (!Object(util["g" /* valueEquals */])(this.value, val)) {
                this.$emit('change', val, getLabel(val));
            }
        },


        // @add @author:lutz @descript:获取过滤值
        getLabel: function getLabel(val) {
            var data = this.$attrs.data;
            var value = this.defaultProp.value;

            return external_lodash_default.a.isArray(val) ? external_lodash_default.a.intersectionBy(data, val.map(function (item) {
                var _ref;

                return _ref = {}, _ref[value] = item, _ref;
            }), value) : external_lodash_default.a.find(data, function (item) {
                return val === item[value];
            });
        },
        resetInputWidth: function resetInputWidth() {
            // update author: tangdm [code] this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;
            // descript: element count item's width for error in layers.
            this.inputWidth = Math.max(this.$refs.reference.$el.getBoundingClientRect().width, this.$refs.reference.$el.clientWidth);
        },


        /**
         * 拖拽标签移动位置
         *
         * @param evt 事件
         * add author: tangdm
         */
        handleDragStart: function handleDragStart(evt) {
            var _this4 = this;

            // 初始化位置
            var disX = evt.clientX - this.$refs.tagContent.offsetLeft;

            // transform 当前的位置
            var transform = this.$refs.tagContent.style.transform;
            var position = transform.match(/-[0-9]+|[0-9]+/g);
            var positionValue = position ? Number(position[0]) : 0;

            // 移动位置变化
            document.onmousemove = function (e) {
                // 拖动的位置距离 支持正负值
                var dragWidth = Number(positionValue) + e.clientX - disX;
                var wrapWidth = _this4.inputWidth - 42;

                // 可拖动的区域宽度 185 为视图的可视宽度
                var dragAreaWidth = _this4.tagItemLength > wrapWidth ? wrapWidth - _this4.tagItemLength : 0;

                // 判断拖拽状态
                if (dragWidth) _this4.dragStatus = true;

                // 调整后拖动的位置距离
                dragWidth = dragWidth > 0 ? 0 : dragWidth < dragAreaWidth ? dragAreaWidth : dragWidth;

                // 更新 transfrom 的值
                _this4.$refs.tagContent.style.transform = 'translateX(' + dragWidth + 'px)';
            };

            // 鼠标上移，移除监听
            document.onmouseup = function (e) {
                document.onmousemove = null;
                document.onmouseup = null;
            };
        }
    },

    created: function created() {
        var _this5 = this;

        this.cachedPlaceHolder = this.currentPlaceholder = this.placeholder;
        if (this.multiple && !Array.isArray(this.value)) {
            this.$emit('input', []);
        }
        if (!this.multiple && Array.isArray(this.value)) {
            this.$emit('input', '');
        }

        this.debouncedOnInputChange = debounce_default()(this.debounce, function () {
            _this5.onInputChange();
        });

        this.debouncedQueryChange = debounce_default()(this.debounce, function (e) {
            _this5.handleQueryChange(e.target.value);
        });

        this.$on('handleOptionClick', this.handleOptionSelect);
        this.$on('setSelected', this.setSelected);
    },
    mounted: function mounted() {
        var _this6 = this;

        if (this.multiple && Array.isArray(this.value) && this.value.length > 0) {
            this.currentPlaceholder = '';
        }
        Object(resize_event["a" /* addResizeListener */])(this.$el, this.handleResize);

        var reference = this.$refs.reference;
        if (reference && reference.$el) {
            var sizeMap = {
                medium: 36,
                small: 32,
                mini: 28
            };
            var input = reference.$el.querySelector('input');

            // add author: tangdm descript: 增加分辨率识别
            var clientBodyWidth = document.body.clientWidth;
            var autoFixedHeight = clientBodyWidth < 1366 ? 24 : clientBodyWidth < 1681 ? 28 : 32;

            // update author: tangdm [code] this.initialInputHeight = input.getBoundingClientRect().height || sizeMap[this.selectSize];
            this.initialInputHeight = sizeMap[this.selectSize] || autoFixedHeight;
        }
        if (this.remote && this.multiple) {
            this.resetInputHeight();
        }
        this.$nextTick(function () {
            if (reference && reference.$el) {
                // update author: tangdm [code] this.inputWidth = reference.$el.getBoundingClientRect().width;
                _this6.inputWidth = Math.max(reference.$el.getBoundingClientRect().width, reference.$el.clientWidth);
            }
        });
        this.setSelected();
    }
});
// CONCATENATED MODULE: ./packages/select/src/select.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_selectvue_type_script_lang_js_ = (selectvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/select/src/select.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  src_selectvue_type_script_lang_js_,
  selectvue_type_template_id_0e4aade6_render,
  selectvue_type_template_id_0e4aade6_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "packages/select/src/select.vue"
/* harmony default export */ var src_select = (component.exports);
// EXTERNAL MODULE: ./src/dg-mixins/itemsWithDisabled.js
var itemsWithDisabled = __webpack_require__(10);

// EXTERNAL MODULE: ./src/dg-utils/data-convert.js
var data_convert = __webpack_require__(3);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var mainvue_type_script_lang_js_ = ({
    name: 'DgSelect',

    mixins: [itemsWithDisabled["a" /* default */]],

    components: {
        ElSelect: src_select,
        ElOptionGroup: external_element_ui_["OptionGroup"],
        ElOption: external_element_ui_["Option"]
    },

    props: {
        // 默认选中值
        value: {
            required: true
        },
        // 是否分组
        group: {
            type: Boolean,
            default: false
        },
        // 分组字段名称
        groupName: {
            type: String,
            default: 'group'
        },
        // 多选
        multiple: {
            type: Boolean,
            default: false
        }
    },

    computed: {
        hasSlots: function hasSlots() {
            return this.$slots && this.$slots.default && this.$slots.default.length > 0;
        },

        model: {
            get: function get() {
                // 数据转换 mulitiple ? <Array> : <String>
                var value = this.value,
                    seq = this.seq,
                    multiple = this.multiple;

                return multiple ? Object(data_convert["b" /* str2arr */])(value, seq) : Object(data_convert["a" /* data2type */])(value, 'String', seq);
            },
            set: function set(val) {
                var outputFormat = this.outputFormat,
                    seq = this.seq;
                // this.$emit('input', data2type(val, outputFormat, seq));
            }
        },

        // 组装分组数据项
        // 例子：[{value：'1', label:'11', group:'A'}, {value：'2', label:'22', group:'A'}]
        //       => { label:'A', options：[{value:'1', label:'11'}, {value: '2', lable: '22'}]}
        groupItems: function groupItems() {
            var groupName = this.groupName;

            var groupObject = {},
                groupArray = [];
            this.itemsWithDisabled.forEach(function (item) {
                var groupVal = item[groupName];
                if (!groupObject[groupVal]) {
                    groupObject[groupVal] = { label: groupVal, options: [] };
                }
                groupObject[groupVal].options.push(item);
            });
            // 将对象转数组
            for (var key in groupObject) {
                groupArray.push(groupObject[key]);
            }
            return groupArray;
        }
    }
});
// CONCATENATED MODULE: ./packages/select/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/select/src/main.vue





/* normalize component */

var main_component = Object(componentNormalizer["a" /* default */])(
  src_mainvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var main_api; }
main_component.options.__file = "packages/select/src/main.vue"
/* harmony default export */ var main = (main_component.exports);
// CONCATENATED MODULE: ./packages/select/index.js


/* istanbul ignore next */
main.install = function (Vue) {
    Vue.component(main.name, main);
};

/* harmony default export */ var packages_select = __webpack_exports__["default"] = (main);

/***/ }),
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */
/***/ (function(module, exports) {

module.exports = require("dayjs");

/***/ }),
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(0);
var external_lodash_default = /*#__PURE__*/__webpack_require__.n(external_lodash_);

// CONCATENATED MODULE: ./src/dg-utils/types.js
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*
 * @Author: lutz
 * @Date: 2019-07-02 13:21:30
 * @Last Modified by: lutz
 * @Last Modified time: 2019-07-04 14:25:16
 */

var toStr = Object.prototype.toString;
var hasOwn = Object.prototype.hasOwnProperty;

// Null、Undefined、Boolean、String、Number、Object、Symbol
var isNull = function isNull(v) {
    return v === null;
};
var isUndefined = function isUndefined(v) {
    return v === void 0;
};
var isBoolean = function isBoolean(v) {
    return toStr.call(v) === '[object Boolean]';
};
var isString = function isString(v) {
    return toStr.call(v) === '[object String]';
};
var isNumber = function isNumber(v) {
    return toStr.call(v) === '[object Number]';
};
var isObject = function isObject(v) {
    return toStr.call(v) === '[object Object]';
};
var isSymbol = function isSymbol(v) {
    return toStr.call(v) === '[object Symbol]';
};

// ELEMENT
var isHtmlElement = function isHtmlElement(v) {
    return v && v.nodeType === Node.ELEMENT_NODE;
};
var isVNode = function isVNode(v) {
    return v !== null && (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && hasOwn.call(v, 'componentOptions');
};

// RegExp、Function、Array
var isRegExp = function isRegExp(v) {
    return toStr.call(v) === '[object RegExp]';
};
var isFunction = function isFunction(v) {
    return toStr.call(v) === '[object Function]';
};
var isArray = Array.isArray || function (v) {
    return toStr.call(v) === '[object Array]';
};

// Empty
var isNil = function isNil(v) {
    return v === null || v === void 0;
};
var isEmpty = function isEmpty(v) {
    return v === null || v === void 0 || v === '';
};

/*
    // 判断整型
    isInteger(1.00) // true
    // 判断浮点型
    const patter = /^(-?\d+)(\.\d+)?$/; // float RegExp
    isFloat(1.00) // false
    // 判断能否转换成数值类型
    isNumberic('string') // false
    isNumberic('0.00') // true
*/
// Number
var isInteger = Number.isInteger || function (v) {
    return typeof v === 'number' && isFinite(v) && Math.floor(v) === v;
};
var isFloat = function isFloat(v) {
    return typeof v === 'number' && v != parseInt(v);
};
var isNumberic = function isNumberic(v) {
    return !isNaN(parseFloat(v)) && isFinite(v);
};

// Date
var isDate = function isDate(v) {
    return toStr.call(v) === '[object Date]';
};

// Object
var hasProp = function hasProp(obj, prop) {
    return hasOwn.call(obj, prop);
};
// 是否引用类型
var isCiteType = function isCiteType(v) {
    return v != null && ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' || typeof v === 'function');
};

// Funciton
var isNative = function isNative(v) {
    return typeof v === 'function' && /native code/.test(v.toString());
};

// ObjectLike
var isObjectLike = function isObjectLike(v) {
    return v != null && (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object';
};
// CONCATENATED MODULE: ./src/dg-utils/date.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
 * @Author: lutz
 * @Date: 2019-06-24 10:41:24
 * @Last Modified by: lutz
 * @Last Modified time: 2020-01-13 17:19:36
 */

/**
 * 验证有效的日期的输入格式
 * @param {String} str yyyy-MM-dd | yyyy-M-D | yyyy:MM:dd | yyyy:M:D | yyyy/MM/dd | yyyy/M/D
 *
 * @returns {Boolean}
 */



function validFormatDatePicker(str) {
    if (!str) {
        return false;
    }
    if (isDate(str)) {
        return true;
    }
    var datePickerRE = /^(\d{1,4})(-|\/|:)(\d{1,2})\2(\d{1,2})$/;
    var result = str.match(datePickerRE);
    if (!result) {
        return false;
    }
    var d = new Date(result[1], result[3] - 1, result[4]);
    return d.getFullYear() == result[1] && d.getMonth() + 1 == result[3] && d.getDate() == result[4];
}

/**
 * 将时间格式化到指定格式
 * y:年份 M:月份 d:日 q:季 w:星期 H:24小时 h:12小时 m:分钟 s:秒 S毫秒
 * @param {String|Object} opt 需要格式化到的字符串 Object默认取format
 * @param {Date|Number} date 时间
 * @param {Boolean} bool 是否关闭时间自动使用当前时间
 *
 * @returns {String}
 */
function formatDate(opt, date, bool) {
    var options = {
        weekdays: ['天', '一', '二', '三', '四', '五', '六', '天'],
        format: 'yyyy-MM-dd HH:mm:ss',
        week: '星期',
        W: '周'
    };

    // 为了方便书写,次序打乱。 opt: {Object|String}; data: {Date|Integer}; bool: {Boolean}
    if (isDate(opt) || isInteger(opt)) {
        opt = [date, date = opt][0]; // 两值交换
    } else if (isDate(bool) || isInteger(bool)) {
        bool = [date, date = bool][0];
    }
    if (isBoolean(opt)) {
        opt = [bool, bool = opt][0];
    } else if (isBoolean(date)) {
        date = [bool, bool = date][0];
    }

    date = isDate(date) ? date : isInteger(date) ? new Date(date) : null;

    // 开启严格模式,禁止传入空值
    if (bool === true && !isDate(date)) {
        return null;
    }

    date = date || new Date();
    opt = isString(opt) ? { format: opt } : opt || {};
    opt = _extends({}, options, opt);
    var fmt = opt.format;
    var obj = {
        y: date.getFullYear(), // 年份，注意必须用getFullYear
        M: date.getMonth() + 1, // 月份，注意是从0-11
        d: date.getDate(), // 日
        q: Math.floor((date.getMonth() + 3) / 3), // 季度
        w: date.getDay(), // 星期，注意是0-6
        H: date.getHours(), // 24小时制
        h: date.getHours() % 12 == 0 ? 12 : date.getHours() % 12, // 12小时制
        m: date.getMinutes(), // 分钟
        s: date.getSeconds(), // 秒
        S: date.getMilliseconds() // 毫秒
    };
    Object.keys(obj).forEach(function (item) {
        fmt = fmt.replace(new RegExp(item + '+', 'g'), function (m) {
            var val = obj[item] + '';
            if (item == 'w') {
                return (m.length > 2 ? opt.week : opt.W) + opt.weekdays[val];
            }
            for (var j = 0, len = val.length; j < m.length - len; j++) {
                val = '0' + val;
            }
            return m.length == 1 ? val : val.substring(val.length - m.length);
        });
    });
    return fmt;
}

/**
 * 判断闰年
 * @param {Number} year 查询的年份
 *
 * @return {Boolean}
 */
function isLeapYear(year) {
    return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);
}

/**
 * 获取月份的天数
 * @param {Number}  year    查询的年份
 * @param {Number}  month   查询的月份（需要 -1）
 *
 * @return {Number}
 */
function getMonthDays(year, month) {
    var monthDays = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    return monthDays[month] || (isLeapYear(year) ? 29 : 28);
}

/**
 * 获取日期在当年的第几天
 * @param {Number}  year    查询的年份
 * @param {Number}  month   查询的月份
 * @param {Number}  day     查询的号数
 *
 * @return {Number}
 */
function getSameYearNumber(year, month, day) {
    var now = new Date(year, month - 1, day);
    var y = now.getFullYear();
    var m = now.getMonth();
    var d = now.getDate();
    for (var i = 0; i < m; i++) {
        d += getMonthDays(y, i);
    }
    return d;
}

/**
 * 获取日期在日期当年的第几周
 * @param {number}  year   查询的年份
 * @param {number}  month  查询的月份
 * @param {number}  date   查询的号数
 *
 * @return {number}
 */
function getWeekNumber(year, month, day) {
    var days = getSameYearNumber(year, month, day);
    var yearFirstDay = new Date(year, 0, 1).getDay() || 7;
    var week = null;
    if (yearFirstDay == 1) {
        week = Math.ceil(days / 7);
    } else {
        days -= 7 - yearFirstDay + 1;
        week = Math.ceil(days / 7) + 1;
    }
    return week;
}

/**
 * 获取当年第几周的起止日期
 * @param {Number}  year   查询的年份
 * @param {Number}  week   第n个星期(超过当年n个周将不显示)
 * @param {Boolean} border defulat: true 允许越过当年年份
 * @param {String}  format 展示的时间格式 yyyy-MM-dd
 *
 * @return {Object}
 */
function getWeekRange(year, week, border) {
    var format = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'yyyy-MM-dd';

    var dayTime = 24 * 60 * 60 * 1000;
    var oldYearDay = new Date(year, 11, 31);
    var newsYearDay = new Date(year, 0, 1);
    var yearFirstDay = newsYearDay.getDay() || 7;
    var sunDay = newsYearDay.getTime();
    var maxWeek = getWeekNumber(year, 12, 31);
    week = week > maxWeek ? maxWeek : week;
    if (yearFirstDay != 7) {
        sunDay += (7 - yearFirstDay) * dayTime;
    }
    sunDay += (week - 1) * 7 * dayTime;
    var startTime = sunDay - 6 * dayTime;
    var endTime = sunDay;
    if (border === false) {
        var yearFirst = newsYearDay.getTime();
        var yearLast = oldYearDay.getTime();
        if (yearFirst > startTime) {
            startTime = yearFirst;
        }
        if (yearLast < endTime) {
            endTime = yearLast;
        }
    }
    return {
        startTime: formatDate(startTime, format),
        endTime: formatDate(endTime, format)
    };
}

/**
 * 近 n 周的日期起止
 * @param {Number} counst 近n周
 * @param {Number} date 日期时间型
 *
 * @return {Array}
 */
function getNearlyWeek(counst, date) {
    var now = typeof date == 'number' ? new Date(date) : new Date();
    var y = now.getFullYear();
    var m = now.getMonth();
    var d = now.getDate();
    var w = getWeekNumber(y, m + 1, d) - 1; // 当前周 - 1, 本周不计算
    var optArr = [];
    while (w > w - counst && optArr.length < counst) {
        if (w == 0) {
            y--;
            w = getWeekNumber(w, 12, 31);
        }
        optArr.push({
            label: y + '年第' + (w < 10 ? '0' + w : w) + '周',
            value: getWeekRange(y, w, false)
        });
        w--;
    }
    return optArr;
}
// EXTERNAL MODULE: external "dayjs"
var external_dayjs_ = __webpack_require__(47);
var external_dayjs_default = /*#__PURE__*/__webpack_require__.n(external_dayjs_);

// CONCATENATED MODULE: ./packages/date-picker/src/analysis-date.js


// import moment from 'moment';


function analysis(v) {
    if (!isString(v)) {
        return;
    }

    // 存储时间的 number
    var obj = {
        y: {
            num: 0,
            rang: [],
            fn: 'FullYear'
        },
        M: {
            num: 0,
            rang: [],
            fn: 'Month'
        },
        d: {
            num: 0,
            rang: [],
            fn: 'Date'
        },
        // 季度
        q: {
            num: 0,
            rang: [],
            fn: 'Month*3'
        },
        w: {
            num: 0,
            fn: 'Date*7'
        },
        H: {
            num: 0,
            rang: [],
            fn: 'Hours'
        },
        // 12小时制
        h: {
            num: 0,
            rang: [],
            fn: 'Hours*2'
        },
        m: {
            num: 0,
            rang: [],
            fn: 'Minutes'
        },
        s: {
            num: 0,
            rang: [],
            fn: 'Seconds'
        },
        // 毫秒
        S: {
            num: 0,
            rang: [],
            fn: 'Milliseconds'
        }
    };

    // 过去时间 | 未来时间
    var op = v.slice(0, 1) === '-' ? -1 : 1;

    // 将下划线去掉
    v = v.replace(/-/g, '');

    Object.keys(obj).forEach(function (item) {
        v.replace(new RegExp('[0-9]+' + item), function (n) {
            obj[item]['num'] = parseInt(n) || 0;
            return ';';
        });
    });

    var now = new Date();
    Object.keys(obj).forEach(function (item) {
        if (!obj[item].num) {
            return;
        }
        var fnArr = obj[item].fn.split('*');
        var n = 1;
        var fn = obj[item].fn;

        if (fnArr.length > 1) {
            fn = fnArr[0];
            n = fnArr[1];
        }
        // 时间减法
        now['set' + fn](now['get' + fn]() + obj[item].num * op * n);
    });
    return now;
}

function str2date(v) {
    if (isArray(v)) {
        // 过滤|转换成有效时间类型
        return v.map(function (item) {
            return validFormatDatePicker(item) ? item : analysis(item);
        });
    } else {
        return validFormatDatePicker(v) ? new Date(v) : analysis(v);
    }
}

/**
 *将类型转换成 Date
 *
 * @export
 * @param {*} v
 */
function any2date(v) {
    if (isDate(v)) {
        return v;
    } else if (isInteger(v)) {
        var date = new Date(v);
        return date.getTime() ? date : null;
    } else if (isString(v)) {
        // let result = v;
        // if (result.length === 14) {
        //     result = result.replace(result.match(/\d{8}/)[0], result.match(/\d{8}/)[0] + " ");
        // }
        return external_dayjs_default()(v).format("YYYY-MM-DD HH:mm:ss");
    }
    return null;
}
// EXTERNAL MODULE: ./packages/select/index.js + 10 modules
var packages_select = __webpack_require__(40);

// EXTERNAL MODULE: ./packages/radio-group/index.js + 11 modules
var radio_group = __webpack_require__(36);

// EXTERNAL MODULE: external "element-ui"
var external_element_ui_ = __webpack_require__(2);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/main.vue?vue&type=script&lang=js&
var mainvue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };









// element-ui Date 值是否相等判断
var valueEquals = function valueEquals(a, b) {
    // considers Date object and string
    var dateEquals = function dateEquals(a, b) {
        var aIsDate = a instanceof Date;
        var bIsDate = b instanceof Date;
        if (aIsDate && bIsDate) {
            return a.getTime() === b.getTime();
        }
        if (!aIsDate && !bIsDate) {
            return a === b;
        }
        return false;
    };

    var aIsArray = a instanceof Array;
    var bIsArray = b instanceof Array;
    if (aIsArray && bIsArray) {
        if (a.length !== b.length) {
            return false;
        }
        return a.every(function (item, index) {
            return dateEquals(item, b[index]);
        });
    }
    if (!aIsArray && !bIsArray) {
        return dateEquals(a, b);
    }
    return false;
};

/* harmony default export */ var mainvue_type_script_lang_js_ = ({
    name: 'DgDatePicker',

    /*  inheritAttrs: false 组件将不会把未被注册的props呈现为普通的HTML属性,并赋值到子组件的根元素
        具体表现： (inheritAttrs 等于 true 和 false 都会有1,3)
            1. 未被注册的props -> $attrs
            2. 未被注册的props不会呈现HTML属性
            3. 剔除 class、style
        详见文档：
            https://cn.vuejs.org/v2/api/index.html#inheritAttrs
            https://www.jianshu.com/p/ce8ca875c337
    */
    inheritAttrs: false,

    inject: {
        elForm: {
            default: ''
        },
        elFormItem: {
            default: ''
        }
    },

    components: {
        DgSelect: packages_select["default"],
        DgRadioGroup: radio_group["default"],
        ElDatePicker: external_element_ui_["DatePicker"]
    },

    props: {
        type: {
            type: String,
            required: true
        },
        isSelect: Boolean,
        callOff: Boolean,
        shortBtns: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        size: {
            type: String,
            default: 'small'
        },
        startValue: [String, Date],
        endValue: [String, Date],
        props: {
            type: Object,
            default: function _default() {
                return { label: 'text', value: 'time' };
            }
        },
        checkValue: {
            default: ''
        },
        value: {
            type: [Array, String, Number],
            default: ''
        }
    },

    // 需要深度监听，因为可能数据类型为数组
    watch: {
        value: {
            immediate: true,
            handler: function handler(val) {
                var dgRanged = this.dgRanged;

                if (dgRanged) {
                    if (isArray(val)) {
                        this.startDate = val[0];
                        this.endDate = val[1];
                    } else {
                        this.singleDate = val;
                    }
                } else {
                    this.singleDate = val;
                }

                // 清空选中的值
                if (!val) {
                    this.selectValue = '';
                    this.activeShortBtn = '';
                }
            }
        },

        startValue: {
            immediate: true,
            handler: function handler(val, oldVal) {
                var changeVal = this.formatToValue(val);
                this.startDate = changeVal;
                this.$emit('update:startValue', changeVal);
            }
        },

        endValue: {
            immediate: true,
            handler: function handler(val, oldVal) {
                var changeVal = this.formatToValue(val);
                this.endDate = changeVal;
                this.$emit('update:endValue', changeVal);
            }
        },

        size: function size(val) {
            // 下拉框只有单选状态，且是快捷方式
            this.$nextTick(function () {
                document.querySelector('.dg-date-picker .el-input>.el-input__inner').style.height = '';
            });
        }
    },

    data: function data() {
        return {
            // 下拉框选中值
            selectValue: '',
            // 单选框选中值
            activeShortBtn: '',
            // 单个输入框日期
            singleDate: '',
            // 开始时间
            startDate: '',
            // 结束时间
            endDate: ''
        };
    },
    render: function render(h) {
        var _this = this;

        var select = void 0,
            radioGroup = void 0,
            dataTime = void 0;

        if (this.isSelect) {
            var dataS = {
                class: 'dg-date-picker-select',
                props: {
                    data: this.validataList,
                    value: this.selectValue,
                    'value-name': this.props.value || 'time',
                    'label-name': this.props.label || 'text'
                },
                attrs: {
                    // size: this.inputSize,
                    disabled: this.$attrs.disabled
                },
                on: {
                    change: this.changeSelect,
                    input: function input(val) {
                        _this.selectValue = val;
                    }
                }
            };
            select = h('dg-select', dataS);
        }

        if (!this.isSelect && this.shortBtnVisible) {
            var dataB = {
                props: {
                    data: this.validataList,
                    value: this.activeShortBtn,
                    type: this.$attrs['radio-type'] || 'button',
                    'call-off': this.callOff,
                    'value-name': this.props.value || 'time',
                    'label-name': this.props.label || 'text'
                },
                attrs: {
                    disabled: this.$attrs.disabled
                    // type: this.$attrs.radioType
                    // size: this.inputSize
                },
                on: {
                    change: this.changeSelect,
                    input: function input(val) {
                        _this.activeShortBtn = val;
                    }
                }
            };
            radioGroup = h('dg-radio-group', dataB);
        }

        if (!this.dgRanged) {
            var data = {
                ref: 'picker',
                props: mainvue_type_script_lang_js_extends({}, this.$attrs, {
                    // size: this.inputSize,
                    type: this.dgType,
                    value: this.singleDate
                }),
                on: mainvue_type_script_lang_js_extends({}, this.$listeners, {
                    pick: this.emitInput,
                    change: this.singleChange,
                    input: function input(val) {
                        _this.singleDate = val;
                    }
                })
            };
            dataTime = h('el-date-picker', data);
        } else {
            var defaultTime = this.$attrs['default-time'];

            var bool = isArray(defaultTime) && defaultTime.length > 1;
            // 两个框分开
            var data1 = {
                ref: 'picker',
                props: mainvue_type_script_lang_js_extends({}, this.$attrs, {
                    // size: this.inputSize,
                    value: this.startDate,
                    type: this.dgType,
                    placeholder: this.$attrs['start-placeholder'],
                    'default-time': bool ? [defaultTime[0]] : defaultTime,
                    'picker-options': mainvue_type_script_lang_js_extends({
                        disabledDate: function disabledDate(time) {
                            if (_this.endDate) {
                                return new Date(_this.endDate).getTime() - 24 * 60 * 60 * 1000 < time.getTime();
                            }
                            return false;
                        }
                    }, this['picker-options'])
                }),
                on: {
                    pick: this.emitInput,
                    change: this.pickChange,
                    input: function input(val) {
                        _this.startDate = val;
                    }
                }
            };
            var data2 = {
                ref: 'picker2',
                props: mainvue_type_script_lang_js_extends({}, this.$attrs, {
                    // size: this.inputSize,
                    value: this.endDate,
                    type: this.dgType,
                    placeholder: this.$attrs['end-placeholder'],
                    'default-time': bool && defaultTime[1] ? [defaultTime[1]] : defaultTime,
                    'picker-options': mainvue_type_script_lang_js_extends({
                        disabledDate: function disabledDate(time) {
                            if (_this.startDate) {
                                return new Date(_this.startDate).getTime() - 24 * 60 * 60 * 1000 > time.getTime();
                            }
                            return false;
                        }
                    }, this['picker-options'])
                }),
                on: {
                    pick: this.emitInput,
                    change: this.pick2Change,
                    input: function input(val) {
                        _this.endDate = val;
                    }
                }
            };

            // 默认分割元素
            var separator = h(
                'span',
                { 'class': 'el-range-separator' },
                [this.$attrs['range-separator']]
            );

            dataTime = h(
                'div',
                { 'class': 'el-date-editor dg-range-editor' },
                [h('el-date-picker', data1), this.$slots['range-separator'] || separator, h('el-date-picker', data2)]
            );
        }

        return h(
            'div',
            { 'class': { 'dg-date-picker': true, 'dg-date-picker__short-btn': this.shortBtnVisible } },
            [select, radioGroup, dataTime]
        );
    },


    computed: {
        _elFormItemSize: function _elFormItemSize() {
            return (this.elFormItem || {}).elFormItemSize;
        },
        inputSize: function inputSize() {
            return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
        },
        shortBtnVisible: function shortBtnVisible() {
            return this.shortBtns.length > 0;
        },
        dgRanged: function dgRanged() {
            /*
                if type.lastIndexOf('range2')
                针对范围型控件，拆分成两个独立控件，通过模板拆分渲染，不采用 elment-ui 自带渲染方式
            */
            return this.type.lastIndexOf('range2') > -1;
        },
        dgType: function dgType() {
            // if type === 'datetimerange2'|'daterange2'|'monthrange2' => 'datetime'|'date'|'month'
            return this.type.replace(/range2/, '');
        },


        /*  创建原因
         1. props.value 可能是数组。radio-button 不能识别这种 value
         2. props.value 可能不存在，而是使用 onClick 方法
        */
        validataList: function validataList() {
            var props = this.props,
                shortBtns = this.shortBtns;

            return (external_lodash_default.a.cloneDeep(shortBtns) || []).map(function (item) {
                var val = item[props.value];
                item._time = val || ''; // 保留原始数据及类型
                item[props.value] = val ? external_lodash_default.a.toString(val) : item[props.label];
                return item;
            });
        }
    },

    methods: {
        changeSelect: function changeSelect(val) {
            // 兼容反选状况
            if (val) {
                var props = this.props,
                    validataList = this.validataList;

                var shortbtn = validataList.find(function (o) {
                    return o[props.value] === val;
                });
                var picker = this.$refs.picker;

                // 用户自定义传值情况
                if (shortbtn.onClick) {
                    shortbtn.onClick(picker);
                } else {
                    var shortVal = shortbtn._time; // 处理原始类型
                    var single = isArray(shortVal) ? shortVal.map(function (item) {
                        return formatDate(str2date(item), true);
                    }) : formatDate(str2date(shortVal), true);
                    if ((this.dgType.lastIndexOf('range') !== -1 || this.dgRanged) && !isArray(shortVal)) {
                        single = shortVal.slice(0, 1) === '-' ? [single, formatDate()] : [formatDate(), single];
                        this.startDate = single[0];
                        this.endDate = single[1] || single[0];
                        this.singleDate = single;
                    } else {
                        this.startDate = single;
                        this.endDate = single;
                        this.singleDate = single;
                    }
                }
            } else {
                this.startDate = '';
                this.endDate = '';
                this.singleDate = '';
            }
            this.changeDate();
        },


        // 将数据按 value-format 传入格式输出
        formatToValue: function formatToValue(value) {
            var _$attrs = this.$attrs,
                format = _$attrs['value-format'],
                defaultTime = _$attrs['default-time'];

            if (!value) {
                return null;
            }

            // fix:修复定义default-time快捷选择无效
            if (isArray(value) && isArray(defaultTime) && defaultTime.length > 1) {
                if (value.length > 0) {
                    value[0] = value[0].split(" ")[0] + " " + defaultTime[0];
                }
                if (value.length > 1) {
                    value[1] = value[1].split(" ")[0] + " " + defaultTime[1];
                }
            }

            // 'timestamp' 显示数值类型
            if (format && format !== 'timestamp') {
                value = isArray(value) ? value.map(function (date) {
                    return formatDate(format, new Date(date));
                }) : formatDate(format, new Date(value));
            }
            if (format === 'timestamp') {
                value = isArray(value) ? value.map(function (date) {
                    return new Date(date).getTime();
                }) : new Date(value).getTime();
            }

            return value;
        },


        // 改变 value、endValue、startValue 触发 emit
        changeDate: function changeDate() {
            var dgType = this.dgType,
                dgRanged = this.dgRanged,
                singleDate = this.singleDate,
                startDate = this.startDate,
                endDate = this.endDate,
                formatToValue = this.formatToValue;

            if (dgRanged) {
                var sVal = formatToValue(startDate);
                var eVal = formatToValue(endDate);
                var seVal = sVal || eVal ? [sVal, eVal] : '';
                this.$emit('input', seVal);
                this.$emit('change', seVal);
                this.$emit('update:startValue', sVal);
                this.$emit('update:endValue', eVal);
            } else {
                var val = formatToValue(singleDate);
                this.$emit('input', val);
                this.$emit('change', val);
                if (isArray(val) && (dgRanged || dgType.lastIndexOf('range') !== -1)) {
                    this.$emit('update:startValue', val[0]);
                    this.$emit('update:endValue', val[1]);
                }
            }
        },


        // element-ui  onPick 选中日期后会执行的回调，只有当 daterange 或 datetimerange 中生效
        emitInput: function emitInput(value) {
            var formatted = isArray(value) ? value.map(function (item) {
                return formatDate(item, true);
            }) : formatDate(value, true);
            var dgRanged = this.dgRanged,
                dgType = this.dgType;

            if (dgRanged || dgType.lastIndexOf('range') !== -1) {
                if (isArray(value)) {
                    this.singleDate = formatted;
                    this.startDate = formatted[0];
                    this.endDate = formatted[1];
                } else {
                    this.singleDate = formatted;
                    this.startDate = formatted;
                    this.endDate = formatted;
                }
            } else {
                this.singleDate = formatted;
                this.startDate = null;
                this.endDate = null;
            }
        },
        singleChange: function singleChange(val) {
            var vl = this.toDate(val);
            this.changeTime();
            this.singleDate = vl;
            this.startDate = isArray(val) ? vl[0] : vl;
            this.endDate = isArray(val) ? vl[1] : vl;
            this.changeDate();
        },
        pickChange: function pickChange(val) {
            this.changeTime();
            this.startDate = this.toDate(val);
            this.changeDate();
        },
        pick2Change: function pick2Change(val) {
            this.changeTime();
            this.endDate = this.toDate(val);
            this.changeDate();
        },


        // 当时间值被改变时应该置空快捷选中
        changeTime: function changeTime() {
            this.activeShortBtn = '';
            this.selectValue = '';
        },


        // 将 String, Date, Number 转换成日期
        toDate: function toDate(val) {
            // 若进入 formatDate 方法，null || '' 条件下则会自动添加当前日期和时间
            if (!val) {
                return '';
            }
            return isArray(val) ? val.map(function (item) {
                return formatDate(any2date(item));
            }) : formatDate(any2date(val));
        }
    },

    created: function created() {
        var _this2 = this;

        var startValue = this.startValue,
            endValue = this.endValue,
            checkValue = this.checkValue,
            type = this.type,
            value = this.value;

        if (startValue) {
            this.startDate = startValue;
        }

        if (endValue) {
            this.endDate = endValue;
        }

        if (startValue || endValue) {
            this.changeDate();
        }

        if ((type === 'datetimerange2' || type === 'daterange2') && value) {
            if (isArray(value) && value.length > 0) {
                this.startDate = value[0];
                this.endDate = value[value.length === 1 ? 0 : 1];
                this.changeDate();
            }
        }

        if (checkValue) {
            var isSelect = this.isSelect,
                shortBtnVisible = this.shortBtnVisible,
                validataList = this.validataList,
                label = this.props.label;

            var findItem = external_lodash_default.a.find(validataList, function (item) {
                return item[label] === checkValue && item.onClick;
            });
            // 如果是 onClick 触发的
            if (findItem) {
                this.selectValue = this.activeShortBtn = checkValue;
                this.$nextTick(function () {
                    var picker = _this2.$refs.picker;
                    findItem.onClick(picker);
                    _this2.changeDate();
                });
                return;
            }

            // 下拉框
            if (isSelect) {
                this.selectValue = checkValue;
                this.changeSelect(checkValue);
            }
            // 按钮
            if (!isSelect && shortBtnVisible) {
                this.activeShortBtn = external_lodash_default.a.isArray(checkValue) ? checkValue.join(',') : checkValue;
                this.changeSelect(checkValue);
            }
        }
    }
});
// CONCATENATED MODULE: ./packages/date-picker/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/date-picker/src/main.vue
var main_render, staticRenderFns




/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  src_mainvue_type_script_lang_js_,
  main_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "packages/date-picker/src/main.vue"
/* harmony default export */ var main = (component.exports);
// CONCATENATED MODULE: ./packages/date-picker/index.js


/* istanbul ignore next */
main.install = function (Vue) {
  Vue.component(main.name, main);
};

/* harmony default export */ var date_picker = __webpack_exports__["default"] = (main);

/***/ })
/******/ ]);