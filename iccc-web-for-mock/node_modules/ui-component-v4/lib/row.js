module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 77);
/******/ })
/************************************************************************/
/******/ ({

/***/ 77:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./packages/row/src/row.js
/* harmony default export */ var row = ({
    name: 'DgRow',

    componentName: 'DgRow',

    props: {
        tag: {
            type: String,
            default: 'div'
        },
        // update by author: tangdm
        gutter: [Number, String],
        type: String,
        justify: {
            type: String,
            default: 'start'
        },
        align: {
            type: String,
            default: 'top'
        },
        // 斑马间距
        zebra: [Number, String],
        // 高度值
        height: [Number, String],
        // 背景色
        background: String,
        // 左右间距
        space: [Number, String]
    },

    computed: {
        style: function style() {
            var ret = {};

            // 去除字符串两端的空格
            function trim(text) {
                return text == null ? '' : (text + '').replace(/^\s*((?:[\S\s]*\S)?)\s*$/, '$1');
            }

            // 提取字符串数值及单位
            function splitGutterStyle(item) {
                var _number = item.match(/^[.0-9]*/gi);
                var _unit = item.match(/[a-z|A-Z]+$/gi);
                return '-' + _number / 2 + (_unit ? _unit : 'px');
            }

            // 提取斑马纹 Zebra 的值
            function splitZebraStyle(item) {
                var _number = item.match(/^[.0-9]*/gi);
                var _unit = item.match(/[a-z|A-Z]+$/gi);
                return _number + (_unit ? _unit : 'px');
            }

            // 检测是否存在该属性
            if (this.gutter) {
                // 检测 `gutter` 的类型
                if (typeof this.gutter === 'string') {
                    // 过滤空格及拆分数组
                    var trimArray = trim(this.gutter).split(' ');

                    // 位数判断
                    if (trimArray.length === 2) {
                        ret.marginLeft = splitGutterStyle(trimArray[0]);
                        ret.marginRight = splitGutterStyle(trimArray[1]);
                    } else {
                        ret.marginLeft = splitGutterStyle(trimArray[0]);
                        ret.marginRight = ret.marginLeft;
                    }
                } else {
                    ret.marginLeft = '-' + this.gutter / 2 + 'px';
                    ret.marginRight = ret.marginLeft;
                }
            }

            // 检测是否存在该属性
            if (this.zebra) {
                // 检测 `gutter` 的类型
                if (typeof this.zebra === 'string') {
                    // 过滤空格及拆分数组
                    var trimGutter = trim(this.zebra);
                    var _trimArray = trimGutter.split(' ');

                    // 位数判断
                    if (_trimArray.length === 2) {
                        ret.paddingTop = splitZebraStyle(_trimArray[0]);
                        ret.paddingBottom = splitZebraStyle(_trimArray[1]);
                    } else {
                        ret.paddingTop = splitZebraStyle(_trimArray[0]);
                        ret.paddingBottom = ret.paddingTop;
                    }
                } else {
                    ret.paddingTop = this.zebra / 2 + 'px';
                    ret.paddingBottom = ret.paddingTop;
                }
            }

            // 检测是否存在该属性
            if (this.space) {
                // 检测 `gutter` 的类型
                if (typeof this.space === 'string') {
                    // 过滤空格及拆分数组
                    var trimSpace = trim(this.space);
                    var _trimArray2 = trimSpace.split(' ');

                    // 位数判断
                    if (_trimArray2.length === 2) {
                        ret.paddingLeft = splitZebraStyle(_trimArray2[0]);
                        ret.paddingRight = splitZebraStyle(_trimArray2[1]);
                    } else {
                        ret.paddingLeft = splitZebraStyle(_trimArray2[0]);
                        ret.paddingRight = ret.paddingLeft;
                    }
                } else {
                    ret.paddingLeft = this.space / 2 + 'px';
                    ret.paddingRight = ret.paddingLeft;
                }
            }

            // add author: tangdm descript: add some model for extended the mode
            if (this.height) {
                ret.height = typeof this.height === 'string' ? this.height : this.height + 'px';
            }

            // add author: tangdm descript: add some model for extended the mode
            if (this.background) {
                ret.background = this.background;
            }

            return ret;
        }
    },

    render: function render(h) {
        return h(this.tag, {
            class: ['el-row', this.justify !== 'start' ? 'is-justify-' + this.justify : '', this.align !== 'top' ? 'is-align-' + this.align : '', { 'el-row--flex': this.type === 'flex' }],
            style: this.style
        }, this.$slots.default);
    }
});
// CONCATENATED MODULE: ./packages/row/index.js


/* istanbul ignore next */
row.install = function (Vue) {
  Vue.component(row.name, row);
};

/* harmony default export */ var packages_row = __webpack_exports__["default"] = (row);

/***/ })

/******/ });