module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 69);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),

/***/ 1:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 13:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function _broadcast(componentName, eventName, params) {
  this.$children.forEach(function (child) {
    var name = child.$options.componentName;

    if (name === componentName) {
      child.$emit.apply(child, [eventName].concat(params));
    } else {
      _broadcast.apply(child, [componentName, eventName].concat([params]));
    }
  });
}
/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    dispatch: function dispatch(componentName, eventName, params) {
      var parent = this.$parent || this.$root;
      var name = parent.$options.componentName;

      while (parent && (!name || name !== componentName)) {
        parent = parent.$parent;

        if (parent) {
          name = parent.$options.componentName;
        }
      }
      if (parent) {
        parent.$emit.apply(parent, [eventName].concat(params));
      }
    },
    broadcast: function broadcast(componentName, eventName, params) {
      _broadcast.call(this, componentName, eventName, params);
    }
  }
});

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("element-ui");

/***/ }),

/***/ 20:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*
 * @Author: lutz 
 * @Date: 2019-04-10 13:21:57 
 * @Last Modified by:   lutz 
 * @Last Modified time: 2019-06-10 13:21:57 
 */

/* harmony default export */ __webpack_exports__["a"] = ({
  default: '字段上验证处在错误%s',
  required: '%s是必须的',
  enum: '%s必须是其中之一%s',
  whitespace: '%s不能为空',
  date: {
    format: '%s日期%s是无效格式%s',
    parse: '%s日期格式不能被解析,%s是无效的 ',
    invalid: '%s无效日期格式：%s'
  },
  types: {
    string: '%s不是一个字符(%s)类型',
    method: '%s不是一个%s(function)类型',
    array: '%s不是一个数组(%s)类型',
    object: '%s不是一个对象(%s)类型',
    number: '%s不是一个数字(%s)类型',
    date: '%s不是一个日期(%s)类型',
    boolean: '%s不是一个布尔(%s)类型',
    integer: '%s不是一个整型(%s)类型',
    float: '%s不是一个浮点(%s)类型',
    regexp: '%s不是一个有效正则(%s)类型',
    email: '%s不是一个有效值%s格式',
    url: '%s不是一个有效值%s格式',
    hex: '%s不是一个有效值%s格式'
  },
  string: {
    len: '%s必须等于%s字节',
    min: '%s必须大于%s字符',
    max: '%s必须小于%s字节',
    range: '%s必须在%s到%s字符内'
  },
  number: {
    len: '%s必须等于%s',
    min: '%s必须大于%s',
    max: '%s必须小于%s',
    range: '%s必须在%s到%s范围内'
  },
  array: {
    len: '%s数组长度必须等于%s',
    min: '%s数组长度必须大于%s',
    max: '%s数组长度必须小于%s',
    range: '%s数组长度必须在%s到%s范围内'
  },
  pattern: {
    mismatch: '%s的值%s不能正确匹配%s'
  }
});

/***/ }),

/***/ 23:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: external "async-validator"
var external_async_validator_ = __webpack_require__(29);
var external_async_validator_default = /*#__PURE__*/__webpack_require__.n(external_async_validator_);

// EXTERNAL MODULE: external "element-ui"
var external_element_ui_ = __webpack_require__(2);

// EXTERNAL MODULE: ./src/utils/util.js + 1 modules
var util = __webpack_require__(7);

// EXTERNAL MODULE: ./packages/form-item/src/message-CN.js
var message_CN = __webpack_require__(20);

// EXTERNAL MODULE: ./src/dg-utils/rules-convert.js
var rules_convert = __webpack_require__(24);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/form-item/src/main.vue?vue&type=script&lang=js&




 // async-validator 的一个中文翻译文件


/* harmony default export */ var mainvue_type_script_lang_js_ = ({
    name: 'DgFormItem',

    mixins: [external_element_ui_["FormItem"]],

    props: {
        rules: [Object, Array, String],
        // label 如果为空的时候使用
        tlabel: String
    },

    methods: {
        // update author:lutz
        validate: function validate(trigger) {
            var _this = this;

            var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : util["e" /* noop */];

            this.validateDisabled = false;
            var rules = this.getFilteredRule(trigger);
            if ((!rules || rules.length === 0) && this.required === undefined) {
                callback();
                return true;
            }
            this.validateState = 'validating';
            var descriptor = {};

            // update-start author:lutz
            // 过滤空值 [{}] || [0] || [''] || [null] || [void 0] || [NaN] 这种情况
            // const filer = _.isArray(rules) ? rules.filter(item => item && Object.keys(item).length) : [];
            if (rules && rules.length /* && filer.length */) {
                    rules.forEach(function (rule, i) {
                        if (!rule.message) {
                            /**
                             * BUG修复
                             * 描述:
                             *      const rules = [{ required: true }, { type: 'number', message: '年龄必须为数字值'}]
                             * 在下列条件同时满足时会触发：
                             *      1. rules[0].message === void 0
                             *      2. rules[0].required === true
                             *
                             * 原因：
                             *      async-validator 默认 type: 'string'
                             */
                            if (Object.keys(rule).length === 1 && rule.required) {
                                rule.message = (_this.label || _this.tlable || '') + '\u662F\u5FC5\u987B\u5B57\u6BB5';
                            } else {
                                rule.fullField = _this.label || _this.tlable || ''; // 请慎用fullField, 特别是在rules是array的时候
                            }
                        }
                        delete rule.trigger;
                        // form-table 中获取 index, parseInt(fullField.split('.')[1]);
                    });
                }
            /* [code]
                if (rules && rules.length > 0) {
                    rules.forEach(rule => {
                        delete rule.trigger;
                    });
                }
            */
            // update-end

            descriptor[this.prop] = rules;
            var validator = new external_async_validator_default.a(descriptor);

            // create author:lutz
            validator.messages(message_CN["a" /* default */]); // 使用中文版本

            var model = {};
            model[this.prop] = this.fieldValue;
            validator.validate(model, { firstFields: true }, function (errors, invalidFields) {
                _this.validateState = !errors ? 'success' : 'error';
                _this.validateMessage = errors ? _this.changeMsg(errors[0].message) : '';
                callback(_this.validateMessage, invalidFields);
                _this.elForm && _this.elForm.$emit('validate', _this.prop, !errors, _this.validateMessage || null);
            });
        },


        // creat author:lutz 修改 message; async-validator 会自带(string)、(function)这样的类型
        changeMsg: function changeMsg() {
            var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

            var reg = /\([a-z]+\)/;
            return msg.replace(reg, '');
        },


        // update author:lutz
        getRules: function getRules() {
            // update-start author:lutz
            var formRules = Object(rules_convert["a" /* ruleChange */])(this.form.rules, 'form');
            var selfRules = Object(rules_convert["a" /* ruleChange */])(this.rules, 'formItem');
            /* [code]
                let formRules = this.form.rules;
                const selfRules = this.rules;
            */
            // update-end

            var requiredRule = this.required !== undefined ? { required: !!this.required } : [];
            var prop = Object(util["a" /* getPropByPath */])(formRules, this.prop || '');
            formRules = formRules ? prop.o[this.prop || ''] || prop.v : [];
            return [].concat(selfRules || formRules || []).concat(requiredRule);
        }
    }
});
// CONCATENATED MODULE: ./packages/form-item/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/form-item/src/main.vue
var render, staticRenderFns




/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  src_mainvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "packages/form-item/src/main.vue"
/* harmony default export */ var main = __webpack_exports__["a"] = (component.exports);

/***/ }),

/***/ 24:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ruleStr2Obj */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ruleChange; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var packages_form_item_src_message_CN_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);



// 正则匹配 range[*]
var reg = /range\[(\S*)\]/i;
// 匹配空字符串
var reg_space = /\s+/g;
var seq = ",";

/**
 *  rule字段 String to Object
 *   a) require 必须值
 *   b) type 类型需求，请查看 message-CN.js 中的 types字段
 *   c) range 范围需求
 *       *range 使用 async-validator 没提供使用说明,所以提供以下类似python的范围语法
 *       range[50] => { len: 50 }
 *       range[1:] => { min: 1 }
 *       range[:100] => { max: 100 }
 *       range[1:100] => { min: 1, max: 100 }
 * @param {String} str rule 字段值
 * @returns {Object}
 */
function ruleStr2Obj() {
  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

  // 去除空格
  var rules = str.replace(reg_space, "");
  var arr = rules.split(seq);
  rules = {};
  // mgs.types中匹配类型
  var type = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.intersection(arr, Object.keys(packages_form_item_src_message_CN_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"].types));
  // 如果多个匹配则取第一个
  if (type && type.length) {
    rules.type = type[0];
  }
  // require: true?
  if (arr && arr.length && arr.indexOf("required") !== -1) {
    rules.required = true;
  }
  arr.forEach(function (item) {
    if (reg.test(item)) {
      var substr = item.match(reg);
      if (substr) {
        var valStr = substr[1];
        // ~-1 === 0
        if (~valStr.indexOf(":")) {
          var val = valStr.split(":");
          if (val[0]) {
            rules.min = parseInt(val[0]);
          }

          if (val[1]) {
            rules.max = parseInt(val[1]);
          }
        } else {
          rules.len = parseInt(valStr);
        }
      }
    }
  });
  return rules;
}

/**
 * formItem 或 form 中 rule 字段的转换
 * @param {*} rules rule 字段值
 * @param {Enum} type ['formItem', 'form'] 对应字母的组件
 * @returns {Array|Object}
 */
function ruleChange(rules, type) {
  // 防止void 0、null、0、''、NaN情况
  if (!rules) {
    return;
  }
  var selfRules = rules;
  if (type === "formItem" && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isString(rules)) {
    selfRules = ruleStr2Obj(rules);
  }
  if (type === "form") {
    selfRules = {};
    for (var key in rules) {
      var item = rules[key];
      selfRules[key] = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isString(item) ? ruleStr2Obj(item) : item;
    }
  }
  return selfRules;
}

/***/ }),

/***/ 29:
/***/ (function(module, exports) {

module.exports = require("async-validator");

/***/ }),

/***/ 31:
/***/ (function(module, exports) {

module.exports = require("xe-utils");

/***/ }),

/***/ 33:
/***/ (function(module, exports) {

module.exports = require("element-ui/lib/utils/util");

/***/ }),

/***/ 35:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-column/src/main.vue?vue&type=template&id=4e76510a&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.isOriginalType
    ? _c(
        "el-table-column",
        _vm._b(
          {
            attrs: { index: _vm.indexMethod },
            scopedSlots: _vm._u(
              [
                _vm.isHeaderSlot
                  ? {
                      key: "header",
                      fn: function(scope) {
                        return [
                          _vm._t(
                            "header",
                            [_vm._v(_vm._s(scope.column.label) + " ")],
                            null,
                            scope
                          )
                        ]
                      }
                    }
                  : null,
                "expand" == _vm.attrs.type
                  ? {
                      key: "default",
                      fn: function(scope) {
                        return [_vm._t("default", null, null, scope)]
                      }
                    }
                  : null
              ],
              null,
              true
            )
          },
          "el-table-column",
          _vm.attrs,
          false
        )
      )
    : _c(
        "el-table-column",
        _vm._b(
          {
            scopedSlots: _vm._u(
              [
                _vm.isHeaderSlot
                  ? {
                      key: "header",
                      fn: function(scope) {
                        return [
                          _vm._t(
                            "header",
                            [_vm._v(_vm._s(scope.column.label) + " ")],
                            null,
                            scope
                          )
                        ]
                      }
                    }
                  : null,
                !_vm.$slots.default
                  ? {
                      key: "default",
                      fn: function(scope) {
                        return [
                          _c(
                            _vm.cmpType,
                            _vm._g(
                              _vm._b(
                                {
                                  tag: "component",
                                  attrs: {
                                    "table-column-overflow":
                                      _vm.tableColumnOverflow || _vm.overflow,
                                    value: _vm.formatValue(scope)
                                  },
                                  on: {
                                    input: function(val) {
                                      return _vm.handleCmpInput(val, scope)
                                    }
                                  }
                                },
                                "component",
                                _vm.getCmpProps(scope),
                                false
                              ),
                              _vm.getCmpEvents(scope)
                            ),
                            [
                              _vm._l(_vm.$scopedSlots, function(val, key) {
                                return [
                                  key != "header"
                                    ? _vm._t(
                                        key,
                                        null,
                                        { formatValue: _vm.formatValue(scope) },
                                        scope
                                      )
                                    : _vm._e()
                                ]
                              })
                            ],
                            2
                          )
                        ]
                      }
                    }
                  : null
              ],
              null,
              true
            )
          },
          "el-table-column",
          _vm.attrs,
          false
        ),
        [_vm.$slots.default ? [_vm._t("default")] : _vm._e()],
        2
      )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/table-column/src/main.vue?vue&type=template&id=4e76510a&

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(0);
var external_lodash_default = /*#__PURE__*/__webpack_require__.n(external_lodash_);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-column/src/template/default-tpl.vue?vue&type=template&id=1b2c0420&
var default_tplvue_type_template_id_1b2c0420_render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "span",
    { style: { "white-space": _vm.isWrap ? "normal" : "nowrap" } },
    [_vm._t("default", [_vm._v("\n    " + _vm._s(_vm.value) + "\n  ")])],
    2
  )
}
var default_tplvue_type_template_id_1b2c0420_staticRenderFns = []
default_tplvue_type_template_id_1b2c0420_render._withStripped = true


// CONCATENATED MODULE: ./packages/table-column/src/template/default-tpl.vue?vue&type=template&id=1b2c0420&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-column/src/template/default-tpl.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var default_tplvue_type_script_lang_js_ = ({
    name: 'DgDefaultTpl',

    props: {
        // 数据值
        value: [String, Number, Boolean],
        scope: Object,
        tableColumnOverflow: String
    },

    computed: {
        // 是否换行:原来方式换行，悬浮换行，提示不换行
        isWrap: function isWrap() {
            var isHover = this.scope.$index == this.scope.store.states.hoverRow;
            var overflow = this.tableColumnOverflow;
            return overflow == 'origin' || overflow == 'wrap' && isHover;
        }
    }
});
// CONCATENATED MODULE: ./packages/table-column/src/template/default-tpl.vue?vue&type=script&lang=js&
 /* harmony default export */ var template_default_tplvue_type_script_lang_js_ = (default_tplvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/table-column/src/template/default-tpl.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  template_default_tplvue_type_script_lang_js_,
  default_tplvue_type_template_id_1b2c0420_render,
  default_tplvue_type_template_id_1b2c0420_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "packages/table-column/src/template/default-tpl.vue"
/* harmony default export */ var default_tpl = (component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-column/src/template/type-tpl.vue?vue&type=template&id=692c915e&
var type_tplvue_type_template_id_692c915e_render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.sourceData.name
    ? _c(
        "div",
        { staticClass: "dg-tpl__type" },
        [
          _c(
            "dg-tag",
            {
              attrs: {
                "custom-color": "",
                effect: "light",
                color: _vm.sourceData.color,
                size: "mini"
              }
            },
            [_vm._v(_vm._s(_vm.sourceData.name))]
          )
        ],
        1
      )
    : _vm._e()
}
var type_tplvue_type_template_id_692c915e_staticRenderFns = []
type_tplvue_type_template_id_692c915e_render._withStripped = true


// CONCATENATED MODULE: ./packages/table-column/src/template/type-tpl.vue?vue&type=template&id=692c915e&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-column/src/template/type-tpl.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var type_tplvue_type_script_lang_js_ = ({
    name: 'DgTypeTpl',

    props: {
        // 模板配置
        value: [String, Number, Boolean],
        // 返回函数
        fn: {
            type: [String, Number, Boolean, Object, Function],
            default: function _default(val) {
                return val;
            }
        },
        // 作用域
        scope: Object,
        // 显示配置
        options: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        // 类别和颜色映射
        map: {
            type: Object,
            default: function _default() {
                return {};
            }
        },
        // 颜色范围
        range: {
            type: Array,
            default: function _default() {
                return ['#ff6d4a', '#ffa32c', '#4877e8', '#67c23a'];
            }
        }
    },

    created: function created() {
        // 合并map和options
        var map = this.map;
        var options = this.options;
        options.forEach(function (item) {
            map[item.name] = item.color;
        });

        // 存储数据在表格全局store上
        var scope = this.scope;
        var store = scope.store;
        var id = scope.column.id;
        if (!store.typeColor) {
            store.typeColor = {};
            store.typeColor[id] = external_lodash_default.a.clone(map);
        } else if (!store.typeColor[id]) {
            store.typeColor[id] = external_lodash_default.a.clone(map);
        }
    },


    computed: {
        // 处理数据
        sourceData: function sourceData() {
            var typeColor = this.scope.store.typeColor[this.scope.column.id];
            var colorType = this.getColorType(typeColor);
            var name = this.value;
            if (external_lodash_default.a.isFunction(this.fn)) {
                this.fn(this.scope);
            } else if (this.fn) {
                name = this.fn;
            }

            var color = typeColor[name];
            if (!color) {
                // 颜色不存在，先从范围取，不存在随机生成
                var newColor = this.getNewColorFromRange(colorType);
                if (!newColor) {
                    newColor = this.getRandomColor();
                    while (colorType[newColor]) {
                        newColor = this.getRandomColor();
                    }
                }
                color = newColor;
            }
            typeColor[name] = color;
            return { name: name, color: color };
        },
        styleColour: function styleColour() {
            return {
                border: '1px solid ' + this.sourceData.color,
                color: this.sourceData.color
            };
        }
    },

    methods: {
        /**
         * 获取随机颜色
         * @returns {string}
         */
        getRandomColor: function getRandomColor() {
            return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);
        },

        /**
         * 获取颜色和类别的对象，如{"#33333":"类别1"}
         * @param typeColor
         */
        getColorType: function getColorType(typeColor) {
            var colorTypeObj = {};
            external_lodash_default.a.forOwn(typeColor, function (val, key) {
                colorTypeObj[val] = key;
            });
            return colorTypeObj;
        },
        getNewColorFromRange: function getNewColorFromRange(colorType) {
            var newColor = '';
            this.range.forEach(function (color) {
                if (!colorType[color]) {
                    newColor = color;
                }
            });
            return newColor;
        }
    }
});
// CONCATENATED MODULE: ./packages/table-column/src/template/type-tpl.vue?vue&type=script&lang=js&
 /* harmony default export */ var template_type_tplvue_type_script_lang_js_ = (type_tplvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/table-column/src/template/type-tpl.vue





/* normalize component */

var type_tpl_component = Object(componentNormalizer["a" /* default */])(
  template_type_tplvue_type_script_lang_js_,
  type_tplvue_type_template_id_692c915e_render,
  type_tplvue_type_template_id_692c915e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var type_tpl_api; }
type_tpl_component.options.__file = "packages/table-column/src/template/type-tpl.vue"
/* harmony default export */ var type_tpl = (type_tpl_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-column/src/template/status-tpl.vue?vue&type=template&id=5b037909&
var status_tplvue_type_template_id_5b037909_render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.sourceData[_vm.labelName]
    ? _c("div", { staticClass: "dg-tpl__status" }, [
        _c("p", { staticClass: "dg-tpl__status--name" }, [
          _c("i", {
            staticClass: "dg-tpl__status--status",
            class: _vm.sourceData.icon,
            style: _vm.styleColour
          }),
          _c("span", { staticClass: "dg-tpl__status--label" }, [
            _vm._v(_vm._s(_vm.sourceData[_vm.labelName]))
          ])
        ])
      ])
    : _vm._e()
}
var status_tplvue_type_template_id_5b037909_staticRenderFns = []
status_tplvue_type_template_id_5b037909_render._withStripped = true


// CONCATENATED MODULE: ./packages/table-column/src/template/status-tpl.vue?vue&type=template&id=5b037909&

// EXTERNAL MODULE: external "xe-utils"
var external_xe_utils_ = __webpack_require__(31);
var external_xe_utils_default = /*#__PURE__*/__webpack_require__.n(external_xe_utils_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-column/src/template/status-tpl.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var status_tplvue_type_script_lang_js_ = ({
    name: 'DgStatusTpl',

    props: {
        // 模板配置
        value: [String, Number, Boolean],
        fn: {
            type: [String, Number, Boolean, Object, Function],
            default: function _default(val) {
                return val;
            }
        },
        scope: Object,
        // 显示配置
        options: {
            type: Array,
            default: function _default() {
                return [{
                    status: '1',
                    icon: 'el-icon-success',
                    color: '#67c23a',
                    name: '已签收'
                }, {
                    status: '2',
                    icon: 'el-icon-warning',
                    color: '#f04134',
                    name: '未签收'
                }, {
                    status: '0',
                    icon: 'el-icon-info',
                    color: '#ffa32c',
                    name: '待签收'
                }];
            }
        },
        valueName: {
            type: String,
            default: 'status'
        },
        labelName: {
            type: String,
            default: 'name'
        }
    },

    computed: {
        // 处理数据
        sourceData: function sourceData() {
            var valueName = this.valueName;

            var _status = this.value;
            var _data = {};
            if (external_xe_utils_default.a.isFunction(this.fn)) {
                _status = this.fn(this.scope);
            } else if (this.fn) {
                _status = this.fn;
            }

            if (external_xe_utils_default.a.isObject(_status)) {
                return _status;
            }

            this.options.forEach(function (item) {
                if (item[valueName] === _status) {
                    _data = item;
                }
            });

            return _data;
        },
        styleColour: function styleColour() {
            return 'color: ' + this.sourceData.color + ';';
        }
    }
});
// CONCATENATED MODULE: ./packages/table-column/src/template/status-tpl.vue?vue&type=script&lang=js&
 /* harmony default export */ var template_status_tplvue_type_script_lang_js_ = (status_tplvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/table-column/src/template/status-tpl.vue





/* normalize component */

var status_tpl_component = Object(componentNormalizer["a" /* default */])(
  template_status_tplvue_type_script_lang_js_,
  status_tplvue_type_template_id_5b037909_render,
  status_tplvue_type_template_id_5b037909_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var status_tpl_api; }
status_tpl_component.options.__file = "packages/table-column/src/template/status-tpl.vue"
/* harmony default export */ var status_tpl = (status_tpl_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-column/src/template/operation-tpl.vue?vue&type=template&id=6cb32446&
var operation_tplvue_type_template_id_6cb32446_render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "dg-tpl__operation" },
    _vm._l(_vm.buttonAllList, function(item) {
      return _c(
        "dg-button",
        {
          key: item.type,
          staticClass: "dg-tpl__operation--btn",
          attrs: { type: "text", size: "small" },
          on: {
            click: function($event) {
              $event.stopPropagation()
              return (function(e) {
                return item.call(_vm.scope, e)
              })($event)
            }
          }
        },
        [_vm._v("\n        " + _vm._s(item.name) + "\n    ")]
      )
    }),
    1
  )
}
var operation_tplvue_type_template_id_6cb32446_staticRenderFns = []
operation_tplvue_type_template_id_6cb32446_render._withStripped = true


// CONCATENATED MODULE: ./packages/table-column/src/template/operation-tpl.vue?vue&type=template&id=6cb32446&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-column/src/template/operation-tpl.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var operation_tplvue_type_script_lang_js_ = ({
    name: 'DgOperationTpl',

    props: {
        scope: Object,
        buttons: {
            type: [Object, Array],
            default: function _default() {
                return [];
            }
        }
    },
    computed: {
        buttonAllList: function buttonAllList() {
            var buttonList = [];
            if (!external_lodash_default.a.isArray(this.buttons)) {
                external_lodash_default.a.forOwn(this.buttons, function (val, key) {
                    buttonList.push({ name: key, call: val });
                });
                return buttonList;
            }

            this.buttons.forEach(function (item) {
                if (item.name && item.call) {
                    buttonList.push({ name: item.name, call: item.call, type: item.type });
                } else {
                    for (var key in item) {
                        buttonList.push({ name: key, call: item[key] });
                    }
                }
            });
            return buttonList;
        }
    }
});
// CONCATENATED MODULE: ./packages/table-column/src/template/operation-tpl.vue?vue&type=script&lang=js&
 /* harmony default export */ var template_operation_tplvue_type_script_lang_js_ = (operation_tplvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/table-column/src/template/operation-tpl.vue





/* normalize component */

var operation_tpl_component = Object(componentNormalizer["a" /* default */])(
  template_operation_tplvue_type_script_lang_js_,
  operation_tplvue_type_template_id_6cb32446_render,
  operation_tplvue_type_template_id_6cb32446_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var operation_tpl_api; }
operation_tpl_component.options.__file = "packages/table-column/src/template/operation-tpl.vue"
/* harmony default export */ var operation_tpl = (operation_tpl_component.exports);
// CONCATENATED MODULE: ./packages/table-column/src/template/index.js





/* harmony default export */ var template = ({
    components: {
        DefaultTpl: default_tpl,
        StatusTpl: status_tpl,
        TypeTpl: type_tpl,
        OperationTpl: operation_tpl
    }
});
// EXTERNAL MODULE: external "element-ui"
var external_element_ui_ = __webpack_require__(2);

// EXTERNAL MODULE: external "element-ui/lib/utils/util"
var util_ = __webpack_require__(33);

// CONCATENATED MODULE: ./packages/table-column/src/config.js


var cellStarts = {
  default: {
    order: ''
  },
  selection: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: '',
    className: 'el-table-column--selection'
  },
  expand: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ''
  },
  index: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ''
  }
};

// 这些选项不应该被覆盖
var cellForced = {
  selection: {
    renderHeader: function renderHeader(h, _ref) {
      var store = _ref.store;

      return h('el-checkbox', {
        attrs: {
          disabled: store.states.data && store.states.data.length === 0,
          indeterminate: store.states.selection.length > 0 && !this.isAllSelected,

          value: this.isAllSelected },
        nativeOn: {
          'click': this.toggleAllSelection
        }
      });
    },
    renderCell: function renderCell(h, _ref2) {
      var row = _ref2.row,
          column = _ref2.column,
          store = _ref2.store,
          $index = _ref2.$index;

      return h('el-checkbox', {
        nativeOn: {
          'click': function click(event) {
            return event.stopPropagation();
          }
        },
        attrs: {
          value: store.isSelected(row),
          disabled: column.selectable ? !column.selectable.call(null, row, $index) : false
        },
        on: {
          'input': function input() {
            store.commit('rowSelectedChanged', row);
          }
        }
      });
    },
    sortable: false,
    resizable: false
  },
  index: {
    renderHeader: function renderHeader(h, _ref3) {
      var column = _ref3.column;

      return column.label || '#';
    },
    renderCell: function renderCell(h, _ref4) {
      var $index = _ref4.$index,
          column = _ref4.column;

      var i = $index + 1;
      var index = column.index;

      if (typeof index === 'number') {
        i = $index + index;
      } else if (typeof index === 'function') {
        i = index($index);
      }

      return h('div', [i]);
    },
    sortable: false
  },
  expand: {
    renderHeader: function renderHeader(h, _ref5) {
      var column = _ref5.column;

      return column.label || '';
    },
    renderCell: function renderCell(h, _ref6) {
      var row = _ref6.row,
          store = _ref6.store;

      var classes = ['el-table__expand-icon'];
      if (store.states.expandRows.indexOf(row) > -1) {
        classes.push('el-table__expand-icon--expanded');
      }
      var callback = function callback(e) {
        e.stopPropagation();
        store.toggleRowExpansion(row);
      };
      return h(
        'div',
        { 'class': classes,
          on: {
            'click': callback
          }
        },
        [h('i', { 'class': 'el-icon el-icon-arrow-right' })]
      );
    },
    sortable: false,
    resizable: false,
    className: 'el-table__expand-column'
  }
};

function defaultRenderCell(h, _ref7) {
  var row = _ref7.row,
      column = _ref7.column,
      $index = _ref7.$index;

  var property = column.property;
  var value = property && Object(util_["getPropByPath"])(row, property).v;
  if (column && column.formatter) {
    return column.formatter(row, column, value, $index);
  }
  return value;
}

function treeCellPrefix(h, _ref8) {
  var row = _ref8.row,
      treeNode = _ref8.treeNode,
      store = _ref8.store;

  if (!treeNode) return null;
  var ele = [];
  var callback = function callback(e) {
    e.stopPropagation();
    store.loadOrToggle(row);
  };
  if (treeNode.indent) {
    ele.push(h('span', { 'class': 'el-table__indent', style: { 'padding-left': treeNode.indent + 'px' } }));
  }
  if (typeof treeNode.expanded === 'boolean' && !treeNode.noLazyChildren) {
    var expandClasses = ['el-table__expand-icon', treeNode.expanded ? 'el-table__expand-icon--expanded' : ''];
    var iconClasses = ['el-icon-arrow-right'];
    if (treeNode.loading) {
      iconClasses = ['el-icon-loading'];
    }
    ele.push(h(
      'div',
      { 'class': expandClasses,
        on: {
          'click': callback
        }
      },
      [h('i', { 'class': iconClasses })]
    ));
  } else {
    ele.push(h('span', { 'class': 'el-table__placeholder' }));
  }
  return ele;
}
// CONCATENATED MODULE: ./packages/table-column/src/column.js



/* harmony default export */ var src_column = ({
  name: external_element_ui_["TableColumn"].name,
  mixins: [external_element_ui_["TableColumn"]],
  methods: {
    setColumnRenders: function setColumnRenders(column) {
      var _this = this;

      var h = this.$createElement;

      // const specialTypes = Object.keys(cellForced);
      // renderHeader 属性不推荐使用。
      if (this.renderHeader) {
        console.warn('[Element Warn][TableColumn]Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header.');
        // } else if (specialTypes.indexOf(column.type) === -1) {
      } else if (column.type !== 'selection') {
        column.renderHeader = function (h, scope) {
          var renderHeader = _this.$scopedSlots.header;
          return renderHeader ? renderHeader(scope) : column.label;
        };
      }

      var originRenderCell = column.renderCell;
      // TODO: 这里的实现调整
      if (column.type === 'expand') {
        // 对于展开行，renderCell 不允许配置的。在上一步中已经设置过，这里需要简单封装一下。
        column.renderCell = function (h, data) {
          return h(
            'div',
            { 'class': 'cell' },
            [originRenderCell(h, data)]
          );
        };
        this.owner.renderExpanded = function (h, data) {
          return _this.$scopedSlots.default ? _this.$scopedSlots.default(data) : _this.$slots.default;
        };
      } else {
        originRenderCell = originRenderCell || defaultRenderCell;
        // 对 renderCell 进行包装
        column.renderCell = function (h, data) {
          var children = null;
          if (_this.$scopedSlots.default) {
            children = _this.$scopedSlots.default(data);
          } else {
            children = originRenderCell(h, data);
          }
          var prefix = treeCellPrefix(h, data);
          var props = {
            class: 'cell',
            style: {}
          };
          if (column.showOverflowTooltip) {
            props.class += ' el-tooltip';
            props.style = { width: (data.column.realWidth || data.column.width) - 1 + 'px' };
          }
          return h(
            'div',
            props,
            [prefix, children]
          );
        };
      }
      return column;
    }
  }
});
// EXTERNAL MODULE: ./src/dg-utils/shear.js
var shear = __webpack_require__(5);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table-column/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var mainvue_type_script_lang_js_ = ({
    name: 'DgTableColumn',

    mixins: [template],

    props: {
        // 组件属性
        cmpProps: [Object, Array],
        // 组件事件
        cmpEvents: Object,
        tableColumnOverflow: String,
        // 字典数据
        dictData: {
            type: Array,
            default: function _default() {
                return [];
            }
        }
    },

    data: function data() {
        // 表码翻译数据对象
        var codeObj = {};
        external_lodash_default.a.forEach(this.dictData, function (item) {
            codeObj[item.value] = item.label;
        });
        return {
            codeObj: codeObj
        };
    },


    watch: {
        // 监控字典数据变化，相应this.codeObj变化
        dictData: function dictData(data) {
            var _this = this;

            external_lodash_default.a.forEach(data, function (item) {
                _this.codeObj[item.value] = item.label;
            });
        }
    },

    computed: {
        // 动态组件类型转换，主要是require和import引入组件
        cmpType: function cmpType() {
            var type = Object(shear["f" /* getCmpType */])(this.$attrs.type);
            return type ? type : 'default-tpl';
        },

        // el-table-column组件的属性
        attrs: function attrs() {
            var isTooltip = this.tableColumnOverflow || this.overflow;
            var filterObj = {
                type: function type(p, _type) {
                    return external_lodash_default.a.isString(_type) ? _type : undefined;
                },
                showOverflowTooltip: function showOverflowTooltip(p, val) {
                    return isTooltip === 'tooltip' ? true : val;
                }
            };
            var result = Object(shear["d" /* getCmpProps */])(src_column, this, filterObj);
            this._getCmpPropsCallback(result);
            return result;
        },

        // 是否表头插槽
        isHeaderSlot: function isHeaderSlot() {
            return this.$slots['header'] || this.$scopedSlots['header'];
        },

        // 原来的类型"selection", "index", "expand"
        isOriginalType: function isOriginalType() {
            return external_lodash_default.a.isString(this.attrs.type) && external_lodash_default.a.includes(['selection', 'index', 'expand'], this.attrs.type);
        }
    },

    inject: ['overflow', 'paginationOptions'],

    components: {
        ElTableColumn: src_column
    },

    methods: {
        _getCmpPropsCallback: function _getCmpPropsCallback() {},

        /**
         * 获取组件绑定对象
         * @param scope
         * @param cmpProps
         */
        getCmpProps: function getCmpProps(scope, reg) {
            var cmpProps = external_lodash_default.a.assign({ scope: scope }, this.cmpProps, Object(shear["e" /* getCmpPropsFromAttrs */])(this, /^cmp-props-/));
            if (reg) {
                cmpProps = external_lodash_default.a.assign(cmpProps, Object(shear["e" /* getCmpPropsFromAttrs */])(this, reg));
            }

            // 如果是函数则传入scope，返回属性值
            var bindProps = external_lodash_default.a.mapValues(cmpProps, function (val) {
                return external_lodash_default.a.isFunction(val) ? val.apply([null], [scope]) : val;
            });
            this._getCmpProps(bindProps);
            return bindProps;
        },
        _getCmpProps: function _getCmpProps() {},

        /**
         * 获取事件对象
         * @param scope
         * @param cmpEvents
         * @returns {object}
         */
        getCmpEvents: function getCmpEvents(scope, reg) {
            var cmpEventsOther = Object(shear["e" /* getCmpPropsFromAttrs */])(this, reg || /^cmp-events-/);
            var cmpEvents = external_lodash_default.a.assign({}, this.cmpEvents, cmpEventsOther);
            // 增加scope参数到末尾
            var bindEvents = external_lodash_default.a.mapValues(cmpEvents, function (cb) {
                return external_lodash_default.a.bind(cb, null, [scope]);
            });
            return bindEvents;
        },

        /**
         * 值格式化
         * @param scope
         * @returns {any}
         */
        formatValue: function formatValue(scope) {
            var _this2 = this;

            var value = external_lodash_default.a.get(scope.row, scope.column.property, '');
            if (this.attrs.formatter) {
                value = this.attrs.formatter(scope.row, scope.column, value, scope.$index);
            } else if (value != null && value !== "" && !external_lodash_default.a.isEmpty(this.codeObj)) {
                // 表码翻译
                var valueArr = [];
                var val = String(value);
                val.split(',').forEach(function (item) {
                    valueArr.push(_this2.codeObj[item] || item);
                });
                value = valueArr.join(',');
            }
            value = this._formatValue(value, scope);
            return value;
        },
        _formatValue: function _formatValue(value) {
            return value;
        },

        /**
         * 获取真实值
         * @param scope
         * @returns {String}
         */
        getValue: function getValue(scope) {
            var value = external_lodash_default.a.get(scope.row, scope.column.property, '');
            return value;
        },

        /**
         * 获取input事件处理函数
         * @param scope
         * @returns {Function}
         */
        handleCmpInput: function handleCmpInput(val, scope) {
            scope.row[scope.column.property] = val;
        },

        /**
         * 默认索引方法重写
         *
         * @param index [Number] 默认索引值
         * @return 显示的索引值
         */
        indexMethod: function indexMethod(index) {
            var _paginationOptions = this.paginationOptions,
                currentPage = _paginationOptions.currentPage,
                pageSize = _paginationOptions.pageSize;

            // 支持自定义索引

            if (this.$attrs.index) {
                return this.$attrs.index(index);
            }

            if (pageSize && currentPage) {
                return index + 1 + (currentPage - 1) * pageSize;
            } else {
                return index + 1;
            }
        }
    }
});
// CONCATENATED MODULE: ./packages/table-column/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/table-column/src/main.vue





/* normalize component */

var main_component = Object(componentNormalizer["a" /* default */])(
  src_mainvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var main_api; }
main_component.options.__file = "packages/table-column/src/main.vue"
/* harmony default export */ var main = (main_component.exports);
// CONCATENATED MODULE: ./packages/table-column/index.js


/* istanbul ignore next */
main.install = function (Vue) {
    Vue.component(main.name, main);
};

/* harmony default export */ var table_column = __webpack_exports__["default"] = (main);

/***/ }),

/***/ 39:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23);


/* istanbul ignore next */
_src_main__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].install = function (Vue) {
  Vue.component(_src_main__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].name, _src_main__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]);
};

/* harmony default export */ __webpack_exports__["default"] = (_src_main__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]);

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ }),

/***/ 5:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return complex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return filterObj; });
/* unused harmony export replaceObj */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return complexObj; });
/* unused harmony export hyphenate */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return getCmpProps; });
/* unused harmony export getCmpEvents */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return getCmpType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return getCmpPropsFromAttrs; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
 * @Author: lutz
 * @Date: 2019-06-05 17:05:32
 * @Last Modified by: lutz
 * @Last Modified time: 2019-12-06 08:58:43
 */



/**
 * 修改组件属性或对象的属性
 * 深度克隆
 * @param {Object} cpm
 * @param {Array|Object} hook 生命周期函数和组件属性；数组默认删除，对象默认替换（恒等undefined，默认删除）
 * @param {Array|Object} watch 监听属性的修改
 * @return {Object}
 */
function complex(cpm, hook, watch) {
    var component = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.cloneDeep(cpm);

    if (hook) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(hook)) {
            hook.forEach(function (item) {
                delete component[item];
            });
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(hook)) {
            for (var key in hook) {
                if (hook[key] === void 0) {
                    delete component[key];
                } else {
                    component[key] = hook[key];
                }
            }
        }
    }

    if (watch) {
        if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(watch) && component.watch) {
            watch.forEach(function (item) {
                delete component.watch[item];
            });
        } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(watch)) {
            for (var _key in watch) {
                if (watch[_key] === void 0) {
                    delete component.watch[_key];
                } else {
                    component.watch[_key] = watch[_key];
                }
            }
        }
    }

    return component;
}

/**
 * 删除对象上的属性
 * @param {object} obj 需要操作的对象
 * @param {array} filterArr 需要删除的属性名称
 *
 * @return {object}
 */
function filterObj() {
    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var filterArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

    var newObj = _extends({}, obj);
    filterArr.forEach(function (item) {
        delete newObj[item];
    });
    return newObj;
}

/**
 * 替换对象上的属性
 * @param {object} obj 需要操作的对象
 * @param {object} filterObj 需要替换的属性名称，undefined则会删除对象上属性
 *
 * @return {object}
 */
function replaceObj() {
    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var filterObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var newObj = _extends({}, obj, filterObj);
    Object.keys(filterObj).forEach(function (item) {
        if (filterObj[item] === void 0) {
            delete newObj[item];
        }
    });
    return newObj;
}

/**
 * 根据参数操作对象
 * 浅拷贝
 * demo
 * a) 过滤undefined
 *  var obj = { input: void 0, change() { console.log('change') } }
 *  complexObj(obj, null, true) // { change: f }
 *  obj // { input: undefined, change: f }
 *
 * b) 删除属性
 *  var obj = { a: 2, b: 3 }, arr = ['a', 'c']
 *  complexObj(obj, arr) // { b: 3 }
 *  obj // {a: 2, b: 3}
 *
 * c) 替换属性
 *  var obj = { a: 2, b: 3 }, fobj = { a: void 0, c: 9, b: 4 }
 *  complexObj(obj, fobj) // { b: 4, c: 9 }
 *  obj // {a: 2, b: 3}
 *
 *
 * @param {object} obj 需要操作的对象
 * @param {array|object} filterVal 数组：需要删除的属性名称，对象：需要替换的属性名称，undefined则会删除对象上属性
 * @param {boolen} filterNull 是否过滤 undefined
 *
 * @return {object}
 */
function complexObj(obj, filterVal) {
    var filterNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    var newObj = _extends({}, obj);

    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isArray(filterVal)) {
        newObj = filterObj(obj, filterVal);
    } else if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(filterVal)) {
        newObj = replaceObj(obj, filterVal);
    }

    // 过滤 undefined
    if (filterNull) {
        Object.keys(newObj).forEach(function (item) {
            if (newObj[item] === void 0) {
                delete newObj[item];
            }
        });
    }

    return newObj;
}

var hyphenateRE = /\B([A-Z])/g;

/**
 * 将驼峰转换成-隔开
 * hyphenate('ElTable') => "el-table"
 * @param {string} str
 * @return {string}
 */
var hyphenate = function hyphenate(str) {
    return str.replace(hyphenateRE, "-$1").toLowerCase();
};

/**
 * 获取指定组件的参数值
 * @param cmp 组件对象，如ElTable
 * @param instance  当前组件对象,调用时，传this
 * @param filterObject 过滤属性值，{name:"11",sex:(props,val)=>val,age:undefined} 属性undefined 删除属性
 */
function getCmpProps(cmp, instance) {
    var filterObj = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    // 如果不是组件函数，则生成组件函数，主要是把混合的属性合并在一起
    if (!lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isFunction(cmp)) {
        cmp = instance.constructor.extend(cmp);
    }
    // 传入属性值+默认的值
    var propsData = _extends({}, instance.$attrs, instance.$props);

    // 过滤属性值
    var cmpProps = {};
    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forOwn(cmp.options.props, function (value, key) {
        var propValue = propsData[key] || propsData[hyphenate(key)];
        // 过滤组件属性
        if (filterObj.hasOwnProperty(key)) {
            propValue = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isFunction(filterObj[key]) ? filterObj[key](propsData, propValue) : filterObj[key];
        }

        // 过滤 undefined
        if (propValue !== undefined) {
            cmpProps[key] = propValue;
        }
    });

    return cmpProps;
}

/**
 * 获取组件的事件对象
 * @param instance
 * @param filterObj {click:"handleClick",change:(evt)=>val,input:undefined} 属性undefined 删除属性
 * @returns {*}
 */
function getCmpEvents(instance) {
    var filterObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var listeners = lodash__WEBPACK_IMPORTED_MODULE_0___default.a.clone(instance.$listeners);
    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.forOwn(filterObj, function (val, key) {
        if (val && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isString(val)) {
            listeners[key] = instance[val];
        } else if (val && lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isFunction(val)) {
            listeners[key] = val;
        } else if (val === undefined) {
            delete listeners[key];
        }
    });
    return listeners;
}

/**
 * 根据组件参数是，require、import获取组件的对象
 * @param type
 * @returns {type}
 */
function getCmpType(type) {
    if (lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isObject(type) && type.default) {
        type = type.default;
    }
    if (type && type instanceof Promise) {
        var promise = type;
        type = function type(resolve, reject) {
            promise.then(function (obj) {
                resolve(obj);
            });
        };
    }
    return type;
}

/**
 * 从$attrs获取匹配的属性
 * @param instance
 * @param reg
 */
function getCmpPropsFromAttrs(instance, reg) {
    var attr = instance.$attrs;
    var obj = {};

    Object.keys(attr).map(function (item) {
        if (reg.test(item)) {
            obj[item.replace(reg, "")] = attr[item];
        }
    });

    return obj;
}

/***/ }),

/***/ 69:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/line-table/src/line-column.vue?vue&type=template&id=3fbadc8e&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.isOriginalType
    ? _c(
        "el-table-column",
        _vm._b(
          {
            scopedSlots: _vm._u(
              [
                _vm.isHeaderSlot
                  ? {
                      key: "header",
                      fn: function(scope) {
                        return [
                          _vm._t(
                            "header",
                            [_vm._v(_vm._s(scope.column.label))],
                            null,
                            scope
                          )
                        ]
                      }
                    }
                  : null,
                "expand" == _vm.attrs.type
                  ? {
                      key: "default",
                      fn: function(scope) {
                        return [_vm._t("default", null, null, scope)]
                      }
                    }
                  : null
              ],
              null,
              true
            )
          },
          "el-table-column",
          _vm.attrs,
          false
        )
      )
    : _c(
        "el-table-column",
        _vm._b(
          {
            scopedSlots: _vm._u(
              [
                _vm.isHeaderSlot
                  ? {
                      key: "header",
                      fn: function(scope) {
                        return [
                          _vm._t(
                            "header",
                            [_vm._v(_vm._s(scope.column.label))],
                            null,
                            scope
                          )
                        ]
                      }
                    }
                  : null,
                !_vm.$slots.default
                  ? {
                      key: "default",
                      fn: function(scope) {
                        return [
                          !_vm.isEdit(scope)
                            ? _c(
                                _vm.cmpType,
                                _vm._g(
                                  _vm._b(
                                    {
                                      tag: "component",
                                      attrs: {
                                        value: _vm.formatValue(scope),
                                        "table-column-overflow": _vm.overflow,
                                        disabled: _vm.formTable.disabled
                                      },
                                      on: {
                                        input: function(val) {
                                          return _vm.handleCmpInput(val, scope)
                                        }
                                      }
                                    },
                                    "component",
                                    _vm.getCmpProps(scope),
                                    false
                                  ),
                                  _vm.getCmpEvents(scope)
                                ),
                                [
                                  _vm._l(_vm.$scopedSlots, function(val, key) {
                                    return [
                                      key != "header" && key != "edit"
                                        ? _vm._t(key, null, null, scope)
                                        : _vm._e()
                                    ]
                                  })
                                ],
                                2
                              )
                            : _c(
                                "dg-form-item",
                                _vm._b(
                                  {
                                    class: ["dg-form-column__form-item--wrap"],
                                    attrs: {
                                      prop: _vm.getFormItemProp(scope),
                                      rules: _vm.formItemRules
                                    }
                                  },
                                  "dg-form-item",
                                  _vm.formItemProps,
                                  false
                                ),
                                [
                                  _vm._t("edit", null, null, scope),
                                  _c(
                                    _vm.editType,
                                    _vm._g(
                                      _vm._b(
                                        {
                                          tag: "component",
                                          attrs: {
                                            value: _vm.getValue(scope),
                                            data: _vm.codeData,
                                            disabled: _vm.formTable.disabled
                                          },
                                          on: {
                                            input: function(val) {
                                              return _vm.handleCmpInput(
                                                val,
                                                scope
                                              )
                                            }
                                          }
                                        },
                                        "component",
                                        _vm.getCmpProps(scope, /^edit-props-/),
                                        false
                                      ),
                                      _vm.getCmpEvents(scope, /^edit-events-/)
                                    ),
                                    [
                                      _vm._l(_vm.$scopedSlots, function(
                                        val,
                                        key
                                      ) {
                                        return [
                                          key != "header" && key != "edit"
                                            ? _vm._t(key, null, null, scope)
                                            : _vm._e()
                                        ]
                                      })
                                    ],
                                    2
                                  )
                                ],
                                2
                              )
                        ]
                      }
                    }
                  : null
              ],
              null,
              true
            )
          },
          "el-table-column",
          _vm.attrs,
          false
        ),
        [_vm.$slots.default ? [_vm._t("default")] : _vm._e()],
        2
      )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/line-table/src/line-column.vue?vue&type=template&id=3fbadc8e&

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(0);
var external_lodash_default = /*#__PURE__*/__webpack_require__.n(external_lodash_);

// EXTERNAL MODULE: ./packages/table-column/index.js + 28 modules
var table_column = __webpack_require__(35);

// EXTERNAL MODULE: ./packages/form-item/index.js
var form_item = __webpack_require__(39);

// EXTERNAL MODULE: ./src/mixins/emitter.js
var emitter = __webpack_require__(13);

// EXTERNAL MODULE: ./src/dg-utils/shear.js
var shear = __webpack_require__(5);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/line-table/src/line-column.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var line_columnvue_type_script_lang_js_ = ({
    name: 'DgLineColumn',

    mixins: [emitter["a" /* default */], table_column["default"]],

    inject: ['formTable', 'elForm'],

    components: { DgFormItem: form_item["default"] },

    props: {
        // options 默认操作列表
        prop: String
    },

    computed: {
        // 默认数据来源为表码翻译数据
        codeData: function codeData() {
            var data = [];
            external_lodash_default.a.forOwn(this.codeObj, function (val, key) {
                data.push({ label: val, value: key });
            });
            return data;
        },

        // 编辑类型
        editType: function editType() {
            var editType = Object(shear["f" /* getCmpType */])(this.$attrs['edit-type']);
            var type = Object(shear["f" /* getCmpType */])(this.$attrs['type']);
            // 修改组件类型不存在，且修改插槽不存在，则用type，type不存在就默认
            if (!editType && !this.$scopedSlots['edit']) {
                editType = type || 'default-tpl';
            }
            return editType;
        },

        // 表单项的props参数
        formItemProps: function formItemProps() {
            var props = Object(shear["d" /* getCmpProps */])(form_item["default"], this, {
                labelWidth: '0',
                prop: undefined,
                label: undefined,
                tlabel: function tlabel(props) {
                    return props['label'];
                }
            });
            return props;
        },

        // 合并获取校验规则，从form获取对应的字段的规则，和列设置的规则，优先列设置的规则
        formItemRules: function formItemRules() {
            var rules = this.rules || this.elForm.rules && this.elForm.rules[this.prop] || {};
            return rules;
        }
    },

    methods: {
        /**
         * 获取formItem的prop属性，获取table的prop，拼成'formData.0.age'或者‘0.age'的字符串
         * @param scope
         * @returns {string}
         */
        getFormItemProp: function getFormItemProp(scope) {
            var prop = this.elForm.$attrs['prop'];
            return prop + '.' + scope.$index + '.' + scope.column.property;
        },

        /**
         * 是否编辑，（1）行模式：修改行等于当前行 （2）列模式：修改列id等于当前列
         * @param row
         * @param column
         * @returns {boolean}
         */
        isEdit: function isEdit(_ref) {
            var row = _ref.row,
                column = _ref.column;

            var isRow = this.formTable.editRow === row;
            var isCell = column.id === this.formTable.editColumn.id;
            var isCellMode = this.formTable.mode == 'cell';
            return isCellMode ? isRow && isCell : isRow;
        }
    }
});
// CONCATENATED MODULE: ./packages/line-table/src/line-column.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_line_columnvue_type_script_lang_js_ = (line_columnvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(1);

// CONCATENATED MODULE: ./packages/line-table/src/line-column.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  src_line_columnvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "packages/line-table/src/line-column.vue"
/* harmony default export */ var line_column = (component.exports);
// CONCATENATED MODULE: ./packages/line-column/index.js


/* istanbul ignore next */
line_column.install = function (Vue) {
    Vue.component(line_column.name, line_column);
};

/* harmony default export */ var packages_line_column = __webpack_exports__["default"] = (line_column);

/***/ }),

/***/ 7:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: external "vue"
var external_vue_ = __webpack_require__(4);
var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

// CONCATENATED MODULE: ./src/utils/types.js
function isString(obj) {
  return Object.prototype.toString.call(obj) === '[object String]';
}

function isObject(obj) {
  return Object.prototype.toString.call(obj) === '[object Object]';
}

function isHtmlElement(node) {
  return node && node.nodeType === Node.ELEMENT_NODE;
}

var isFunction = function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
};

var isUndefined = function isUndefined(val) {
  return val === void 0;
};

var isDefined = function isDefined(val) {
  return val !== undefined && val !== null;
};
// CONCATENATED MODULE: ./src/utils/util.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return noop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return hasOwn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return toObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getValueByPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getPropByPath; });
/* unused harmony export generateId */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return valueEquals; });
/* unused harmony export escapeRegexpString */
/* unused harmony export arrayFindIndex */
/* unused harmony export arrayFind */
/* unused harmony export coerceTruthyValueToArray */
/* unused harmony export isIE */
/* unused harmony export isEdge */
/* unused harmony export autoprefixer */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return kebabCase; });
/* unused harmony export capitalize */
/* unused harmony export looseEqual */
/* unused harmony export arrayEquals */
/* unused harmony export isEqual */
/* unused harmony export isEmpty */
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };




var util_hasOwnProperty = Object.prototype.hasOwnProperty;

function noop() {}

function hasOwn(obj, key) {
  return util_hasOwnProperty.call(obj, key);
}

function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to;
}

function toObject(arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res;
}

var getValueByPath = function getValueByPath(object, prop) {
  prop = prop || "";
  var paths = prop.split(".");
  var current = object;
  var result = null;
  for (var i = 0, j = paths.length; i < j; i++) {
    var path = paths[i];
    if (!current) break;

    if (i === j - 1) {
      result = current[path];
      break;
    }
    current = current[path];
  }
  return result;
};

function getPropByPath(obj, path, strict) {
  var tempObj = obj;
  path = path.replace(/\[(\w+)\]/g, ".$1");
  path = path.replace(/^\./, "");

  var keyArr = path.split(".");
  var i = 0;
  for (var len = keyArr.length; i < len - 1; ++i) {
    if (!tempObj && !strict) break;
    var key = keyArr[i];
    if (key in tempObj) {
      tempObj = tempObj[key];
    } else {
      if (strict) {
        throw new Error("please transfer a valid prop path to form item!");
      }
      break;
    }
  }
  return {
    o: tempObj,
    k: keyArr[i],
    v: tempObj ? tempObj[keyArr[i]] : null
  };
}

var generateId = function generateId() {
  return Math.floor(Math.random() * 10000);
};

var valueEquals = function valueEquals(a, b) {
  // see: https://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript
  if (a === b) return true;
  if (!(a instanceof Array)) return false;
  if (!(b instanceof Array)) return false;
  if (a.length !== b.length) return false;
  for (var i = 0; i !== a.length; ++i) {
    if (a[i] !== b[i]) return false;
  }
  return true;
};

var escapeRegexpString = function escapeRegexpString() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  return String(value).replace(/[|\\{}()[\]^$+*?.]/g, "\\$&");
};

// TODO: use native Array.find, Array.findIndex when IE support is dropped
var arrayFindIndex = function arrayFindIndex(arr, pred) {
  for (var i = 0; i !== arr.length; ++i) {
    if (pred(arr[i])) {
      return i;
    }
  }
  return -1;
};

var arrayFind = function arrayFind(arr, pred) {
  var idx = arrayFindIndex(arr, pred);
  return idx !== -1 ? arr[idx] : undefined;
};

// coerce truthy value to array
var coerceTruthyValueToArray = function coerceTruthyValueToArray(val) {
  if (Array.isArray(val)) {
    return val;
  } else if (val) {
    return [val];
  } else {
    return [];
  }
};

var util_isIE = function isIE() {
  return !external_vue_default.a.prototype.$isServer && !isNaN(Number(document.documentMode));
};

var util_isEdge = function isEdge() {
  return !external_vue_default.a.prototype.$isServer && navigator.userAgent.indexOf("Edge") > -1;
};

var autoprefixer = function autoprefixer(style) {
  if ((typeof style === "undefined" ? "undefined" : _typeof(style)) !== "object") return style;
  var rules = ["transform", "transition", "animation"];
  var prefixes = ["ms-", "webkit-"];
  rules.forEach(function (rule) {
    var value = style[rule];
    if (rule && value) {
      prefixes.forEach(function (prefix) {
        style[prefix + rule] = value;
      });
    }
  });
  return style;
};

var kebabCase = function kebabCase(str) {
  var hyphenateRE = /([^-])([A-Z])/g;
  return str.replace(hyphenateRE, "$1-$2").replace(hyphenateRE, "$1-$2").toLowerCase();
};

var util_capitalize = function capitalize(str) {
  if (!isString(str)) return str;
  return str.charAt(0).toUpperCase() + str.slice(1);
};

var util_looseEqual = function looseEqual(a, b) {
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    return JSON.stringify(a) === JSON.stringify(b);
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
};

var arrayEquals = function arrayEquals(arrayA, arrayB) {
  arrayA = arrayA || [];
  arrayB = arrayB || [];

  if (arrayA.length !== arrayB.length) {
    return false;
  }

  for (var i = 0; i < arrayA.length; i++) {
    if (!util_looseEqual(arrayA[i], arrayB[i])) {
      return false;
    }
  }

  return true;
};

var isEqual = function isEqual(value1, value2) {
  if (Array.isArray(value1) && Array.isArray(value2)) {
    return arrayEquals(value1, value2);
  }
  return util_looseEqual(value1, value2);
};

var isEmpty = function isEmpty(val) {
  // null or undefined
  if (val == null) return true;

  if (typeof val === "boolean") return false;

  if (typeof val === "number") return !val;

  if (val instanceof Error) return val.message === "";

  switch (Object.prototype.toString.call(val)) {
    // String or Array
    case "[object String]":
    case "[object Array]":
      return !val.length;

    // Map or Set or File
    case "[object File]":
    case "[object Map]":
    case "[object Set]":
      {
        return !val.size;
      }
    // Plain Object
    case "[object Object]":
      {
        return !Object.keys(val).length;
      }
  }

  return false;
};

/***/ })

/******/ });