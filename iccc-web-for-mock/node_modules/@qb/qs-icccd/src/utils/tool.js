/**
 * 工具方法
 */
import { MessageBox } from 'ui-component-v4';

/**
 * 当前系统时间
 * */
function generateCurrentDate() {
  let nowDate = new Date();
  let weekday = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];
  let date = {
    year: nowDate.getFullYear(),
    month: nowDate.getMonth() + 1,
    date: nowDate.getDate(),
    week: nowDate.getDay()
  };
  let mon = date.month < 10 ? '0' + date.month : date.month;
  let dat = date.date < 10 ? '0' + date.date : date.date;
  return date.year + '-' + mon + '-' + dat + ' ' + ' ' + weekday[date.week];
}

/**
 * 二次确认弹框
 * @param {Object} option 配置
 */
function confirm(option) {
  const defaultOption = {
    cancelButtonClass: 'btn-custom-cancel',
    confirmButtonText: '是',
    cancelButtonText: '否',
    type: 'warning'
  };
  if (typeof option === 'string') {
    option = {
      message: option
    };
  }
  return MessageBox.confirm(option.message || '是否继续？', option.title || '提示', {
    ...defaultOption,
    ...option
  });
}

function alert(option) {
  const defaultOption = {
    confirmButtonText: '确定',
    type: 'info'
  };
  if (typeof option === 'string') {
    option = {
      message: option
    };
  }
  return MessageBox.alert(option.message, option.title || '提示', {
    ...defaultOption,
    ...option
  });
}

/**
 * 生成随机字符串作为key
 * @param len
 * @return {string}
 */
function generateKey(len = 32) {
  const $chars = 'abcdefhijkmnprstwxyz2345678';
  const result = [];
  for (let i = 0; i < len; i++) {
    result.push($chars.charAt((Math.random() * 27) << 0));
  }
  return result.join('');
}

/**
 * This is just a simple version of deep copy
 * Has a lot of edge cases bug
 * If you want to use a perfect deep copy, use lodash's _.cloneDeep
 */
function deepClone(source) {
  if (!source && typeof source !== 'object') {
    throw new Error('error arguments', 'shallowClone');
  }
  const targetObj = source.constructor === Array ? [] : {};
  Object.keys(source).forEach(keys => {
    if (source[keys] && typeof source[keys] === 'object') {
      targetObj[keys] = deepClone(source[keys]);
    } else {
      targetObj[keys] = source[keys];
    }
  });
  return targetObj;
}

export { generateCurrentDate, confirm, alert, generateKey, deepClone };
export default {
  generateCurrentDate,
  confirm,
  alert,
  generateKey,
  deepClone
};
