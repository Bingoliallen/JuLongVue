/**
 * Created by hecg on 2020/10/21.
 */
const fs = require('fs');
const {
  util,
  sceneId,
  T_MANAGE_SCENE_MODULE,
  T_MANAGE_MODULE_COMPONENT,
  T_MANAGE_COMPONENT,
  T_MANAGE_MODULE_CONFIG,
  getPublish
} = require('./data-save.cjs');

const internal = {
  writeFile(sql) {
    console.info('开始写入SQL');
    fs.writeFile('场景配置数据.sql', sql, { encoding: 'utf-8' }, function(e) {
      if (e) {
        throw e;
      }
      console.info('写入SQL成功！');
    });
  },
  all() {
    const result = [
      this.T_MANAGE_SCENE_MODULE(),
      this.T_MANAGE_MODULE_COMPONENT(),
      this.T_MANAGE_MODULE_CONFIG(),
      this.T_MANAGE_COMPONENT(),
      this.T_MANAGE_SCENE_RELEASE()
    ];

    console.info('写入全部');
    this.writeFile(result.join('\n'));
  },
  fb() {
    this.writeFile(this.T_MANAGE_SCENE_RELEASE());
  },
  /**
   * @return {string} SQL
   */
  T_MANAGE_SCENE_MODULE() {
    const result = [];

    result.push('-- ----场景模块表-start----');
    result.push('-- ----删除旧数据----');
    result.push(`DELETE FROM T_MANAGE_SCENE_MODULE WHERE SCENE_ID = '${sceneId}';`);
    // id name order_num parent_id scene_id embed_code
    // 场景模块表（步骤条）
    result.push('-- ----添加新数据----');
    T_MANAGE_SCENE_MODULE.forEach(({ id, name, code }, index) => {
      result.push(
        `insert into T_MANAGE_SCENE_MODULE (ID, NAME, ORDER_NUM, PARENT_ID, SCENE_ID, EMBED_CODE)
  values ('${id}', '${name}', '${index}', '', '${sceneId}', '${code}');`
      );
    });
    result.push('-- ----场景模块表-end----\n');

    return result.join('\n');
  },
  /**
   * @return {string} SQL
   */
  T_MANAGE_MODULE_COMPONENT() {
    const result = [];

    result.push('-- ----场景模块组件定义表-start----');
    result.push('-- ----删除旧数据----');
    result.push(`DELETE FROM T_MANAGE_MODULE_COMPONENT WHERE SCENE_ID = '${sceneId}';`);
    // id scene_id module_id component_id type order_num
    // 场景模块组件定义表（左侧组件列表）
    result.push('-- ----添加新数据----');
    T_MANAGE_MODULE_COMPONENT.forEach(({ modelId, componentId, type }, index) => {
      result.push(
        `insert into T_MANAGE_MODULE_COMPONENT (ID, SCENE_ID, MODULE_ID, COMPONENT_ID, TYPE, ORDER_NUM)
  values ('${util.generateKey()}', '${sceneId}', '${modelId}', '${componentId}', '${type}', '${index}');`
      );
    });
    result.push('-- ----场景模块组件定义表-end----\n');

    return result.join('\n');
  },
  /**
   * @return {string} SQL
   */
  T_MANAGE_MODULE_CONFIG() {
    const result = [];

    result.push('-- ----场景模块表-start----');
    result.push('-- ----删除旧数据----');
    result.push(`DELETE FROM T_MANAGE_MODULE_CONFIG WHERE SCENE_ID = '${sceneId}';`);
    // id name scene_id module_id componet_id order_num options
    // 模块配置表（页面中间）
    result.push('-- ----添加新数据-----');
    T_MANAGE_MODULE_CONFIG.forEach(({ modelId, componentId, order, option }) => {
      result.push(
        `insert into T_MANAGE_MODULE_CONFIG (ID, NAME, SCENE_ID, MODULE_ID, COMPONENT_ID, ORDER_NUM, OPTIONS)
  values ('${util.generateKey()}', '${''}', '${sceneId}', '${modelId}', '${componentId}', '${order}', '${JSON.stringify(
          option
        )}');`
      );
    });
    result.push('-- ----模块配置表-end----\n');

    return result.join('\n');
  },
  /**
   * @return {string} SQL
   */
  T_MANAGE_SCENE_RELEASE() {
    const result = [];

    result.push('-- ----场景发布表-start----');
    result.push('-- ----删除旧数据----');
    result.push(`DELETE FROM T_MANAGE_SCENE_RELEASE WHERE SCENE_ID = '${sceneId}';`);
    // id scene_id scene_config version release_time release_name release_unit
    // 场景发布表
    result.push('-- ----添加新数据----');
    result.push(
      `insert into T_MANAGE_SCENE_RELEASE (ID, SCENE_ID, SCENE_CONFIG, VERSION, RELEASE_TIME, RELEASE_NAME, RELEASE_UNIT)
  values ('${util.generateKey()}', '${sceneId}', '', '0', '${new Date().getTime()}', 'DEV', 'DEV');`
    );
    result.push('-- --场景发布表数据太长插入不了，把下面一行复制进去------');
    result.push(`-- ${JSON.stringify(getPublish())}`);
    result.push('-- ----场景发布表-end----\n');

    return result.join('\n');
  },
  /**
   * 组件配置项
   * @return {string} SQL
   */
  T_MANAGE_COMPONENT() {
    const result = [];

    result.push('-- ----组件配置项-start----');
    result.push('-- ----删除旧数据----');
    result.push(`DELETE FROM T_MANAGE_COMPONENT;`);
    // id name type options
    // 组件配置项（右侧）
    result.push('-- ----添加新数据----');
    T_MANAGE_COMPONENT.forEach(({ id, option }) => {
      const { label, type } = T_MANAGE_MODULE_COMPONENT.find(e => e.componentId === id);
      result.push(
        `insert into T_MANAGE_COMPONENT (ID, NAME, TYPE, OPTIONS)
  values ('${id}', '${label}', '${type}', '${JSON.stringify(option)}');`
      );
    });
    result.push('-- ----组件配置项-end----\n');

    return result.join('\n');
  }
};

const args = process.argv.splice(2);
if (args.length === 0 || args.indexOf('all') !== -1) {
  internal.all();
} else if (args.indexOf('fb') !== -1) {
  internal.fb();
}
