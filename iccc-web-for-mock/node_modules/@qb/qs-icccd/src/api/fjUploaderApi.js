/**
 * 文件上传
 * create on 2020-10-22 09:45:42
 */
import request from '@icccdPath/utils/request';
import qs from 'qs';

let api = {
  /**
   * deletFiles
   * @param type String
   * 		type
   * @param ids String
   * 		ids
   */
  deletFiles: function(type, ids) {
    // 组装请求参数，并返回请求实例
    let submitData = {};
    submitData.type = type;
    submitData.ids = ids;
    return request({
      url: `/fjUploader/deletFiles`,
      method: 'post',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: qs.stringify(submitData),
      loading: false
    });
  },
  /**
   * multiDownload
   * @param ids String
   * 		ids
   * @param multiFileName String
   * 		multiFileName
   */
  multiDownload: function(ids, multiFileName) {
    // 组装请求参数，并返回请求实例
    let submitData = {};
    submitData.multiFileName = multiFileName;
    return request({
      url: `/fjUploader/download/FJ/${ids}`,
      data: { params: submitData },
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      method: 'get',
      loading: false
    });
  },
  /**
   * download
   * @param type String
   * 		type
   * @param id String
   * 		id
   */
  download: function(type, id) {
    return request({
      url: `/fjUploader/download/${type}-${id}`,
      method: 'get',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      loading: false
    });
  },
  /**
   * loadFiles
   * @param type String
   * 		type
   * @param ids String
   * 		ids
   */
  loadFiles: function(type, ids) {
    // 组装请求参数，并返回请求实例
    let submitData = {};
    submitData.type = type;
    submitData.ids = ids;
    return request({
      url: `/fjUploader/loadFiles`,
      method: 'post',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: qs.stringify(submitData),
      loading: false
    });
  },
  /**
   * saveFiles
   * @param type String
   * 		type
   * @param ids String
   * 		ids
   */
  saveFiles: function(type, ids) {
    // 组装请求参数，并返回请求实例
    let submitData = {};
    submitData.type = type;
    submitData.ids = ids;
    return request({
      url: `/fjUploader/saveFiles`,
      method: 'post',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: qs.stringify(submitData),
      loading: false
    });
  },
  /**
   * upload
   * @param limitFileSize String
   * 		null
   * @param limitFileType String
   * 		null
   * @param file MultipartFile
   * 		file
   */
  upload: function(limitFileSize, limitFileType, file) {
    // 组装请求参数，并返回请求实例
    let submitData = new FormData();
    submitData.append('limitFileSize', limitFileSize);
    submitData.append('limitFileType', limitFileType);
    submitData.append('file', file);
    return request({
      url: `/fjUploader/upload`,
      method: 'post',
      headers: {
        'Content-Type': 'multipart/form-data',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: submitData,
      loading: false
    });
  },
  /**
   * uploadAndSave
   * @param limitFileSize String
   * 		null
   * @param limitFileType String
   * 		null
   * @param type String
   * 		type
   * @param file MultipartFile
   * 		file
   */
  uploadAndSave: function(limitFileSize, limitFileType, type, file) {
    // 组装请求参数，并返回请求实例
    let submitData = new FormData();
    submitData.append('limitFileSize', limitFileSize);
    submitData.append('limitFileType', limitFileType);
    submitData.append('type', type);
    submitData.append('file', file);
    return request({
      url: `/fjUploader/uploadAndSave/${type}`,
      method: 'post',
      headers: {
        'Content-Type': 'multipart/form-data',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: submitData,
      loading: false
    });
  }
};
export default api;
