/**
 * 场景配置
 * @Author: libb
 * @Date: 2020-10-22
 * @Project bjsc-web
 */
import request from '@icccdPath/utils/request';
import qs from 'qs';

let api = {
  /**
   * 保存用户的当前场景
   * @param sceneId String
   * 		sceneid
   */
  saveCurrentScene: function(sceneId) {
    // 组装请求参数，并返回请求实例
    let submitData = {};
    submitData.sceneId = sceneId;
    return request({
      url: `/v1/user-extra-info/scene`,
      method: 'post',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: qs.stringify(submitData),
      loading: false
    });
  },
  /**
   * 新增场景
   * @param 场景vo SceneVo
   * 		sceneVo
   */
  add: function(vo) {
    return request({
      url: `/v1/scene/add`,
      method: 'post',
      headers: {
        'Content-Type': 'application/json;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: vo,
      loading: false
    });
  },
  /**
   * 删除场景
   * @param 场景id String
   * 		id
   * @param id String
   * 		id
   */
  delete: function(id) {
    return request({
      url: `/v1/scene/delete/${id}`,
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      loading: false
    });
  },
  /**
   * 场景初始化
   * @param 场景id String
   * 		id
   * @param 模板场景id String
   * 		templateId
   * @param 模板场景版本号 String
   * 		version
   */
  init: function(id, templateId, version) {
    // 组装请求参数，并返回请求实例
    let submitData = {};
    submitData.id = id;
    submitData.templateId = templateId;
    submitData.version = version;
    return request({
      url: `/v1/scene/init`,
      method: 'post',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: qs.stringify(submitData),
      loading: false
    });
  },
  /**
   * 查询场景详情
   * @param 场景id String
   * 		id
   * @param id String
   * 		id
   */
  load: function(id) {
    return request({
      url: `/v1/scene/load/${id}`,
      method: 'get',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      loading: false
    });
  },
  /**
   * 查询模块配置详情(用于模块配置页面)
   * @param 场景id String
   * 		id
   * @param id String
   * 		id
   */
  loadModelConfig: function(id) {
    return request({
      url: `/v1/scene/model/loadConfig/${id}`,
      method: 'get',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      loading: false
    });
  },
  /**
   * 场景模块配置保存
   * @param 模块配置项 ModelConfigVo
   * 		modelConfigVo
   */
  modelSave: function(vo) {
    return request({
      url: `/v1/scene/model/save`,
      method: 'post',
      headers: {
        'Content-Type': 'application/json;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: vo,
      loading: false
    });
  },
  /**
   * 获取场景发布信息(用于模块页面渲染)
   * @param 场景id String
   * 		id
   * @param id String
   * 		id
   */
  loadRelease: function(id) {
    return request({
      url: `/v1/scene/release/load/${id}`,
      method: 'get',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      loading: false
    });
  },
  /**
   * 场景发布
   * @param 场景id String
   * 		id
   * @param id String
   * 		id
   */
  publish: function(id) {
    return request({
      url: `/v1/scene/release/publish/${id}`,
      method: 'post',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: qs.stringify({}),
      loading: false
    });
  },
  /**
   * 修改场景
   * @param 场景vo SceneVo
   * 		sceneVo
   */
  update: function(vo) {
    return request({
      url: `/v1/scene/update`,
      method: 'put',
      headers: {
        'Content-Type': 'application/json;charset=UTF-8',
        appVersion: '1.0.0',
        framework: 'qb'
      },
      data: vo,
      loading: false
    });
  }
};
export default api;
