/**
 * dcuc,dids,dssoac登录
 * @Author: huangjq
 * @Date:   2019-10-16
 * @Project jz
 */
import Login from './abstract/AbsLoginApi';
import store from '@icccdPath/store';
import { getSetting } from '../../utils/sys-settings';
import { getToken } from '../../utils/auth';
import { Dialog } from 'ui-component-v4';
import Vue from 'vue';
class Oauth2Login extends Login {
  times = 0; // 设置超时弹窗时间 防止重复弹窗
  layerDialog = Dialog.layerDialog();
  constructor() {
    super();
  }

  judgeIsLogin() {}

  logout() {
    let logoutUrl = window.sessionStorage['authorizeUrl'] + `/logout?redirect_uri=${window.location.href}`;
    store.dispatch('LogoutOauth', logoutUrl).then(() => {
      let iframe = document.createElement('iframe');
      iframe.src = logoutUrl;
      iframe.style.display = 'none';
      document.body.appendChild(iframe);
      if (iframe.attachEvent) {
        iframe.attachEvent('onload', function() {
          window.location.reload();
        });
      } else {
        iframe.onload = function() {
          window.location.reload();
        };
      }
    });
  }

  beforeRequest(config) {
    if (store.getters.token) {
      // 让每个请求携带authorization-- ['authorization']为自定义key 请根据实际情况自行修改
      config.headers['access_token'] = getToken();
    }
    // config.headers["Content-Type"] = "application/x-www-form-urlencoded";
    return config;
  }

  afterResponseSuccess(response) {
    return response;
  }

  afterResponseFailed(error) {
    let the = this;
    let filter = new Promise(function(resolve) {
      if (error.config.responseType == 'blob') {
        let data = error.response.data;
        let fileReader = new FileReader();
        fileReader.onload = function() {
          try {
            let responseData = JSON.parse(this.result);
            error.response.data = responseData;
            resolve();
          } catch (err) {
            resolve();
          }
        };
        fileReader.readAsText(data);
      } else {
        resolve();
      }
    }).then(() => {
      if (error.response.status === 403 && error.response.data.statusCode === '403') {
        let link = error.response.data.link;
        !link && (link = error.response.data.authorizeUrl);
        sessionStorage['authorizeUrl'] = link;
        // Oauth2登录方式
        let paramArr = [];
        paramArr.push(`response_type=code`);
        paramArr.push(`client_id=${getSetting('CLIENT_ID')}`);
        paramArr.push(`is_oauth=1`);
        if (getSetting('LOGIN_PAGE')) paramArr.push(`loginPage=${getSetting('LOGIN_PAGE')}`);
        paramArr.push(
          `redirect_uri=${'http://' + window.location.host + '/' + encodeURIComponent(window.location.hash)}`
        );
        link += `/authorize?${paramArr.join('&')}`;
        link = link.replace('/authorize/authorize', '/authorize');
        if (getToken()) {
          the.timeOut(link);
        } else {
          window.location.href = link;
        }
        return { status: error.response.status, link };
      }
    });
    return filter;
  }

  timeOut(link) {
    let the = this;
    if (the.times <= 0) {
      let vueThis = new Vue();
      vueThis
        .$dgConfirm('登录超时，请重新进行登录!', '提示', {
          confirmButtonText: '确定',
          customClass: 'confirm_user',
          showCancelButton: false,
          closeOnClickModal: false,
          type: 'warning'
        })
        .then(() => {
          window.location.href = link;
        })
        .catch(() => {});
      // the.layerDialog({
      //     content: '<div class="bs-layer-hint"><i class="el-icon-warning is-warning" style="font-size: 20px"></i>登录超时!</div>',
      //     type:1,
      //     // 标题
      //     title: '提示',
      //     // 组件内容
      //     maxmin:false,
      //     area:["400px","233px"],
      //     btn: ['确定'],
      //     btnAlign:'c',
      //     resize:false,
      //     yes:function() {
      //         window.location.href = link;
      //     }
      // })
      the.times = 10;
      setTimeout(function() {
        the.times = 0;
      }, 30000);
    }
  }
}

export default Oauth2Login;
