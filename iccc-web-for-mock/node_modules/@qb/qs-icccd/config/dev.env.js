'use strict';
const merge = require('webpack-merge');
const prodEnv = require('./prod.env');
module.exports = merge(prodEnv, {
  NODE_ENV: '"development"',
  // DEVTOOL: '"cheap-module-eval-source-map"',
  IS_BASE_PACKAGE: 'true',
  FILE_BASE_PATH: '"http://192.168.10.14:1665"',
  // 以上配置一般不需要修改

  // 使用easymock时，请将BASE_API设置为'"/easy-mock"'
  BASE_API: '"/bjsc-imitate_tpl"',
  NOAH_ARK: '"/noah_ark/dubbo"',
  // 是否需要登录验证
  NEED_LOGIN: 'true',
  MOUDLE_CONFIG: {
    NOAH_ARK: '"dubbo"'
  },
  // 需要依赖的系统名称
  // INSTALLED_PROJECT: "'zfba,demo2,cross-env'",

  // 当使用Oauth2方式登录时需要配置CLIENT_ID和CLIENT_SECRET
  IS_OAUTH2: 'true',
  CLIENT_ID: '"apigw91419331"',
  CLIENT_SECRET: '"apigw94003010"',
  APP_CODE: '"apigw10000003"',
  LOGIN_PAGE: '"bjscLogin.jsp"',

  PROXY_TABLE: JSON.stringify({
    '/qb-bjsc': {
      target: 'http://10.201.3.20:8891',
      pathRewrite: {}
    },
    '/scenes_mock': {
      target: 'http://192.168.10.14:7300/mock/5dc05df68b1915be74d20988/bjsc-imitate_tpl',
      pathRewrite: {
        '^/scenes_mock': ''
      }
    },
    '/nzdr_mock': {
      target: 'http://192.168.10.14:7300/mock/5fc4a6a2761ab76e2458efe1/qz-nzdr',
      pathRewrite: {
        '^/nzdr_mock': ''
      }
    },
    '/gateway': {
      target: 'http://10.201.3.20:8891',
      pathRewrite: {
        '^/gateway': ''
      }
    },
    '/noah_ark': {
      target: 'http://10.201.3.20:8891'
    },
    '/bjsc-imitate_tpl': {
      target: 'http://192.168.10.14:7300/mock/5dc05df68b1915be74d20988/bjsc-imitate_tpl',
      pathRewrite: {
        '^/bjsc-imitate_tpl': ''
      }
    },
    '/setting-center': {
      target: 'http://192.168.10.9:8070/openapi/v1/envs/dev/apps/test-190701-1700/clusters/default/namespaces',
      pathRewrite: {
        '^/setting-center': ''
      }
    }
  })
});
